---
title: "Mastering Rows: Selecting by Index in R"
author: "Steven P. Sanderson II, MPH"
date: "2024-04-11"
categories: [code, rtip, operations]
---

# Introduction

Let's jump into data manipulation with R! Selecting specific rows from our datasets is an important skill. Today, we'll focus on subsetting rows by index, using the trusty square brackets (`[]`).

First, we'll load a dataset containing car characteristics:

```{r}
mtcars.data <- mtcars
```

This code loads the `mtcars` dataset (containing car data) into a new variable, `mtcars.data`. Now, we'll explore how to target specific rows.

# Examples

## Example 1: Selecting a Single Row by Index

Imagine you want to analyze the fuel efficiency (miles per gallon) of a particular car. Here's how to grab a single row by its index (row number):

```{r}
# Select the 5th row (remember indexing starts from 1!)
specific.car <- mtcars.data[5,]
specific.car
```

### Explanation:

- `mtcars.data`: This is our data frame, containing all the car information.
- `[]`: These are the square brackets, used for subsetting.
- `5`: This is the index of the row we want. Since indexing starts from 1, the 5th row will be selected.
- `,`: The comma tells R to select all columns (everything) from that row.

**Try it yourself!** Select the 10th row and see what car it represents.

## Example 2: Selecting Multiple Rows by Index

Let's say you're interested in comparing fuel efficiency (miles per gallon) of a few specific cars. We can use a vector of indices to grab multiple rows at once:

```{r}
# Select the 3rd, 7th, and 12th rows
few.cars <- mtcars.data[c(3, 7, 12),]
few.cars
```

### Explanation:

- We use `c()` to create a vector containing the desired row indices: 3, 7, and 12.
- Everything else remains the same as the previous example.

**Challenge yourself!** Create a vector to select the last 5 rows and analyze their horsepower.

## Example 3: Selecting Rows Using a Range of Indices

Sometimes, you want to analyze a group of consecutive cars. Here's how to select a range using the colon (`:`) operator:

```{r}
# Select rows from 8 to 15 (inclusive)
car.slice <- mtcars.data[8:15,]
car.slice
```

### Explanation:

- `8:15`: This specifies the range of rows we want. Here, we select from row 8 (inclusive) to row 15 (inclusive).

**Now it's your turn!** Select rows 1 to 10 and explore the distribution of the number of cylinders.

Remember, practice is key! Experiment with different indices and ranges to become comfortable with subsetting rows in R. As you work with more datasets, you'll master these techniques and become a data wrangling pro.

Happy coding!