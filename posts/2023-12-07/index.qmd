---
title: "Unraveling Patterns: A Step-by-Step Guide to Piecewise Regression in R"
author: "Steven P. Sanderson II, MPH"
date: "2023-12-07"
categories: [rtip, regression]
---

# Introduction

Hey there, fellow R enthusiasts! Today, let's embark on a fascinating journey into the realm of piecewise regression using R. If you've ever wondered how to uncover hidden trends and breakpoints in your data, you're in for a treat. Buckle up, and let's dive into the world of piecewise regression!

# Piecewise Regression

Piecewise regression is a powerful technique that allows us to model distinct segments of a dataset with different linear relationships. It's like fitting multiple straight lines to capture the nuances of different regions in your data. So, grab your virtual lab coat, and let's get started.

# Example

## Step 1: Load Your Data and Libraries

```{r warning=FALSE, message=FALSE}
# Install and load necessary packages
# install.packages("segmented")
library(segmented)

# Sample data
set.seed(123)
x <- 1:100
y <- 2 + 1.5 * pmax(x - 35, 0) - 1.5 * pmax(x - 70, 0) + rnorm(100)

# Combine data
data <- data.frame(x, y)
```

## Step 2: Explore Your Data

Before diving into the regression, let's take a peek at our data. Visualizing the data often provides insights into potential breakpoints.

```{r}
# Scatter plot to visualize the data
plot(
  data$x, data$y, 
  main = "Scatter Plot of Your Data",
  xlab = "Independent Variable (x)", 
  ylab = "Dependent Variable (y)")
```

## Step 3: Perform Piecewise Regression

Now, the exciting part! Let's fit our piecewise regression model using the `segmented` package.

```{r}
# Fit the piecewise regression model
model <- lm(y ~ x, data = data)
segmented_model <- segmented(model, seg.Z = ~x)
```

## Step 4: Visualize the Results:

To truly understand the magic happening, let's visualize the fitted model and residuals.

```{r}
seg_preds <- predict(segmented_model)
seg_res <- y - seg_preds

# Plot the original data with the fitted model
plot(
  data$x, data$y,
  main = "Piecewise Regression Fit",
  xlab = "Independent Variable (x)",
  ylab = "Dependent Variable (y)",
  col = "blue"
)
lines(data$x, seg_preds,col = "red", lwd = 2)

# Plot residuals
# Plot the residuals for each segment
plot(x, seg_res, main = "Residuals")
abline(h = 0, col = "red")
```

## Step 5: Interpret the Breakpoints:

Inspecting the segmented model will reveal the breakpoints and the corresponding regression lines. It's like deciphering the story your data is trying to tell.

```{r}
# View breakpoints and coefficients
summary(segmented_model)
```

## Step 6: Encourage Exploration:

Now that you've conquered piecewise regression, encourage your fellow data explorers to try it themselves. Challenge them to apply this technique to their datasets and share their insights.

# Conclusion

Congratulations, you've just unlocked the power of piecewise regression in R! By visualizing data, fitting models, and exploring breakpoints, you've gained a valuable tool for understanding complex relationships. Keep coding, keep exploring, and stay curious!

Happy coding, and may your data always reveal its secrets!

Steven P. Sanderson II, MPH