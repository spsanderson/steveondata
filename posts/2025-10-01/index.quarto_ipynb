{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Working with CSV Files and JSON Data in Python\"\n",
        "author: \"Steven P. Sanderson II, MPH\"\n",
        "date: \"2025-10-01\"\n",
        "categories: [code, python]\n",
        "toc: TRUE\n",
        "description: \"Learn how to read, write, and convert CSV and JSON files in Python with beginner friendly examples. This guide covers practical code snippets, tips for using the csv and json modules, and a hands on activity to help you master data handling in Python.\"\n",
        "keywords: [Programming, csv files, json data, python data handling, read and write csv python, convert csv to json python, beginner python csv tutorial, python json module example, csv vs json in python, pandas read_csv guide, how to manipulate structured data in python, how to convert csv file to json in python, beginner python script for reading csv and writing json, step by step guide to csv and json handling in python, python code example for csv to json conversion, working with structured data formats in python for beginners]\n",
        "---\n",
        "\n",
        "*Authors Note: I am learning as I write this series, so I might make mistakes or do things that are not as efficient as they could be.*\n",
        "\n",
        "# Introduction\n",
        "\n",
        "Python offers straightforward ways to handle CSV and JSON files, two common formats for storing and exchanging data. This guide shows how to read, write, and convert between these formats using Python's built-in tools and popular libraries.\n",
        "\n",
        "# Reading and Writing CSV Files\n",
        "\n",
        "Python's `csv` module provides simple methods for CSV operations:\n",
        "\n",
        "``` python\n",
        "import csv\n",
        "\n",
        "# Reading a CSV file\n",
        "with open('data.csv') as file:\n",
        "    reader = csv.reader(file)\n",
        "    for row in reader:\n",
        "        print(row)\n",
        "\n",
        "# Writing to CSV\n",
        "with open('output.csv', 'w') as file:\n",
        "    writer = csv.writer(file)\n",
        "    writer.writerow(['Name', 'Age'])\n",
        "    writer.writerow(['Alice', 30])\n",
        "```\n",
        "\n",
        "For more advanced data handling, the pandas library simplifies CSV operations:\n",
        "\n",
        "``` python\n",
        "import pandas as pd\n",
        "\n",
        "# Read CSV into a DataFrame\n",
        "data = pd.read_csv('data.csv')\n",
        "\n",
        "# Write DataFrame to CSV\n",
        "data.to_csv('output.csv', index=False)\n",
        "```\n",
        "\n",
        "# Working with JSON Data\n",
        "\n",
        "Python's `json` module makes JSON operations simple:\n",
        "\n",
        "``` python\n",
        "import json\n",
        "\n",
        "# Reading JSON\n",
        "with open('data.json') as file:\n",
        "    data = json.load(file)\n",
        "\n",
        "# Writing JSON\n",
        "with open('output.json', 'w') as file:\n",
        "    json.dump(data, file, indent=4)\n",
        "```\n",
        "\n",
        "# Converting Between CSV and JSON\n",
        "\n",
        "Converting between formats is straightforward:\n",
        "\n",
        "**CSV to JSON:**\n",
        "\n",
        "``` python\n",
        "import csv, json\n",
        "\n",
        "csv_data = []\n",
        "with open('data.csv') as file:\n",
        "    reader = csv.DictReader(file)\n",
        "    for row in reader:\n",
        "        csv_data.append(row)\n",
        "\n",
        "with open('output.json', 'w') as file:\n",
        "    json.dump(csv_data, file, indent=4)\n",
        "```\n",
        "\n",
        "**JSON to CSV:**\n",
        "\n",
        "``` python\n",
        "import csv, json\n",
        "\n",
        "with open('data.json') as file:\n",
        "    json_data = json.load(file)\n",
        "\n",
        "with open('output.csv', 'w') as file:\n",
        "    writer = csv.DictWriter(file, fieldnames=json_data[0].keys())\n",
        "    writer.writeheader()\n",
        "    writer.writerows(json_data)\n",
        "```\n",
        "\n",
        "# Your Turn!\n",
        "\n",
        "1.  Create a CSV file with sample data (name, email, age)\n",
        "2.  Write a Python script to convert it to JSON\n",
        "3.  Modify the JSON data by adding a new field\n",
        "4.  Convert the modified JSON back to CSV\n",
        "\n",
        "<details>\n",
        "\n",
        "<summary>Solution Example</summary>"
      ],
      "id": "a67b1085"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Step 1: Create sample CSV\n",
        "import csv\n",
        "data = [['name','email','age'],\n",
        "        ['Alice','alice@example.com',28],\n",
        "        ['Bob','bob@example.com',35]]\n",
        "with open(r'C:\\Users\\steve\\Documents\\GitHub\\steveondata\\posts\\2025-10-01\\sample.csv', 'w') as f:\n",
        "    writer = csv.writer(f)\n",
        "    writer.writerows(data)\n",
        "\n",
        "# Step 2: Convert to JSON\n",
        "import json\n",
        "with open(r'C:\\Users\\steve\\Documents\\GitHub\\steveondata\\posts\\2025-10-01\\sample.csv') as f:\n",
        "    reader = csv.DictReader(f)\n",
        "    rows = list(reader)\n",
        "with open(r'C:\\Users\\steve\\Documents\\GitHub\\steveondata\\posts\\2025-10-01\\sample.json', 'w') as f:\n",
        "    json.dump(rows, f, indent=2)\n",
        "\n",
        "# Step 3: Add new field\n",
        "with open(r'C:\\Users\\steve\\Documents\\GitHub\\steveondata\\posts\\2025-10-01\\sample.json') as f:\n",
        "    data = json.load(f)\n",
        "for item in data:\n",
        "    item['status'] = 'active'\n",
        "with open(r'C:\\Users\\steve\\Documents\\GitHub\\steveondata\\posts\\2025-10-01\\updated.json', 'w') as f:\n",
        "    json.dump(data, f, indent=2)\n",
        "\n",
        "# Step 4: Convert back to CSV\n",
        "with open(r'C:\\Users\\steve\\Documents\\GitHub\\steveondata\\posts\\2025-10-01\\updated.json') as f:\n",
        "    data = json.load(f)\n",
        "with open(r'C:\\Users\\steve\\Documents\\GitHub\\steveondata\\posts\\2025-10-01\\final.csv', 'w') as f:\n",
        "    writer = csv.DictWriter(f, fieldnames=data[0].keys())\n",
        "    writer.writeheader()\n",
        "    writer.writerows(data)"
      ],
      "id": "d685cf5b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "</details>\n",
        "\n",
        "# Key Points\n",
        "\n",
        "-   The `csv` module handles basic CSV operations\n",
        "-   pandas provides advanced CSV capabilities\n",
        "-   JSON works naturally with Python dictionaries\n",
        "-   Conversion between formats is simple with the right tools\n",
        "\n",
        "# References\n",
        "\n",
        "-   [**Python csv module documentation**](https://docs.python.org/3/library/csv.html) - Official documentation for Python's built-in CSV handling capabilities\n",
        "-   [**Python json module documentation**](https://docs.python.org/3/library/json.html) - Official guide for working with JSON data in Python\n",
        "-   [**pandas read_csv documentation**](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html) - Complete reference for reading CSV files into DataFrames\n",
        "-   [**pandas to_csv documentation**](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_csv.html) - Detailed guide for writing DataFrames to CSV files\n",
        "\n",
        "------------------------------------------------------------------------\n",
        "\n",
        "Happy Coding! ðŸš€\n",
        "\n",
        "![CSV and JSON with Python](todays_post.png)\n",
        "\n",
        "------------------------------------------------------------------------\n",
        "\n",
        "*You can connect with me at any one of the below*:\n",
        "\n",
        "*Telegram Channel here*: <https://t.me/steveondata>\n",
        "\n",
        "*LinkedIn Network here*: <https://www.linkedin.com/in/spsanderson/>\n",
        "\n",
        "*Mastadon Social here*: [https://mstdn.social/\\@stevensanderson](https://mstdn.social/@stevensanderson)\n",
        "\n",
        "*RStats Network here*: [https://rstats.me/\\@spsanderson](https://rstats.me/@spsanderson)\n",
        "\n",
        "*GitHub Network here*: <https://github.com/spsanderson>\n",
        "\n",
        "*Bluesky Network here*: <https://bsky.app/profile/spsanderson.com>\n",
        "\n",
        "*My Book: Extending Excel with Python and R* here: <https://packt.link/oTyZJ>\n",
        "\n",
        "*You.com Referral Link*: <https://you.com/join/EHSLDTL6>\n",
        "\n",
        "------------------------------------------------------------------------\n",
        "\n",
        "```{=html}\n",
        "<script src=\"https://giscus.app/client.js\"\n",
        "        data-repo=\"spsanderson/steveondata\"\n",
        "        data-repo-id=\"R_kgDOIIxnLw\"\n",
        "        data-category=\"Comments\"\n",
        "        data-category-id=\"DIC_kwDOIIxnL84ChTk8\"\n",
        "        data-mapping=\"url\"\n",
        "        data-strict=\"0\"\n",
        "        data-reactions-enabled=\"1\"\n",
        "        data-emit-metadata=\"0\"\n",
        "        data-input-position=\"top\"\n",
        "        data-theme=\"dark\"\n",
        "        data-lang=\"en\"\n",
        "        data-loading=\"lazy\"\n",
        "        crossorigin=\"anonymous\"\n",
        "        async>\n",
        "</script>\n",
        "```"
      ],
      "id": "a710a954"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\ssanders\\AppData\\Local\\Programs\\Python\\Python313\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}