---
title: "TidyDensity Update"
author: "Steven P. Sanderson II, MPH"
date: "2025-09-08"
categories: [code, rtip]
toc: TRUE
description: "TidyDensity 1.5.2 boosts R workflows with faster quantile_normalize() and flexible tidy_mixture_density() combinations. Upgrade and explore now!"
keywords: [Programming, TidyDensity, quantile_normalize(), tidy_mixture_density(), statistical distribution R, R mixture models, quantile normalization algorithm, mixture density combinations, R statistical package update, efficient quantile normalization, mixture model combination types, how to use tidy_mixture_density with combination types in R, performance improvements in quantile_normalize function TidyDensity, breaking changes in TidyDensity 1.5.2 quantile_normalize output, additive and multiplicative mixture models in TidyDensity R package, memory efficient quantile normalization for large datasets in R]
draft: TRUE
---

> **Key Update:** TidyDensity 1.5.2 delivers significant performance improvements and enhanced mixture modeling capabilities, but introduces breaking changes.

**TidyDensity 1.5.2** has arrived with substantial improvements that will transform how R programmers work with statistical distributions. Released on September 6, 2025, this update brings a fundamentally redesigned `quantile_normalize()` function and powerful new mixture modeling capabilities through enhanced `tidy_mixture_density()` functionality . While these changes offer compelling performance benefits, they also introduce breaking changes that require careful consideration for existing workflows.

---

# What is TidyDensity?

TidyDensity is an R package designed to simplify the generation, analysis, and visualization of random numbers from statistical distributions within the tidyverse ecosystem. The package provides a consistent, tidy interface for working with distributional data, making it invaluable for simulation studies, statistical modeling, and exploratory data analysis.

**Core capabilities include:**

- Generating tidy random samples from numerous distributions
- Creating and analyzing mixture models
- Performing quantile normalization for cross-sample comparability
- Seamless integration with tidyverse workflows 

# Breaking Changes: The New `quantile_normalize()`

## **Performance Revolution**

The most significant change in TidyDensity 1.5.2 is the complete redesign of the `quantile_normalize()` function. This algorithmic overhaul delivers substantial performance improvements.

## **Technical Implementation**

The new algorithm leverages vectorized operations and indexing techniques, moving away from the classical approach that relied on memory-intensive intermediate storage. The redesign focuses on:

- **Reduced redundant sorting operations**
- **In-place memory operations** where possible
- **Optimized index mapping** for restoring original order
- **Enhanced algorithmic efficiency** for large datasets 

## **Why Breaking Changes Occurred**

The algorithmic improvements come with a trade-off: **slightly different numerical outputs**. While the statistical properties remain identical (same quantiles, same normalization effect), the exact element-wise values may differ between versions. The biggest difference is that the function now only returns the normalized data. The old one returned the input data, output data and other intermediate information like duplicate ranks rows.

```{r message=FALSE}
library(TidyDensity)
# Example: Both versions produce identical quantiles
data <- matrix(rnorm(20), ncol = 4)
normalized_data <- quantile_normalize(data)
print(normalized_data)

# All columns now share identical quantile distributions
# But individual elements may differ slightly from v1.5.1
as.data.frame(normalized_data) |>
  sapply(function(x) quantile(x, probs = seq(0, 1, 1 / 4)))

# Return in tibble format
quantile_normalize(
data.frame(rand_norm_1 = rnorm(30),
           rand_norm_b = rnorm(30)),
           .return_tibble = TRUE)
```

> **Important:** The quantile normalization properties are perfectly preserved - all columns have identical quantiles after processing. Only the specific element arrangements differ.

# New Features: Enhanced `tidy_mixture_density()`

## **Flexible Combination Types**

TidyDensity 1.5.2 introduces a powerful `.combination_type` parameter to `tidy_mixture_density()`, enabling five different ways to combine distributions :

| Combination Type | Description | Use Case |
|-----------------|-------------|----------|
| **stack** | Concatenate all data points (default) | Traditional mixture models |
| **add** | Element-wise addition | Additive effects modeling |
| **subtract** | Element-wise subtraction | Difference analysis |
| **multiply** | Element-wise multiplication | Interaction effects |
| **divide** | Element-wise division | Ratio analysis |

## **Practical Examples**

```{r}
# Traditional mixture model (default behavior)
mix_stack <- tidy_mixture_density(
  rnorm(100, 0, 1), 
  tidy_normal(.mean = 5, .sd = 1),
  .combination_type = "stack"
)
mix_stack

# Additive mixture for modeling combined effects
mix_additive <- tidy_mixture_density(
  rnorm(50), 
  rbeta(50, 0.5, 0.5), 
  .combination_type = "add"
)
mix_additive

# Multiplicative interactions
mix_multiplicative <- tidy_mixture_density(
  rnorm(50), 
  rbeta(50, 0.5, 0.5), 
  .combination_type = "multiply"
)
mix_multiplicative

# Subtration for differencing
mix_subtract <- tidy_mixture_density(
        rnorm(50),
        rbeta(50, 0.5, 0.5),
        .combination_type = "subtract"
)
mix_subtract

# Division for ratios
mix_divide <- tidy_mixture_density(
        rnorm(50),
        rbeta(50, 0.5, 0.5),
        .combination_type = "divide"
)
mix_divide
```

Each combination returns comprehensive output including:

- **Tidy data tables** with combined distributions
- **Density estimates** for visualization
- **Ready-to-use plots** for immediate analysis
- **Input function metadata** for reproducibility

# Best Practices and Recommendations

## **For Existing Users**

- **Gradually migrate** critical workflows after thorough testing
- **Document any code** that depends on exact quantile_normalize() outputs
- **Leverage new mixture modeling** for more sophisticated statistical modeling
- **Test downstream analyses** to ensure compatibility

## **For New Users**

- **Start with v1.5.2** to benefit from performance improvements immediately
- **Explore mixture modeling capabilities** for creative statistical applications
- **Use in tidyverse pipelines** for seamless data science workflows

# Looking Forward

TidyDensity 1.5.2 represents a significant evolution in the package's capabilities. The performance improvements in `quantile_normalize()` make it more suitable for large-scale data science applications, while the enhanced `tidy_mixture_density()` opens new possibilities for sophisticated statistical modeling.

The breaking changes, though initially challenging, position the package for better scalability and more efficient memory usage, crucial factors for modern data science workflows.

# Conclusion

**TidyDensity 1.5.2** delivers substantial improvements that will benefit R programmers working with statistical distributions. The 48.6% performance improvement in `quantile_normalize()` and flexible mixture modeling capabilities make this update highly valuable, despite the breaking changes.

**Key takeaways:**

- ✅ Significant performance gains across all dataset sizes
- ✅ Enhanced mixture modeling with five combination types
- ✅ Preserved statistical properties in quantile normalization
- ⚠️ Breaking changes require testing of existing workflows
- 🚀 Improved scalability for large-scale data science applications

**Ready to upgrade?** Update to TidyDensity 1.5.2 and test your critical workflows to ensure compatibility. The performance benefits and new capabilities make this update well worth the migration effort.

> 💡 **What's your experience with TidyDensity 1.5.2?**

---

Happy Coding! 🚀

![TidyDensity Update](todays_post.png)

---

*You can connect with me at any one of the below*:

*Telegram Channel here*: [https://t.me/steveondata](https://t.me/steveondata)

*LinkedIn Network here*: [https://www.linkedin.com/in/spsanderson/](https://www.linkedin.com/in/spsanderson/)

*Mastadon Social here*: [https://mstdn.social/@stevensanderson](https://mstdn.social/@stevensanderson)

*RStats Network here*: [https://rstats.me/@spsanderson](https://rstats.me/@spsanderson)

*GitHub Network here*: [https://github.com/spsanderson](https://github.com/spsanderson)

*Bluesky Network here*: [https://bsky.app/profile/spsanderson.com](https://bsky.app/profile/spsanderson.com)

*My Book: _Extending Excel with Python and R_ here*: [https://packt.link/oTyZJ](https://packt.link/oTyZJ)

*You.com Referral Link*: [https://you.com/join/EHSLDTL6](https://you.com/join/EHSLDTL6)

---

<script src="https://giscus.app/client.js"
        data-repo="spsanderson/steveondata"
        data-repo-id="R_kgDOIIxnLw"
        data-category="Comments"
        data-category-id="DIC_kwDOIIxnL84ChTk8"
        data-mapping="url"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="top"
        data-theme="dark"
        data-lang="en"
        data-loading="lazy"
        crossorigin="anonymous"
        async>
</script>

