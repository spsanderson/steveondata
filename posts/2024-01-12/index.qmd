---
title: "TidyDensity Powers Up with Data.table: Speedier Distributions for Your Data Exploration"
author: "Steven P. Sanderson II, MPH"
date: "2024-01-12"
categories: [code, benchmark, datatable, tidydensity]
---

# Calling all R enthusiasts who love tidy data and crave efficiency!

I'm thrilled to announce a major upgrade to the TidyDensity package that's sure to accelerate your data analysis workflows. We've integrated the lightning-fast `data.table` package for generating tidy distribution data, resulting in a **jaw-dropping 30% speed boost**. 

Here is one of the tests ran during development where v1 was the current and v2 was the version using `data.table`:

```R
n <- 10000
benchmark(
 "tidy_bernoulli_v2" = {
   tidy_bernoulli_v2(n, .5, 1, FALSE)
 },
 "tidy_bernoulli_v1" = {
   TidyDensity::tidy_bernoulli(n, .5, 1)
 },
 replications = 100,
 columns = c("test","replications","elapsed","relative","user.self","sys.self")
) |>
 arrange(relative)
               test replications elapsed relative user.self sys.self
1 tidy_bernoulli_v2          100    2.50    1.000      2.22     0.26
2 tidy_bernoulli_v1          100    4.67    1.868      4.34     0.31
```

# Here's what this means for you

- **Faster Generation of Distribution Data:** Whether you're working with normal, binomial, Poisson, or other distributions, TidyDensity now produces results more swiftly than ever. This means less waiting and more time for exploring insights.
- **Flexible Output Formats:** Choose the format that best suits your needs:
    - **Tibbles for Seamless Integration with Tidyverse:** Set `.return_tibble = TRUE` to receive the data as a tibble, ready for seamless interaction with your favorite tidyverse tools.
    - **data.table for Enhanced Performance:** Set `.return_tibble = FALSE` to harness the raw power of data.table objects for memory-efficient and lightning-fast operations.
- **Enjoy the Speed Boost, No Matter Your Choice:** The speed enhancement shines through regardless of your preferred output format, as the data generation itself leverages `data.table` under the hood.

# How to experience this boost

1. **Update TidyDensity:** Ensure you have the latest version installed: `install.packages("TidyDensity")`
2. **Choose Your Output Format:** Indicate your preference with the `.return_tibble` parameter:
   ```R
   # For a tibble:
   tidy_data <- tidy_normal(.return_tibble = TRUE)
  
   # For a data.table:
   tidy_data <- tidy_normal(.return_tibble = FALSE)
   ```
No matter which output you choose you will still enjoy the speedup because `data.table` is used to create the data and the conversion to a tibble is done afterwards if that is the output you want.

# Let's see the output

```{r message=FALSE, warning=FALSE}
library(TidyDensity)

# Generate data
normal_tibble <- tidy_normal(.return_tibble = TRUE)
head(normal_tibble)
class(normal_tibble)

normal_dt <- tidy_normal(.return_tibble = FALSE)
head(normal_dt)
class(normal_dt)
```

# Ready to unleash the power of TidyDensity and data.table?

Dive into your next data exploration project and experience the efficiency firsthand! Share your discoveries and feedback with the communityâ€”we're eager to hear how this upgrade empowers your analysis.

**Happy tidy data exploration!** 
