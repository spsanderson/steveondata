---
title: "Quadratic Regression in R: Unveiling Non-Linear Relationships"
author: "Steven P. Sanderson II, MPH"
date: "2023-11-17"
categories: [rtip, regression]
---

# Introduction

In the realm of data analysis, quadratic regression emerges as a powerful tool for uncovering the hidden patterns within datasets that exhibit non-linear relationships. Unlike its linear counterpart, quadratic regression ventures beyond straight lines, gracefully capturing curved relationships between variables. This makes it an essential technique for understanding a wide range of phenomena, from predicting stock prices to modeling population growth.

Embark on a journey into the world of quadratic regression using the versatile R programming language. We'll explore the steps involved in fitting a quadratic model, interpreting its parameters, and visualizing the results. Along the way, you'll gain hands-on experience with this valuable technique, enabling you to tackle your own data analysis challenges with confidence.

# Setting the Stage: Data Preparation

Before embarking on our quadratic regression adventure, let's assemble our data. Suppose we're investigating the relationship between study hours and exam scores. We've gathered data from a group of students, recording their study hours and corresponding exam scores.

```{r}
# Create a data frame to store the data
study_hours <- c(6, 9, 12, 14, 30, 35, 40, 47, 51, 55, 60)
exam_scores <- c(14, 28, 50, 70, 89, 94, 90, 75, 59, 44, 27)
data <- data.frame(study_hours, exam_scores)
data
```

# Visualizing the Relationship: A Scatterplot's Revelation

To gain an initial impression of the relationship between study hours and exam scores, let's create a scatterplot. This simple yet powerful visualization will reveal the underlying pattern in our data.

```{r}
# Create a scatterplot of exam scores versus study hours
plot(
  data$study_hours, 
  data$exam_scores, 
  main = "Exam Scores vs. Study Hours", 
  xlab = "Study Hours", 
  ylab = "Exam Scores"
  )
```

Upon examining the scatterplot, a hint of a non-linear relationship emerges. The data points don't fall along a straight line, suggesting a more complex association between study hours and exam scores. This is where quadratic regression steps in.

# Fitting the Quadratic Model: Capturing the Curve

To capture the curvature evident in our data, we'll employ the `lm()` function in R to fit a quadratic regression model. This model incorporates a second-degree term, allowing it to represent curved relationships between variables.

```{r}
# Fit a quadratic regression model to the data
quadratic_model <- lm(exam_scores ~ study_hours + I(study_hours^2), data = data)
```

The `I()` function in the model formula ensures that the square of study hours is treated as a separate variable, enabling the model to capture the non-linearity.

# Interpreting the Model: Unraveling the Parameters

Now that we've fitted the quadratic model, let's delve into its parameters and understand their significance.

```{r}
# Summarize the quadratic regression model
summary(quadratic_model)
```

The output of the summary function provides valuable insights into the model's performance and the significance of its parameters. It indicates the intercept, representing the predicted exam score when study hours are zero, and the coefficients for the linear and quadratic terms.

# Visualizing the Model: Bringing the Curve to Life

To fully appreciate the quadratic model's ability to capture the non-linear relationship between study hours and exam scores, let's visualize the model alongside the data points.

```{r}
# Calculate the predicted exam scores for a range of study hours
predicted_scores <- predict(
  quadratic_model, 
  newdata = data.frame(
    study_hours = seq(min(study_hours), 
                      max(study_hours), 
                      length.out = 100
                      )
    )
  )

# Plot the data points and the predicted scores
plot(
  data$study_hours, 
  data$exam_scores, 
  main = "Exam Scores vs. Study Hours", 
  xlab = "Study Hours", 
  ylab = "Exam Scores"
  )
lines(seq(min(study_hours), 
          max(study_hours), 
          length.out = 100), 
      predicted_scores, col = "red"
      )
```

The resulting plot reveals the graceful curve of the quadratic model, fitting the data points closely. This visualization reinforces the model's ability to capture the non-linear relationship between study hours and exam scores.

# Your Turn: Embarking on Your Own Quadratic Regression Adventure

Armed with the knowledge and skills gained from this tutorial, you're now ready to embark on your own quadratic regression adventures. Gather your data, fit the model, interpret the parameters, and visualize the results.