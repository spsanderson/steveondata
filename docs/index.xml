<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steve&#39;s Data Tips and Tricks</title>
<link>https://www.spsanderson.com/steveondata/</link>
<atom:link href="https://www.spsanderson.com/steveondata/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.555</generator>
<lastBuildDate>Tue, 16 Jul 2024 04:00:00 GMT</lastBuildDate>
<item>
  <title>How to Extract Substring Starting from the End of a String in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-16/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hey useR’s! Today, we’re going to discuss a neat trick: extracting substrings starting from the end of a string. We’ll cover how to achieve this using base R, <code>stringr</code>, and <code>stringi</code>. By the end of this post, you’ll have several tools in your R toolbox for string manipulation. Let’s get started!</p>
</section>
<section id="extracting-substring-from-the-end-of-a-string" class="level1">
<h1>Extracting Substring from the End of a String</h1>
<section id="using-base-r" class="level2">
<h2 class="anchored" data-anchor-id="using-base-r">Using Base R</h2>
<p>First up, let’s use base R functions to extract substrings from the end of a string. The <code>substr</code> function is your friend here.</p>
<p>Here’s a simple example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a string</span></span>
<span id="cb1-2">my_string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, world!"</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the last 6 characters</span></span>
<span id="cb1-5">substring_from_end <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(my_string, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nchar</span>(my_string) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nchar</span>(my_string))</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(substring_from_end)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "world!"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>nchar(my_string)</code> returns the total number of characters in <code>my_string</code>.</li>
<li><code>nchar(my_string) - 5</code> calculates the starting position of the substring, counting from the end.</li>
<li><code>substr(my_string, start, stop)</code> extracts the substring from the start position to the stop position.</li>
</ul>
</section>
<section id="using-stringr" class="level2">
<h2 class="anchored" data-anchor-id="using-stringr">Using <code>stringr</code></h2>
<p>The <code>stringr</code> package makes string manipulation more straightforward and readable. We’ll use the <code>str_sub</code> function for this task.</p>
<p>First, install and load the <code>stringr</code> package if you haven’t already:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages("stringr")</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span></code></pre></div>
</div>
<p>Now, let’s extract a substring from the end:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a string</span></span>
<span id="cb4-2">my_string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, world!"</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the last 6 characters using stringr</span></span>
<span id="cb4-5">substring_from_end <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_sub</span>(my_string, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb4-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(substring_from_end)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "world!"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>str_sub(my_string, start, end)</code> extracts the substring from the start to the end position.</li>
<li>Negative indices in <code>str_sub</code> count from the end of the string. So <code>-6</code> refers to the sixth character from the end, and <code>-1</code> refers to the last character.</li>
</ul>
</section>
<section id="using-stringi" class="level2">
<h2 class="anchored" data-anchor-id="using-stringi">Using <code>stringi</code></h2>
<p>The <code>stringi</code> package is another powerful tool for string manipulation. We’ll use the <code>stri_sub</code> function here.</p>
<p>First, install and load the <code>stringi</code> package:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages("stringi")</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringi)</span></code></pre></div>
</div>
<p>Let’s extract our substring:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a string</span></span>
<span id="cb7-2">my_string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, world!"</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the last 6 characters using stringi</span></span>
<span id="cb7-5">substring_from_end <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_sub</span>(my_string, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(substring_from_end)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "world!"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>stri_sub(my_string, from, to)</code> works similarly to <code>str_sub</code>, using <code>from</code> and <code>to</code> parameters to define the start and end positions.</li>
<li>Negative values count from the end of the string.</li>
</ul>
</section>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself!</h1>
<p>Now it’s your turn! Try these methods on your own strings. Here are a few ideas to get you started:</p>
<ul>
<li>Extract the last 3 characters of your name.</li>
<li>Extract the domain from an email address.</li>
<li>Experiment with different lengths and positions.</li>
</ul>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>We’ve explored how to extract substrings from the end of a string using base R, <code>stringr</code>, and <code>stringi</code>. Each method has its own charm, so choose the one that fits your coding style best. String manipulation is a crucial skill in data cleaning and text analysis, so keep practicing and experimenting.</p>
<hr>
<p>Happy coding! 🚀</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>operations</category>
  <category>strings</category>
  <category>regex</category>
  <category>stringr</category>
  <category>stringi</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-16/</guid>
  <pubDate>Tue, 16 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>tidyAML: Automated Machine Learning with tidymodels</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-15/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Welcome to {tidyAML} which is an R package that makes it easy to use the tidymodels ecosystem to perform automated machine learning (AutoML). This package provides a simple and intuitive interface that allows users to quickly generate machine learning models without worrying about the underlying details. It also includes a safety mechanism that ensures that the package will fail gracefully if any required extension packages are not installed on the user’s machine. With {tidyAML}, users can easily build high-quality machine learning models in just a few lines of code. Whether you are a beginner or an experienced machine learning practitioner, {tidyAML} has something to offer.</p>
<p>Some ideas are that we should be able to generate regression models on the fly without having to actually go through the process of building the specification, especially if it is a non-tuning model, meaning we are not planing on tuning hyper-parameters like penalty and cost.</p>
<p>The idea is not to re-write the excellent work the tidymodels team has done (because it’s not possible) but rather to try and make an enhanced easy to use set of functions that do what they say and can generate many models and predictions at once.</p>
<p>This is similar to the great h2o package, but, {tidyAML} does not require java to be setup properly like h2o because {tidyAML} is built on tidymodels.</p>
</section>
<section id="installation" class="level1">
<h1>Installation</h1>
<p>You can install {tidyAML} like so:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyAML"</span>)</span></code></pre></div>
<p>Or the development version from GitHub</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("devtools")</span></span>
<span id="cb2-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spsanderson/tidyAML"</span>)</span></code></pre></div>
<p>Part of the reason to use {tidyAML} is so that you can generate many models of your data set. One way of modeling a data set is using regression for some numeric output. There is a convienent function in tidyAML that will generate a set of non-tuning models for fast regression. Let’s take a look below.</p>
<p>First let’s load the library</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyAML)</span></code></pre></div>
</div>
<p>Now lets see the function in action.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 11 × 5
   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
       &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
 1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
 2         2 brulee          regression    linear_reg   &lt;spec[+]&gt; 
 3         3 gee             regression    linear_reg   &lt;spec[+]&gt; 
 4         4 glm             regression    linear_reg   &lt;spec[+]&gt; 
 5         5 glmer           regression    linear_reg   &lt;spec[+]&gt; 
 6         6 glmnet          regression    linear_reg   &lt;spec[+]&gt; 
 7         7 gls             regression    linear_reg   &lt;spec[+]&gt; 
 8         8 lme             regression    linear_reg   &lt;spec[+]&gt; 
 9         9 lmer            regression    linear_reg   &lt;spec[+]&gt; 
10        10 stan            regression    linear_reg   &lt;spec[+]&gt; 
11        11 stan_glmer      regression    linear_reg   &lt;spec[+]&gt; </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 5
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
2         2 glm             regression    linear_reg   &lt;spec[+]&gt; 
3         3 glm             regression    poisson_reg  &lt;spec[+]&gt; </code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gee"</span>), </span>
<span id="cb8-2">                                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 5
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
2         2 gee             regression    linear_reg   &lt;spec[+]&gt; 
3         3 glm             regression    linear_reg   &lt;spec[+]&gt; </code></pre>
</div>
</div>
<p>As shown we can easily select the models we want either by choosing the supported parsnip function like linear_reg() or by choose the desired engine, you can also use them both in conjunction with each other!</p>
<p>This function also does add a class to the output. Let’s see it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression_parsnip_spec_tbl</span>())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "tidyaml_mod_spec_tbl" "fst_reg_spec_tbl"     "tidyaml_base_tbl"    
[4] "tbl_df"               "tbl"                  "data.frame"          </code></pre>
</div>
</div>
<p>We see that there are two added classes, first fst_reg_spec_tbl because this creates a set of non-tuning regression models and then tidyaml_mod_spec_tbl because this is a model specification tibble built with {tidyAML}</p>
<p>Now, what if you want to create a non-tuning model spec without using the fast_regression_parsnip_spec_tbl() function. Well, you can. The function is called create_model_spec().</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_model_spec</span>(</span>
<span id="cb12-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cubist"</span>),</span>
<span id="cb12-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb12-4">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb12-5">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb12-6">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb12-7">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cubist_rules"</span></span>
<span id="cb12-8">     )</span>
<span id="cb12-9"> )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 4
  .parsnip_engine .parsnip_mode .parsnip_fns .model_spec
  &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;     
1 lm              regression    linear_reg   &lt;spec[+]&gt;  
2 glm             regression    linear_reg   &lt;spec[+]&gt;  
3 glmnet          regression    linear_reg   &lt;spec[+]&gt;  
4 cubist          regression    cubist_rules &lt;spec[+]&gt;  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_model_spec</span>(</span>
<span id="cb14-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cubist"</span>),</span>
<span id="cb14-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb14-4">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb14-5">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb14-6">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb14-7">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cubist_rules"</span></span>
<span id="cb14-8">     ),</span>
<span id="cb14-9"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb14-10"> )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$.parsnip_engine
$.parsnip_engine[[1]]
[1] "lm"

$.parsnip_engine[[2]]
[1] "glm"

$.parsnip_engine[[3]]
[1] "glmnet"

$.parsnip_engine[[4]]
[1] "cubist"


$.parsnip_mode
$.parsnip_mode[[1]]
[1] "regression"


$.parsnip_fns
$.parsnip_fns[[1]]
[1] "linear_reg"

$.parsnip_fns[[2]]
[1] "linear_reg"

$.parsnip_fns[[3]]
[1] "linear_reg"

$.parsnip_fns[[4]]
[1] "cubist_rules"


$.model_spec
$.model_spec[[1]]
Linear Regression Model Specification (regression)

Computational engine: lm 


$.model_spec[[2]]
Linear Regression Model Specification (regression)

Computational engine: glm 


$.model_spec[[3]]
Linear Regression Model Specification (regression)

Computational engine: glmnet 


$.model_spec[[4]]</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>! parsnip could not locate an implementation for `cubist_rules` regression
  model specifications using the `cubist` engine.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Cubist Model Specification (regression)

Computational engine: cubist </code></pre>
</div>
</div>
<p>The first example shows the output as a tibble, the second example shows the output as a list of model specs. The last one for cubist rules also shows how it will gracefully fail if the package is not loaded.</p>
<hr>
<p>Happy Coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-15/</guid>
  <pubDate>Mon, 15 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring Random Walks with TidyDensity in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-11/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Welcome back, data enthusiasts! Today, we’re diving into the fascinating world of random walks using the TidyDensity R package. If you’re working with time series data, financial modeling, or stochastic processes, understanding random walks is essential. And with TidyDensity, implementing and visualizing these walks has never been easier.</p>
</section>
<section id="random-walks" class="level1">
<h1>Random Walks</h1>
<p>A random walk is a mathematical object that describes a path consisting of a succession of random steps. It’s a cornerstone concept in fields like physics, economics, and biology. In finance, for example, the random walk hypothesis suggests that stock market prices evolve according to a random walk and thus cannot be predicted.</p>
</section>
<section id="tidydensity-and-the-tidy_random_walk-function" class="level1">
<h1>TidyDensity and the <code>tidy_random_walk()</code> Function</h1>
<p>TidyDensity simplifies the generation and manipulation of random walks with its intuitive <code>tidy_random_walk()</code> function. This function can be used in conjunction with any <code>tidy_</code> distribution function, allowing for flexible and powerful random walk simulations.</p>
</section>
<section id="function-call" class="level1">
<h1>Function Call</h1>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.initial_value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sample =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_prod"</span></span>
<span id="cb1-7">)</span></code></pre></div>
<section id="arguments-breakdown" class="level2">
<h2 class="anchored" data-anchor-id="arguments-breakdown">Arguments Breakdown</h2>
<ul>
<li><strong><code>.data</code></strong>: The dataset from a <code>tidy_</code> distribution function. This forms the basis of your random walk.</li>
<li><strong><code>.initial_value</code></strong>: The starting value of the random walk. The default is 0, but you can set it to any numeric value.</li>
<li><strong><code>.sample</code></strong>: A boolean indicating whether to sample the <code>y</code> values from the <code>tidy_</code> distribution. Defaults to <code>FALSE</code>.</li>
<li><strong><code>.replace</code></strong>: If both <code>.sample</code> and <code>.replace</code> are <code>TRUE</code>, sampling is done with replacement. Defaults to <code>FALSE</code>.</li>
<li><strong><code>.value_type</code></strong>: Determines how the walk is computed. Options are:</li>
<li><code>"cum_prod"</code>: Computes the cumulative product of <code>y</code>.</li>
<li><code>"cum_sum"</code>: Computes the cumulative sum of <code>y</code>.</li>
</ul>
</section>
</section>
<section id="practical-examples" class="level1">
<h1>Practical Examples</h1>
<p>Let’s see <code>tidy_random_walk()</code> in action with some practical examples.</p>
<section id="example-1-simple-random-walk-with-cumulative-sum" class="level2">
<h2 class="anchored" data-anchor-id="example-1-simple-random-walk-with-cumulative-sum">Example 1: Simple Random Walk with Cumulative Sum</h2>
<p>First, let’s create a simple random walk using a normal distribution and compute the cumulative sum.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_sum"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk_autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-07-11/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In this example, we generate 25 simulations of 100 points each from a normal distribution. The <code>tidy_random_walk()</code> function then computes the cumulative sum of these points, simulating a simple random walk. The <code>tidy_random_walk_autoplot()</code> function is used to visualize the random walk.</p>
</section>
<section id="example-2-random-walk-with-sampling" class="level2">
<h2 class="anchored" data-anchor-id="example-2-random-walk-with-sampling">Example 2: Random Walk with Sampling</h2>
<p>Next, we’ll explore a random walk where values are sampled.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_sum"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sample =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk_autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-07-11/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Here, setting <code>.sample</code> to <code>TRUE</code> ensures that each step in the random walk is taken by randomly sampling from the original dataset. This can introduce additional variability and randomness to the walk.</p>
</section>
<section id="example-3-random-walk-with-sampling-and-replacement" class="level2">
<h2 class="anchored" data-anchor-id="example-3-random-walk-with-sampling-and-replacement">Example 3: Random Walk with Sampling and Replacement</h2>
<p>Finally, let’s create a random walk with sampling and replacement.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk</span>(</span>
<span id="cb4-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_sum"</span>, </span>
<span id="cb4-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sample =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb4-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb4-7">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk_autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-07-11/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In this example, setting both <code>.sample</code> and <code>.replace</code> to <code>TRUE</code> ensures that values are sampled with replacement. This can be useful in bootstrapping scenarios or when simulating more complex stochastic processes.</p>
</section>
<section id="bonus-section-comparing-different-random-walk-sampling-methods" class="level2">
<h2 class="anchored" data-anchor-id="bonus-section-comparing-different-random-walk-sampling-methods">Bonus Section: Comparing Different Random Walk Sampling Methods</h2>
<p>To wrap up, let’s combine multiple random walks and visualize them using <code>ggplot2</code>. This bonus section will show you how different sampling methods impact the random walks.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb5-5">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(</span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_sum"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No_Sample"</span>),</span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_sum"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sample =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample_No_Replace"</span>),</span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_random_walk</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_sum"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sample =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample_Replace"</span>)</span>
<span id="cb5-15">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(sim_number, x, random_walk_value, type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low_ci =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x),</span>
<span id="cb5-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hi_ci =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x)</span>
<span id="cb5-20">  )</span>
<span id="cb5-21"></span>
<span id="cb5-22">atb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attributes</span>(df)</span>
<span id="cb5-23"></span>
<span id="cb5-24">df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb5-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, </span>
<span id="cb5-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> random_walk_value, </span>
<span id="cb5-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim_number, </span>
<span id="cb5-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(type))</span>
<span id="cb5-30">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.382</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> low_ci, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim_number), </span>
<span id="cb5-33">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hi_ci, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim_number), </span>
<span id="cb5-35">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-40">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>,</span>
<span id="cb5-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random Walk Value"</span>,</span>
<span id="cb5-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random Walk with Different Sampling Methods"</span>,</span>
<span id="cb5-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Simulations: "</span>, atb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>all<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.num_sims, </span>
<span id="cb5-44">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" | Steps: "</span>, atb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>all<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.n,</span>
<span id="cb5-45">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" | Distribution: "</span>, atb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>all<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dist_with_params</span>
<span id="cb5-46">                      )</span>
<span id="cb5-47">  )</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-07-11/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<ol type="1">
<li><strong>Generating Data</strong>: We generate three sets of random walks using different sampling methods:</li>
</ol>
<ul>
<li>No sampling.</li>
<li>Sampling without replacement.</li>
<li>Sampling with replacement.</li>
</ul>
<p>Each set consists of 25 simulations of 100 steps.</p>
<ol start="2" type="1">
<li><p><strong>Combining Data</strong>: The results are combined into a single data frame, with a new column <code>type</code> to indicate the sampling method used.</p></li>
<li><p><strong>Calculating Confidence Intervals</strong>: We calculate the 95% confidence intervals for each step.</p></li>
<li><p><strong>Plotting</strong>: Using <code>ggplot2</code>, we plot the random walks, coloring by sampling method and adding dashed lines to indicate the confidence intervals. We also facet the plot by <code>type</code> to separate the different sampling methods visually.</p></li>
</ol>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Random walks are a powerful tool for modeling and understanding various phenomena. With TidyDensity and the <code>tidy_random_walk()</code> function, you can easily generate and visualize these processes in R. Whether you’re conducting financial analysis, simulating biological processes, or exploring theoretical concepts, TidyDensity offers a flexible and user-friendly approach.</p>
<p>Stay tuned for more tutorials and deep dives into the capabilities of TidyDensity. Happy coding!</p>
<hr>
<p>Feel free to try out these examples and explore the versatility of <code>tidy_random_walk()</code>. Share your insights and results with us in the comments below or on social media using #TidyDensity. Until next time, keep experimenting and learning!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-11/</guid>
  <pubDate>Thu, 11 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Using the FileDateTime Function in VBA from R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-10/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Welcome back to our series where we explore the synergy between R and VBA! Today, we’re diving into the <code>FileDateTime</code> function in VBA and how you can leverage it within R. This function is incredibly useful for anyone dealing with files, as it allows you to get the date and time when a file was last modified.</p>
</section>
<section id="what-is-filedatetime" class="level1">
<h1>What is <code>FileDateTime</code>?</h1>
<p>The <code>FileDateTime</code> function in VBA returns the date and time when a file was last modified. This can be particularly useful in various scenarios, such as tracking changes, logging file activities, or just keeping records up-to-date.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="basic-usage-of-filedatetime-in-vba" class="level2">
<h2 class="anchored" data-anchor-id="basic-usage-of-filedatetime-in-vba">Basic Usage of <code>FileDateTime</code> in VBA</h2>
<p>Let’s start with a simple example of how to use <code>FileDateTime</code> in VBA. Suppose you have a file located at <code>C:\example\myfile.txt</code>. Here’s how you can get its last modified date and time:</p>
<pre class="vba"><code>Sub GetFileDateTime()
    Dim filePath As String
    Dim fileModifiedDate As String

    filePath = "C:\example\myfile.txt"
    fileModifiedDate = FileDateTime(filePath)

    MsgBox "The file was last modified on: " &amp; fileModifiedDate
End Sub</code></pre>
<p>In this script: - <code>filePath</code> stores the path to the file. - <code>fileModifiedDate</code> gets the last modified date and time using <code>FileDateTime</code>. - <code>MsgBox</code> displays the result in a message box.</p>
</section>
<section id="executing-vba-from-r" class="level2">
<h2 class="anchored" data-anchor-id="executing-vba-from-r">Executing VBA from R</h2>
<p>To execute VBA code from R, you can use the <code>RDCOMClient</code> package, which allows R to interact with COM objects like Excel. Below is a step-by-step guide on how to achieve this:</p>
<ol type="1">
<li><p><strong>Install and Load the RDCOMClient Package</strong></p>
<p>First, ensure you have the <code>RDCOMClient</code> package installed. If not, you can install it from CRAN:</p></li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RDCOMClient"</span>)</span></code></pre></div>
<p>Then, load the package:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RDCOMClient)</span></code></pre></div>
<ol start="2" type="1">
<li><p><strong>Create a VBA Macro in Excel</strong></p>
<p>Open Excel and press <code>ALT + F11</code> to open the VBA editor. Create a new module and paste the <code>GetFileDateTime</code> function code. Save the Excel workbook with a <code>.xlsm</code> extension to enable macros.</p></li>
<li><p><strong>Run the VBA Macro from R</strong></p>
<p>Now, let’s write an R script to open the Excel workbook and run the macro:</p></li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RDCOMClient)</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the path to your Excel workbook</span></span>
<span id="cb4-4">excelFilePath <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/Users/steve/Documents/GitHub/steveondata/posts/2024-07-10/file_date_time.xlsm"</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an Excel application object</span></span>
<span id="cb4-7">excelApp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COMCreate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excel.Application"</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the workbook</span></span>
<span id="cb4-10">workbook <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> excelApp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Workbooks</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Open</span>(excelFilePath)</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make Excel visible (optional)</span></span>
<span id="cb4-13">excelApp[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Visible"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the macro</span></span>
<span id="cb4-16">excelApp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Run</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GetFileDateTime"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Close the workbook without saving changes</span></span>
<span id="cb6-2">workbook<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Close</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quit the Excel application</span></span>
<span id="cb8-2">excelApp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Quit</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
</div>
<p>In this R script:</p>
<ul>
<li><code>excelFilePath</code> specifies the path to your Excel workbook.</li>
<li><code>excelApp</code> creates an Excel application object.</li>
<li><code>workbook</code> opens the specified workbook.</li>
<li><code>excelApp$Run("GetFileDateTime")</code> runs the VBA macro.</li>
<li><code>workbook$Close(FALSE)</code> closes the workbook without saving changes.</li>
<li><code>excelApp$Quit()</code> quits the Excel application.</li>
</ul>
<p>Here is the message box:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-07-10/Screenshot.png" class="img-fluid figure-img"></p>
<figcaption>VBA FileDateTime</figcaption>
</figure>
</div>
</section>
</section>
<section id="understanding-the-workflow" class="level1">
<h1>Understanding the Workflow</h1>
<p>The above workflow shows how R can interact with Excel to execute VBA code. This approach is powerful for automating tasks that require both the statistical capabilities of R and the scripting power of VBA.</p>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself</h1>
<p>I encourage you to try this integration on your own. Modify the VBA code to suit your needs, and experiment with different R scripts to see how you can further automate your workflows. The combination of R and VBA opens up a lot of possibilities, and getting hands-on experience is the best way to learn.</p>
<p>Feel free to share your experiences or any questions you have in the comments below. Happy coding!</p>
<hr>
<p>Stay tuned for more posts where we continue to explore the exciting interplay between R and VBA!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>operations</category>
  <category>vba</category>
  <category>excel</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-10/</guid>
  <pubDate>Wed, 10 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Extracting Strings Before a Space in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-09/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hello, R users! Today, we’ll dive into a common text manipulation task: extracting strings before a space. This is a handy trick for dealing with names, addresses, or any text data where you need to isolate the first part of a string.</p>
<p>We’ll explore three approaches: using base R, <code>stringr</code>, and <code>stringi</code>. Each method offers its unique advantages, so you can choose the one that fits your style best.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="base-r-approach" class="level2">
<h2 class="anchored" data-anchor-id="base-r-approach">Base R Approach</h2>
<p>Let’s start with base R. The <code>sub</code> function is a versatile tool for pattern matching and replacement. To extract the string before a space, we can use a regular expression.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb1-2">text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John Doe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jane Smith"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alice Johnson"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract strings before the first space</span></span>
<span id="cb1-5">first_part_base <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" .*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, text)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the result</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(first_part_base)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "John"  "Jane"  "Alice"</code></pre>
</div>
</div>
<p>In this example, the <code>sub</code> function replaces the space and everything after it with an empty string, effectively extracting the first part of each string.</p>
</section>
<section id="using-stringr" class="level2">
<h2 class="anchored" data-anchor-id="using-stringr">Using <code>stringr</code></h2>
<p>Next, let’s see how <code>stringr</code> simplifies this task. The <code>stringr</code> package, part of the tidyverse, provides a consistent and easy-to-use interface for string manipulation.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load stringr package</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb3-5">text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John Doe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jane Smith"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alice Johnson"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract strings before the first space</span></span>
<span id="cb3-8">first_part_stringr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(text, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^[^ ]+"</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the result</span></span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(first_part_stringr)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "John"  "Jane"  "Alice"</code></pre>
</div>
</div>
<p>Here, <code>str_extract</code> is used with a regular expression to match and extract the part of the string before the first space. The <code>^[^ ]+</code> pattern matches the beginning of the string (<code>^</code>) followed by one or more characters that are not a space (<code>[^ ]+</code>).</p>
</section>
<section id="using-stringi" class="level2">
<h2 class="anchored" data-anchor-id="using-stringi">Using <code>stringi</code></h2>
<p>Finally, let’s use <code>stringi</code>, a powerful package for advanced string operations. <code>stringi</code> functions are optimized for performance, making it a great choice for handling large datasets.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load stringi package</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringi)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb5-5">text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John Doe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jane Smith"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alice Johnson"</span>)</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract strings before the first space</span></span>
<span id="cb5-8">first_part_stringi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_extract_first_regex</span>(text, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^[^ ]+"</span>)</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the result</span></span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(first_part_stringi)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "John"  "Jane"  "Alice"</code></pre>
</div>
</div>
<p>With <code>stringi</code>, <code>stri_extract_first_regex</code> performs similarly to <code>str_extract</code> from <code>stringr</code>, using the same regular expression pattern.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Each method—base R, <code>stringr</code>, and <code>stringi</code>—offers a straightforward way to extract strings before a space. Whether you prefer the simplicity of base R, the tidyverse consistency of <code>stringr</code>, or the performance optimization of <code>stringi</code>, you have powerful tools at your disposal.</p>
<p>I encourage you to try these examples on your own datasets. Text manipulation is a fundamental skill in data analysis, and mastering these techniques will enhance your ability to clean and prepare data for analysis.</p>
<p>Feel free to share your experiences and any additional tips you might have in the comments. Happy coding!</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># To run the examples, just copy and paste the code blocks into your R script or R console.</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Let me know how it goes!</span></span></code></pre></div>
<p>Until next time, keep exploring the wonders of R!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>operations</category>
  <category>strings</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-09/</guid>
  <pubDate>Tue, 09 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Unleashing the Power of TidyDensity: Simplifying Distribution Analysis in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-08/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>If you’re a data scientist or statistician who often deals with probability distributions, you know the importance of seamlessly integrating these functions into your workflow. That’s where the TidyDensity package comes into play. Designed to make producing <code>r</code>, <code>d</code>, <code>p</code>, and <code>q</code> data easy and compatible with the tidyverse, TidyDensity is a must-have tool in your R arsenal. In this post, we’ll explore the features and benefits of TidyDensity and show you why you should give it a try.</p>
</section>
<section id="why-tidydensity" class="level1">
<h1>Why TidyDensity?</h1>
<p>The primary goal of TidyDensity is to simplify the generation and manipulation of random samples (<code>r</code>), density (<code>d</code>), cumulative distribution (<code>p</code>), and quantile (<code>q</code>) functions. Traditional methods can be cumbersome and often require manual handling of data structures that don’t fit well with the tidyverse’s philosophy of tidy data. TidyDensity bridges this gap by providing functions that return results in a tidy format, making them easy to work with using dplyr, ggplot2, and other tidyverse packages.</p>
</section>
<section id="key-features" class="level1">
<h1>Key Features</h1>
<section id="seamless-integration-with-tidyverse" class="level2">
<h2 class="anchored" data-anchor-id="seamless-integration-with-tidyverse">Seamless Integration with Tidyverse</h2>
<p>TidyDensity ensures that all its output is in a tidy format, which means you can use the familiar suite of tidyverse tools to manipulate, visualize, and analyze your data. This compatibility streamlines your workflow and reduces the amount of data wrangling required.</p>
</section>
<section id="comprehensive-distribution-functions" class="level2">
<h2 class="anchored" data-anchor-id="comprehensive-distribution-functions">Comprehensive Distribution Functions</h2>
<p>Whether you’re dealing with normal, binomial, Poisson, or other distributions, TidyDensity has you covered. It includes functions for a wide range of distributions, each with options to generate random samples, calculate density, cumulative probabilities, and quantiles. This comprehensive coverage means you can rely on TidyDensity for almost any distribution-related task.</p>
</section>
<section id="easy-to-use-functions" class="level2">
<h2 class="anchored" data-anchor-id="easy-to-use-functions">Easy-to-Use Functions</h2>
<p>TidyDensity’s functions are designed with simplicity in mind. For example, to generate random samples from a normal distribution, you can use:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate random samples from a normal distribution</span></span>
<span id="cb1-4">normal_samples <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the first few rows</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(normal_samples)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 7
  sim_number     x       y    dx       dy      p       q
  &lt;fct&gt;      &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;
1 1              1 -1.50   -3.15 0.000182 0.0664 -1.50  
2 1              2  0.370  -3.08 0.000325 0.644   0.370 
3 1              3  0.558  -3.01 0.000561 0.712   0.558 
4 1              4 -1.28   -2.95 0.000938 0.101  -1.28  
5 1              5  0.0298 -2.88 0.00153  0.512   0.0298
6 1              6  0.189  -2.82 0.00241  0.575   0.189 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(normal_samples)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> sim_number       x                y                  dx         
 1:100      Min.   :  1.00   Min.   :-2.45677   Min.   :-3.5658  
 2:100      1st Qu.: 25.75   1st Qu.:-0.68839   1st Qu.:-1.5753  
 3:100      Median : 50.50   Median :-0.02975   Median : 0.1216  
 4:100      Mean   : 50.50   Mean   :-0.02445   Mean   : 0.1223  
 5:100      3rd Qu.: 75.25   3rd Qu.: 0.66779   3rd Qu.: 1.8087  
            Max.   :100.00   Max.   : 3.10887   Max.   : 4.3583  
       dy                  p                 q           
 Min.   :0.0001153   Min.   :0.00701   Min.   :-2.45677  
 1st Qu.:0.0198717   1st Qu.:0.24560   1st Qu.:-0.68839  
 Median :0.1003394   Median :0.48813   Median :-0.02975  
 Mean   :0.1468798   Mean   :0.49049   Mean   :-0.02445  
 3rd Qu.:0.2658815   3rd Qu.:0.74787   3rd Qu.: 0.66779  
 Max.   :0.4688206   Max.   :0.99906   Max.   : 3.10887  </code></pre>
</div>
</div>
<p>This code generates a tidy data frame with 100 random samples from a normal distribution with a mean of 0 and standard deviation of 1. You can then use dplyr and ggplot2 to manipulate and visualize this data effortlessly.</p>
</section>
<section id="practical-example" class="level2">
<h2 class="anchored" data-anchor-id="practical-example">Practical Example</h2>
<p>Let’s walk through a practical example to demonstrate how TidyDensity can be used in a typical data analysis workflow. Suppose you’re interested in analyzing the distribution of a sample dataset and visualizing its density.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load required libraries</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate random samples from a normal distribution</span></span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb5-7">normal_samples <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the density of the samples</span></span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_autoplot</span>(normal_samples)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-07-08/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>In this example, we generate 1,000 random samples from a normal distribution with a mean of 5 and a standard deviation of 2. We then use ggplot2 to create a density plot, providing a clear visual representation of the distribution.</p>
</section>
</section>
<section id="try-tidydensity" class="level1">
<h1>Try TidyDensity!</h1>
<p>If you’re looking for a package that simplifies working with distributions while staying true to the tidyverse principles, TidyDensity is the solution you need. Its ease of use, comprehensive functionality, and seamless integration with the tidyverse make it an invaluable tool for anyone working with probability distributions in R.</p>
<p>I encourage you to try TidyDensity in your next project. Whether you’re conducting a detailed statistical analysis or simply need to generate random samples for simulation purposes, TidyDensity will make your life easier and your code cleaner.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>TidyDensity is more than just another R package; it’s a tool designed to enhance your data analysis workflow by making distribution functions easy to use and compatible with the tidyverse. Give it a try and experience the difference it can make in your projects. For more information and detailed documentation, visit the <a href="https://www.spsanderson.com/TidyDensity/index.html">TidyDensity index page</a>.</p>
<hr>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-08/</guid>
  <pubDate>Mon, 08 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring Linear Models with R and Exporting to Excel</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-07/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Today, we’re going to walk through an example of fitting a linear model in R, summarizing the results, and exporting the findings to an Excel file. This workflow is useful for documenting and sharing your statistical analysis.</p>
<p>Let’s break down the code step by step.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<section id="step-1-loading-the-necessary-libraries" class="level2">
<h2 class="anchored" data-anchor-id="step-1-loading-the-necessary-libraries">Step 1: Loading the Necessary Libraries</h2>
<p>First, we need to load the <code>openxlsx</code> library, which helps us create and manipulate Excel files. If you don’t have it installed, you can get it using <code>install.packages("openxlsx")</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(openxlsx)</span></code></pre></div>
</div>
<p>This line of code loads the <code>openxlsx</code> library into R so we can use its functions later.</p>
</section>
<section id="step-2-fitting-the-linear-model" class="level2">
<h2 class="anchored" data-anchor-id="step-2-fitting-the-linear-model">Step 2: Fitting the Linear Model</h2>
<p>Next, we fit a linear model using the built-in <code>mtcars</code> dataset. We model <code>mpg</code> (miles per gallon) based on all other available variables in the dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span></code></pre></div>
</div>
<p>Here, <code>lm</code> stands for linear model. The <code>mpg ~ .</code> part means we want to predict <code>mpg</code> using all other variables in the <code>mtcars</code> dataset.</p>
</section>
<section id="step-3-summarizing-the-model" class="level2">
<h2 class="anchored" data-anchor-id="step-3-summarizing-the-model">Step 3: Summarizing the Model</h2>
<p>We obtain a summary of our linear model, which includes details like coefficients, R-squared values, and the F-statistic.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">model_summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
</div>
<p>This code generates a summary of the linear model we just created, giving us important statistics about the model’s performance.</p>
</section>
<section id="step-4-extracting-key-components" class="level2">
<h2 class="anchored" data-anchor-id="step-4-extracting-key-components">Step 4: Extracting Key Components</h2>
<p>We extract essential parts of the summary for easy access and to organize them in our Excel file.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">coefficients <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span>
<span id="cb4-2">r_squared <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>r.squared</span>
<span id="cb4-3">adj_r_squared <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>adj.r.squared</span>
<span id="cb4-4">f_statistic <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fstatistic</span>
<span id="cb4-5">p_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pf</span>(</span>
<span id="cb4-6">  f_statistic[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb4-7">  f_statistic[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], </span>
<span id="cb4-8">  f_statistic[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], </span>
<span id="cb4-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower.tail =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb4-10">  )</span>
<span id="cb4-11">model_formula <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(</span>
<span id="cb4-12">  model_summary[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"terms"</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, </span>
<span id="cb4-13">  model_summary[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"terms"</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>,</span>
<span id="cb4-14">  model_summary[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"terms"</span>]])[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span></code></pre></div>
</div>
<ul>
<li><code>coefficients</code>: The estimated coefficients of the model.</li>
<li><code>r_squared</code>: How well the model explains the variability of the data.</li>
<li><code>adj_r_squared</code>: Adjusted version of R-squared for the number of predictors.</li>
<li><code>f_statistic</code>: Overall significance of the model.</li>
<li><code>p_value</code>: Probability value indicating the significance of the F-statistic.</li>
<li><code>model_formula</code>: The formula used to fit the model.</li>
</ul>
</section>
<section id="step-5-creating-and-populating-the-workbook" class="level2">
<h2 class="anchored" data-anchor-id="step-5-creating-and-populating-the-workbook">Step 5: Creating and Populating the Workbook</h2>
<p>Now, we create a new Excel workbook and add a worksheet to it. We then write our extracted model summary components to this worksheet.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">wb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createWorkbook</span>()</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addWorksheet</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Coefficients"</span>, </span>
<span id="cb5-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, coefficients, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb5-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rowNames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R-Squared"</span>, </span>
<span id="cb5-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, r_squared, </span>
<span id="cb5-12">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adjusted R-Squared"</span>, </span>
<span id="cb5-15">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, adj_r_squared, </span>
<span id="cb5-17">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-18"></span>
<span id="cb5-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F-Statistic"</span>, </span>
<span id="cb5-20">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, f_statistic[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb5-22">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-23"></span>
<span id="cb5-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-Value"</span>, </span>
<span id="cb5-25">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, p_value, </span>
<span id="cb5-27">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-28"></span>
<span id="cb5-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Formula"</span>, </span>
<span id="cb5-30">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">writeData</span>(wb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Summary"</span>, model_formula, </span>
<span id="cb5-32">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startRow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(coefficients) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startCol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<ul>
<li><code>createWorkbook()</code>: Creates a new Excel workbook.</li>
<li><code>addWorksheet(wb, "Model Summary")</code>: Adds a new sheet named “Model Summary” to the workbook.</li>
<li><code>writeData</code>: Writes data to the specified location in the sheet. Here, we write various parts of the model summary in different rows and columns.</li>
</ul>
</section>
<section id="step-6-saving-the-workbook" class="level2">
<h2 class="anchored" data-anchor-id="step-6-saving-the-workbook">Step 6: Saving the Workbook</h2>
<p>Finally, we save our workbook to a file named <code>lm_model_summary.xlsx</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saveWorkbook</span>(</span>
<span id="cb6-2">  wb, </span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getwd</span>(),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/lm_model_summary.xlsx"</span>), </span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">overwrite =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb6-5">  )</span></code></pre></div>
</div>
<p>This line saves the workbook to your working directory with the specified file name.</p>
<p>Here is a screenshot:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-07-07/lm_model_summary.png" class="img-fluid figure-img"></p>
<figcaption>Excel Screenshot</figcaption>
</figure>
</div>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>This example shows how to fit a linear model in R, extract meaningful summary statistics, and save those results in an Excel file. It’s a simple yet powerful way to document your analyses and share them with others.</p>
<p>Feel free to modify the code to fit your own datasets and models. Experimenting with different variables and models can provide deeper insights into your data. Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>excel</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-07/</guid>
  <pubDate>Sun, 07 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Automate Your R Scripts with taskscheduleR</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-06/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Today, let’s dive into a nifty R package called <code>taskscheduleR</code> that can automate running your R scripts. Whether you need to execute a task every hour or just once a day, <code>taskscheduleR</code> has you covered. This package leverages the Windows Task Scheduler, making it a breeze to schedule and automate repetitive tasks directly from R. Let’s walk through a couple of examples from my new book, “Extending Excel with Python and R”.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-hourly-script-execution" class="level2">
<h2 class="anchored" data-anchor-id="example-1-hourly-script-execution">Example 1: Hourly Script Execution</h2>
<p>First, let’s set up a task that runs a script every hour. Here’s the code:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(taskscheduleR)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a task scheduler job that runs the script every hour</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">taskscheduler_create</span>(</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">taskname =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World Hourly"</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rscript =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello_world.R"</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">schedule =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0 * * * *"</span></span>
<span id="cb1-8">)</span></code></pre></div>
<p>In this snippet, we use the <code>taskscheduler_create()</code> function to create a new task. Let’s break down the arguments:</p>
<ul>
<li><code>taskname</code>: A unique name for the task, in this case, “Hello World Hourly”.</li>
<li><code>rscript</code>: The path to the R script you want to run, here it’s “hello_world.R”.</li>
<li><code>schedule</code>: This is the cron expression for scheduling. <code>0 * * * *</code> means the script will run at the start of every hour.</li>
</ul>
</section>
<section id="example-2-daily-script-execution-at-a-specific-time" class="level2">
<h2 class="anchored" data-anchor-id="example-2-daily-script-execution-at-a-specific-time">Example 2: Daily Script Execution at a Specific Time</h2>
<p>Now, let’s set up a task that runs the script once a day at 10:00 AM. Here’s how you can do it:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a task scheduler job that runs the script once a day at 10:00 AM</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">taskscheduler_create</span>(</span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">taskname =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World Daily"</span>,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rscript =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello_world.R"</span>,</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">schedule =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0 10 * * *"</span></span>
<span id="cb2-6">)</span></code></pre></div>
<p>In this example, the <code>schedule</code> argument <code>0 10 * * *</code> ensures the script runs daily at 10:00 AM.</p>
</section>
</section>
<section id="why-automate" class="level1">
<h1>Why Automate?</h1>
<p>Scheduling routine tasks can save you a lot of time and reduce the chances of forgetting to run an important script. Whether it’s updating a report, fetching data, or performing backups, automation ensures that these tasks run consistently and accurately without manual intervention.</p>
</section>
<section id="give-it-a-try" class="level1">
<h1>Give It a Try!</h1>
<p>I encourage you to experiment with <code>taskscheduleR</code> and see how it can fit into your workflow. Whether you’re new to automation or looking for ways to optimize your existing processes, this package offers a simple yet powerful solution.</p>
<p>If you found this helpful and want to learn more about extending your Excel capabilities with R and Python, check out my new book, “Extending Excel with Python and R”. It’s packed with practical examples and detailed explanations to help you get the most out of these powerful tools.</p>
<ul>
<li><strong>Amazon:</strong> <a href="https://packt.link/oTyZJ">Extending Excel with Python and R</a></li>
<li><strong>Packt:</strong> <a href="https://www.packtpub.com/en-us/product/extending-excel-with-python-and-r-9781804610695">Extending Excel with Python and R</a></li>
</ul>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>operations</category>
  <category>automation</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-06/</guid>
  <pubDate>Sat, 06 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Zoom Functionality in Excel with VBA</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-03/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When working with large datasets in Excel, the ability to zoom in and out quickly can significantly enhance your productivity. If you often find yourself adjusting the zoom level manually, why not automate it with VBA? In this blog post, we’ll explore how to use the zoom functionality in VBA to control the zoom level of your worksheets efficiently.</p>
</section>
<section id="why-use-zoom-in-excel" class="level1">
<h1>Why Use Zoom in Excel?</h1>
<p>Zooming in Excel allows you to get a closer look at your data or see more of your worksheet at once. Whether you’re focusing on a specific section of data or getting an overview of your entire sheet, zooming can help you navigate and analyze your information more effectively.</p>
</section>
<section id="getting-started-with-zoom-in-vba" class="level1">
<h1>Getting Started with Zoom in VBA</h1>
<p>To control the zoom level in Excel using VBA, you’ll primarily work with the <code>ActiveWindow.Zoom</code> property. This property allows you to set the zoom level to any value between 10% and 400%.</p>
<section id="basic-zoom-in-and-zoom-out" class="level2">
<h2 class="anchored" data-anchor-id="basic-zoom-in-and-zoom-out">Basic Zoom In and Zoom Out</h2>
<p>Let’s start with simple macros to zoom in and zoom out.</p>
<p><strong>Zoom In:</strong></p>
<pre class="vba"><code>Sub ZoomIn()
    Dim currentZoom As Integer
    currentZoom = ActiveWindow.Zoom
    If currentZoom &lt; 400 Then
        ActiveWindow.Zoom = currentZoom + 10
    End If
End Sub</code></pre>
<p><strong>Zoom Out:</strong></p>
<pre class="vba"><code>Sub ZoomOut()
    Dim currentZoom As Integer
    currentZoom = ActiveWindow.Zoom
    If currentZoom &gt; 10 Then
        ActiveWindow.Zoom = currentZoom - 10
    End If
End Sub</code></pre>
<p>In these macros, <code>ZoomIn</code> increases the current zoom level by 10%, while <code>ZoomOut</code> decreases it by 10%. The code ensures that the zoom level stays within the permissible range of 10% to 400%.</p>
</section>
<section id="setting-a-specific-zoom-level" class="level2">
<h2 class="anchored" data-anchor-id="setting-a-specific-zoom-level">Setting a Specific Zoom Level</h2>
<p>Sometimes, you might need to set the zoom level to a specific percentage. You can do this easily with the following macro:</p>
<pre class="vba"><code>Sub SetZoomLevel(zoomLevel As Integer)
    If zoomLevel &gt;= 10 And zoomLevel &lt;= 400 Then
        ActiveWindow.Zoom = zoomLevel
    Else
        MsgBox "Please enter a zoom level between 10 and 400."
    End If
End Sub</code></pre>
<p>You can call this macro with any desired zoom level. For example:</p>
<pre class="vba"><code>Sub ZoomToSpecificLevel()
    Call SetZoomLevel(150) ' Sets the zoom level to 150%
End Sub</code></pre>
</section>
<section id="resetting-the-zoom-level" class="level2">
<h2 class="anchored" data-anchor-id="resetting-the-zoom-level">Resetting the Zoom Level</h2>
<p>If you need to reset the zoom level to its default setting (usually 100%), you can use the following macro:</p>
<pre class="vba"><code>Sub ResetZoom()
    ActiveWindow.Zoom = 100
End Sub</code></pre>
</section>
<section id="applying-zoom-to-a-specific-worksheet" class="level2">
<h2 class="anchored" data-anchor-id="applying-zoom-to-a-specific-worksheet">Applying Zoom to a Specific Worksheet</h2>
<p>The above examples modify the zoom level of the currently active window. If you want to set the zoom level for a specific worksheet, you can activate that sheet first and then set the zoom level:</p>
<pre class="vba"><code>Sub ZoomSpecificSheet(sheetName As String, zoomLevel As Integer)
    Worksheets(sheetName).Activate
    If zoomLevel &gt;= 10 And zoomLevel &lt;= 400 Then
        ActiveWindow.Zoom = zoomLevel
    Else
        MsgBox "Please enter a zoom level between 10 and 400."
    End If
End Sub</code></pre>
</section>
<section id="using-zoom-with-user-forms" class="level2">
<h2 class="anchored" data-anchor-id="using-zoom-with-user-forms">Using Zoom with User Forms</h2>
<p>Zoom functionality isn’t limited to worksheets. You can also control the zoom level of user forms in VBA. This is especially useful if your user form contains detailed information or numerous controls.</p>
<pre class="vba"><code>Sub ZoomUserForm(zoomLevel As Double)
    With UserForm1
        .Zoom = zoomLevel
    End With
End Sub</code></pre>
<p>Call this macro with a zoom level between 10 and 400 to adjust the user form’s zoom.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Whether you need to zoom in for a closer look, zoom out to see more data, or set a specific zoom level, VBA provides a simple and powerful way to control your view.</p>
<p>By incorporating these macros into your workflow, you can easily adjust your zoom settings without leaving the keyboard. Experiment with these examples, and you’ll soon find the perfect zoom levels to enhance your productivity in Excel.</p>
<hr>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>vba</category>
  <category>excel</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-03/</guid>
  <pubDate>Wed, 03 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Extract String After a Specific Character in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-02/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Welcome back, R Programmers! Today, we’ll explore a common task: extracting a substring after a specific character in R. Whether you’re cleaning data or transforming strings, this skill is quite handy. We’ll look at three approaches: using base R, <code>stringr</code>, and <code>stringi</code>. Let’s dive in!</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="using-base-r" class="level2">
<h2 class="anchored" data-anchor-id="using-base-r">Using Base R</h2>
<p>Base R provides several functions to manipulate strings. Here, we’ll use <code>sub</code> and <code>strsplit</code> to extract a substring after a specific character.</p>
<section id="example-1-using-sub" class="level3">
<h3 class="anchored" data-anchor-id="example-1-using-sub">Example 1: Using <code>sub</code></h3>
<p>The <code>sub</code> function allows us to replace parts of a string based on a pattern. Here’s how to extract the part after a specific character, say a hyphen (<code>-</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example string</span></span>
<span id="cb1-2">string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data-science"</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract substring after the hyphen</span></span>
<span id="cb1-5">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".*-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, string)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: "science"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "science"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>.*-</code> is a regular expression where <code>.*</code> matches any character (except for line terminators) zero or more times, and <code>-</code> matches the hyphen.</li>
<li><code>""</code> is the replacement, effectively removing everything up to and including the hyphen.</li>
</ul>
</section>
<section id="example-2-using-strsplit" class="level3">
<h3 class="anchored" data-anchor-id="example-2-using-strsplit">Example 2: Using <code>strsplit</code></h3>
<p>The <code>strsplit</code> function splits a string into substrings based on a delimiter.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example string</span></span>
<span id="cb3-2">string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello-world"</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the string at the hyphen</span></span>
<span id="cb3-5">parts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strsplit</span>(string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the part after the hyphen</span></span>
<span id="cb3-8">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: "world"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "world"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>strsplit(string, "-")</code> splits the string into parts at the hyphen, returning a list.</li>
<li><code>[[1]]</code> extracts the first element of the list.</li>
<li><code>[2]</code> extracts the second part of the split string.</li>
</ul>
</section>
</section>
<section id="using-stringr" class="level2">
<h2 class="anchored" data-anchor-id="using-stringr">Using <code>stringr</code></h2>
<p>The <code>stringr</code> package, part of the tidyverse, provides consistent and easy-to-use string functions.</p>
<section id="example-1-using-str_extract" class="level3">
<h3 class="anchored" data-anchor-id="example-1-using-str_extract">Example 1: Using <code>str_extract</code></h3>
<p>The <code>str_extract</code> function extracts matching patterns from a string.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example string</span></span>
<span id="cb5-4">string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple-pie"</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract substring after the hyphen</span></span>
<span id="cb5-7">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(?&lt;=-).*"</span>)</span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: "pie"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "pie"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>(?&lt;=-)</code> is a look behind assertion, ensuring the match occurs after a hyphen.</li>
<li><code>.*</code> matches any character zero or more times.</li>
</ul>
</section>
<section id="example-2-using-str_split" class="level3">
<h3 class="anchored" data-anchor-id="example-2-using-str_split">Example 2: Using <code>str_split</code></h3>
<p>Similar to <code>strsplit</code> in base R, <code>str_split</code> splits a string based on a pattern.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example string</span></span>
<span id="cb7-2">string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"open-source"</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the string at the hyphen</span></span>
<span id="cb7-5">parts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the part after the hyphen</span></span>
<span id="cb7-8">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: "source"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "source"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>str_split(string, "-")</code> splits the string into parts at the hyphen, returning a list.</li>
<li><code>[[1]]</code> extracts the first element of the list.</li>
<li><code>[2]</code> extracts the second part of the split string.</li>
</ul>
</section>
</section>
<section id="using-stringi" class="level2">
<h2 class="anchored" data-anchor-id="using-stringi">Using <code>stringi</code></h2>
<p>The <code>stringi</code> package is another powerful tool for string manipulation, providing high-performance functions.</p>
<section id="example-1-using-stri_extract" class="level3">
<h3 class="anchored" data-anchor-id="example-1-using-stri_extract">Example 1: Using <code>stri_extract</code></h3>
<p>The <code>stri_extract</code> function extracts substrings based on patterns.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringi)</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example string</span></span>
<span id="cb9-4">string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"front-end"</span></span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract substring after the hyphen</span></span>
<span id="cb9-7">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_extract</span>(string, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(?&lt;=-).*"</span>)</span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: "end"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "end"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>regex = "(?&lt;=-).*"</code> uses a regular expression where <code>(?&lt;=-)</code> is a lookbehind assertion ensuring the match occurs after a hyphen, and <code>.*</code> matches any character zero or more times.</li>
</ul>
</section>
<section id="example-2-using-stri_split" class="level3">
<h3 class="anchored" data-anchor-id="example-2-using-stri_split">Example 2: Using <code>stri_split</code></h3>
<p>Similar to <code>strsplit</code> and <code>str_split</code>, <code>stri_split</code> splits a string based on a pattern.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example string</span></span>
<span id="cb11-2">string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"full-stack"</span></span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the string at the hyphen</span></span>
<span id="cb11-5">parts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_split</span>(string, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the part after the hyphen</span></span>
<span id="cb11-8">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb11-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: "stack"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "stack"</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>stri_split(string, regex = "-")</code> splits the string into parts at the hyphen, returning a list.</li>
<li><code>[[1]]</code> extracts the first element of the list.</li>
<li><code>[2]</code> extracts the second part of the split string.</li>
</ul>
</section>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>There you have it—three different ways to extract a substring after a specific character in R. Each method has its own benefits and can be handy depending on your specific needs. Give these examples a try and see which one works best for your data!</p>
<hr>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>operations</category>
  <category>strings</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-02/</guid>
  <pubDate>Tue, 02 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Unlocking the Power of Administrative Data with healthyR.data</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-07-01/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hello, fellow data enthusiasts! Today, I’m excited to share insights into the <strong>{ healthyR.data }</strong> package, an essential tool in the healthyverse that will streamline your data exploration and testing processes. Whether you’re a seasoned data scientist or just starting out in data analytics, this package is designed to be valuable for everyone.</p>
<section id="what-is-healthyr.data" class="level2">
<h2 class="anchored" data-anchor-id="what-is-healthyr.data">What is { healthyR.data }?</h2>
<p>The <strong>{ healthyR.data }</strong> package serves two primary purposes: providing a robust administrative data set for testing functions in the <strong>{ healthyR }</strong> package and facilitating the download of important data from the Centers for Medicare and Medicaid Services (CMS), a division of the Department of Health and Human Services (HHS). This package is your resource for comprehensive data that can enhance your analytical capabilities and simplify your testing procedures.</p>
</section>
<section id="key-features" class="level2">
<h2 class="anchored" data-anchor-id="key-features">Key Features</h2>
<section id="comprehensive-administrative-data-set" class="level3">
<h3 class="anchored" data-anchor-id="comprehensive-administrative-data-set">1. Comprehensive Administrative Data Set</h3>
<p>One of the main features of <strong>{ healthyR.data }</strong> is its extensive administrative data set. This data set is carefully curated to include a variety of scenarios and variables commonly found in healthcare data analysis. This makes it an excellent tool for testing the functions of the <strong>{ healthyR }</strong> package, ensuring your analytical methods are reliable and effective.</p>
</section>
<section id="cms-data-access" class="level3">
<h3 class="anchored" data-anchor-id="cms-data-access">2. CMS Data Access</h3>
<p>In addition to its built-in data set, <strong>{ healthyR.data }</strong> allows you to download data directly from CMS. This feature is especially useful for healthcare analysts who need up-to-date and detailed data for their analyses. With <strong>{ healthyR.data }</strong>, you can easily access a wealth of information to drive insightful analysis.</p>
</section>
</section>
<section id="getting-started" class="level2">
<h2 class="anchored" data-anchor-id="getting-started">Getting Started</h2>
<p>To start using <strong>{ healthyR.data }</strong>, you can install it from CRAN with the following command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"healthyR.data"</span>)</span></code></pre></div>
<p>Once installed, load the package with:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.data)</span></code></pre></div>
</section>
<section id="functions" class="level2">
<h2 class="anchored" data-anchor-id="functions">Functions</h2>
<p>Load the libraries:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.data)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DT)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Functions and their arguments for healthyR</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">pat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%&gt;%"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":="</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"as_label"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"as_name"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enquo"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enquos"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"expr"</span>,</span>
<span id="cb4-4">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sym"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"syms"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"healthyR_data"</span>)</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls.str</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"package:healthyR.data"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>fns <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">params =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(fns, formalArgs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(fns) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">func_with_params =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toString</span>(params)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">func_with_params =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(</span>
<span id="cb4-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(</span>
<span id="cb4-14">        func_with_params, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">("</span>), </span>
<span id="cb4-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(fns, func_with_params), </span>
<span id="cb4-16">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(fns, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("</span>, func_with_params, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)</span>
<span id="cb4-17">    )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(fns, func_with_params) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(fns)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datatable</span>(</span>
<span id="cb4-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#class = 'cell-boarder-stripe',</span></span>
<span id="cb4-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colnames =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Function"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Full Call"</span>),</span>
<span id="cb4-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb4-24">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">autowidth =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb4-25">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pageLength =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-26">    )</span>
<span id="cb4-27">  )</span></code></pre></div>
<div class="cell-output-display">
<div class="datatables html-widget html-fill-item" id="htmlwidget-0f7976018fc39b19273a" style="width:100%;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-0f7976018fc39b19273a">{"x":{"filter":"none","vertical":false,"data":[["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26"],["current_asc_data","current_asc_oas_cahps_data","current_comp_death_data","current_hai_data","current_hcahps_data","current_hosp_data","current_hosp_data_dict","current_hvbp_data","current_ipfqr_data","current_maternal_data","current_medicare_hospital_spending_data","current_oqr_oas_cahps_data","current_outpatient_imaging_efficiency_data","current_payments_data","current_pch_hai_hospital_data","current_pch_hcahps_data","current_pch_oncology_measures_hospital_data","current_pch_outcomes_data","current_timely_and_effective_care_data","current_unplanned_hospital_vists_data","current_va_data","fetch_cms_data","fetch_provider_data","get_cms_meta_data","get_provider_meta_data","is_valid_url"],["current_asc_datac(\".data\", \".data_sets\")","current_asc_oas_cahps_datac(\".data\", \".data_sets\")","current_comp_death_datac(\".data\", \".data_sets\")","current_hai_datac(\".data\", \".data_sets\")","current_hcahps_datac(\".data\", \".data_sets\")","current_hosp_data(path)","current_hosp_data_dict(.open_folder)","current_hvbp_datac(\".data\", \".data_sets\")","current_ipfqr_datac(\".data\", \".data_sets\")","current_maternal_datac(\".data\", \".data_sets\")","current_medicare_hospital_spending_datac(\".data\", \".data_sets\")","current_oqr_oas_cahps_datac(\".data\", \".data_sets\")","current_outpatient_imaging_efficiency_datac(\".data\", \".data_sets\")","current_payments_datac(\".data\", \".data_sets\")","current_pch_hai_hospital_data(.data)","current_pch_hcahps_datac(\".data\", \".data_sets\")","current_pch_oncology_measures_hospital_data(.data)","current_pch_outcomes_datac(\".data\", \".data_sets\")","current_timely_and_effective_care_datac(\".data\", \".data_sets\")","current_unplanned_hospital_vists_datac(\".data\", \".data_sets\")","current_va_datac(\".data\", \".data_sets\")","fetch_cms_data(.data_link)","fetch_provider_datac(\".data_link\", \".limit\")","get_cms_meta_datac(\".title\", \".modified_date\", \".keyword\", \".identifier\", \".data_version\", \".media_type\")","get_provider_meta_datac(\".identifier\", \".title\", \".description\", \".keyword\", \".issued\", \".modified\", \".released\", \".theme\", \".media_type\")","is_valid_url(url)"]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Function<\/th>\n      <th>Full Call<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"autowidth":true,"pageLength":10,"columnDefs":[{"orderable":false,"targets":0},{"name":" ","targets":0},{"name":"fns","targets":1},{"name":"func_with_params","targets":2}],"order":[],"autoWidth":false,"orderClasses":false}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="using-the-administrative-data-set" class="level2">
<h2 class="anchored" data-anchor-id="using-the-administrative-data-set">Using the Administrative Data Set</h2>
<p>The administrative data set included in <strong>{ healthyR.data }</strong> is ready for your analytical projects. Here’s a quick example:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the healthyR.data package</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.data)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Explore the dataset</span></span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"healthyR_data"</span>)</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(healthyR_data)</span></code></pre></div>
<p>This will give you a look at the data and its structure, providing a strong foundation for your analysis.</p>
</section>
<section id="downloading-cms-data" class="level2">
<h2 class="anchored" data-anchor-id="downloading-cms-data">Downloading CMS Data</h2>
<p>Accessing CMS data is simple with <strong>{ healthyR.data }</strong>. The package includes functions that allow you to download various datasets directly from the CMS website. Here’s how:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download CMS data</span></span>
<span id="cb6-2">cms_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_cms_meta_data</span>()</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the downloaded data</span></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(cms_data)</span></code></pre></div>
<p>This function fetches the latest data from CMS, ensuring your analyses are based on current information.</p>
</section>
<section id="latest-updates-and-features" class="level2">
<h2 class="anchored" data-anchor-id="latest-updates-and-features">Latest Updates and Features</h2>
<p>The <strong>{ healthyR.data }</strong> package is continually updated, with new features and improvements added regularly. The latest version, 1.1.0, includes several enhancements that make the package even more powerful and user-friendly. For a detailed overview of the latest updates, check out the <a href="https://www.spsanderson.com/healthyR.data/news/index.html#healthyrdata-110">NEWS</a> section.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In summary, <strong>{ healthyR.data }</strong> is a versatile package that provides essential tools for healthcare data analysis. Whether you’re testing functions from the <strong>{ healthyR }</strong> package or downloading the latest CMS data, <strong>{ healthyR.data }</strong> has you covered. I encourage you to download the package and explore how it can enhance your analytical projects.</p>
<p>Happy coding, and may your data always be insightful!</p>
<hr>
<p>For more information and detailed documentation, visit the <a href="https://www.spsanderson.com/healthyR.data/reference/index.html">reference page</a>. Stay tuned for more updates and tips on how to get the most out of the healthyverse packages!</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrdata</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-07-01/</guid>
  <pubDate>Mon, 01 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Execute VBA Code in Excel via R using RDCOMClient</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-28/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hey everyone,</p>
<p>Today, I want to share a neat way to bridge the gap between R and Excel using VBA. Specifically, we’ll look at how to run VBA code in Excel directly from R. This can be incredibly useful if you’re looking to automate repetitive tasks or leverage the power of VBA while working within the R environment.</p>
<p>We’ll use the <code>RDCOMClient</code> library, which allows R to control COM (Component Object Model) objects, such as an Excel application. If you’ve ever found yourself toggling between R and Excel, this method will streamline your workflow significantly.</p>
<section id="what-well-do" class="level2">
<h2 class="anchored" data-anchor-id="what-well-do">What We’ll Do</h2>
<p>We’ll write a VBA macro that populates cells A1:A10 with random numbers and then run this macro from R.</p>
</section>
<section id="step-by-step-guide" class="level2">
<h2 class="anchored" data-anchor-id="step-by-step-guide">Step-by-Step Guide</h2>
<section id="install-and-load-rdcomclient" class="level4">
<h4 class="anchored" data-anchor-id="install-and-load-rdcomclient">1. Install and Load <code>RDCOMClient</code></h4>
<p>First, you’ll need to install the <code>RDCOMClient</code> package. It’s not available on CRAN, so you have to install it from the <code>omegahat</code> repository.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RDCOMClient"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://www.omegahat.net/R"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RDCOMClient)</span></code></pre></div>
</section>
<section id="set-up-excel-and-vba-macro" class="level4">
<h4 class="anchored" data-anchor-id="set-up-excel-and-vba-macro">2. Set Up Excel and VBA Macro</h4>
<p>Open Excel and press <code>ALT + F11</code> to open the VBA editor. Insert a new module and add the following VBA code:</p>
<pre class="vba"><code>Sub FillRandomNumbers()
    Dim i As Integer
    For i = 1 To 10
        Cells(i, 1).Value = Rnd()
    Next i
End Sub</code></pre>
<p>This macro fills cells A1 to A10 with random numbers.</p>
</section>
<section id="run-the-vba-macro-from-r" class="level4">
<h4 class="anchored" data-anchor-id="run-the-vba-macro-from-r">3. Run the VBA Macro from R</h4>
<p>Now, let’s write the R code to open Excel, run the macro, and then close Excel.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the RDCOMClient library</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RDCOMClient)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new instance of Excel application</span></span>
<span id="cb3-5">excel_app <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COMCreate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excel.Application"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make Excel visible (optional)</span></span>
<span id="cb3-8">excel_app[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Visible"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a new workbook</span></span>
<span id="cb3-11">wb_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Users</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">steve</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Documents</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GitHub</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">steveondata</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">posts</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2024-06-28</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">vba_rand_from_r.xlsm"</span></span>
<span id="cb3-12">workbook <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> excel_app[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Workbooks"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Open</span>(wb_path)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reference the first sheet</span></span>
<span id="cb3-15">sheet <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> workbook<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Worksheets</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the macro</span></span>
<span id="cb3-18">excel_app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Run</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FillRandomNumbers"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the workbook (optional)</span></span>
<span id="cb5-2">workbook<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SaveAs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Users</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">steve</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Documents</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GitHub</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">steveondata</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">posts</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2024-06-28</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">random_numbers.xlsm"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Close Excel</span></span>
<span id="cb7-2">excel_app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Quit</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Release the COM object</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(excel_app)</span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(sheet)</span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(workbook)</span>
<span id="cb9-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gc</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>          used (Mb) gc trigger (Mb) max used (Mb)
Ncells  666819 35.7    1477710   79  1122664 60.0
Vcells 1220653  9.4    8388608   64  1770896 13.6</code></pre>
</div>
</div>
</section>
<section id="explanation" class="level3">
<h3 class="anchored" data-anchor-id="explanation">Explanation</h3>
<ol type="1">
<li><strong>Initialize Excel Application</strong>: <code>COMCreate("Excel.Application")</code> starts a new instance of Excel.</li>
<li><strong>Make Excel Visible</strong>: This step is optional but useful for debugging.</li>
<li><strong>Add Workbook and Reference Worksheet</strong>: We create a new workbook and reference the first sheet.</li>
<li><strong>Run the Macro</strong>: <code>excel_app$Run("FillRandomNumbers")</code> executes the macro.</li>
<li><strong>Save Workbook</strong>: Optionally save the workbook with the generated random numbers.</li>
<li><strong>Close and Clean Up</strong>: Close Excel and clean up the COM object to free up resources.</li>
</ol>
</section>
</section>
</section>
<section id="did-it-work" class="level1">
<h1>Did it work?</h1>
<p>Let’s make sure this actually worked.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readxl)</span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(</span>
<span id="cb11-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Users</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">steve</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Documents</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GitHub</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">steveondata</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">posts</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2024-06-28</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">random_numbers.xlsm"</span>,</span>
<span id="cb11-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-6">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 1
     ...1
    &lt;dbl&gt;
 1 0.706 
 2 0.533 
 3 0.580 
 4 0.290 
 5 0.302 
 6 0.775 
 7 0.0140
 8 0.761 
 9 0.814 
10 0.709 </code></pre>
</div>
</div>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself</h1>
<p>Give this a try and see how you can extend it to your own needs. Whether it’s automating report generation, data cleaning, or complex calculations, integrating R with VBA can enhance your productivity significantly. The <code>RDCOMClient</code> package opens up a world of possibilities for combining the strengths of R and Excel.</p>
<p>Feel free to share your experiences or ask questions in the comments.</p>
<hr>
<p>Happy coding!</p>
<p>Steve</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>vba</category>
  <category>excel</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-28/</guid>
  <pubDate>Fri, 28 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring Random Walks and Brownian Motions with healthyR.ts</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-27/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In the world of time series analysis, Random Walks, Brownian Motion, and Geometric Brownian Motion are fundamental concepts used in various fields, including finance, physics, and biology. Today, we’ll explore these concepts using functions from the <code>healthyR.ts</code> package.</p>
<section id="random-walks" class="level2">
<h2 class="anchored" data-anchor-id="random-walks">Random Walks</h2>
<p>A Random Walk is a path that consists of a series of random steps. It’s a simple but powerful concept used to model seemingly unpredictable paths, such as stock prices or animal movements.</p>
<p>Let’s generate and plot some Random Walks using the <code>ts_random_walk()</code> function from <code>healthyR.ts</code>.</p>
<section id="function-syntax" class="level3">
<h3 class="anchored" data-anchor-id="function-syntax">Function Syntax</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_random_walk</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_walks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.periods =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.initial_value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-7">)</span></code></pre></div>
<ul>
<li><code>.mean</code>: The desired mean of the random walks.</li>
<li><code>.sd</code>: The standard deviation of the random walks.</li>
<li><code>.num_walks</code>: The number of random walks you want to generate.</li>
<li><code>.periods</code>: The length of the random walk(s) you want to generate.</li>
<li><code>.initial_value</code>: The initial value where the random walks should start.</li>
</ul>
</section>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.ts)</span>
<span id="cb2-3"></span>
<span id="cb2-4">random_walk_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_random_walk</span>(</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, </span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_walks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.periods =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.initial_value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb2-10">  )</span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(random_walk_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 4
    run     x       y cum_y
  &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;
1     1     1  0.0725 1072.
2     1     2  0.182  1267.
3     1     3  0.110  1407.
4     1     4  0.0275 1445.
5     1     5 -0.0546 1367.
6     1     6  0.0712 1464.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">random_walk_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> random_walk_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb4-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb4-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb4-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> cum_y,</span>
<span id="cb4-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(run),</span>
<span id="cb4-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(run)</span>
<span id="cb4-8">    )</span>
<span id="cb4-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_random_walk_ggplot_layers</span>(random_walk_data)</span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(random_walk_plot)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-27/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This code generates 10 random walks over 100 periods, starting from an initial value of 1000. The resulting plot visualizes the paths of these random walks, each represented by a different color.</p>
</section>
</section>
<section id="brownian-motion" class="level2">
<h2 class="anchored" data-anchor-id="brownian-motion">Brownian Motion</h2>
<p>Brownian Motion, also known as Wiener Process, is a continuous-time stochastic process that is often used to model random movements in physics and finance.</p>
<section id="function-syntax-1" class="level3">
<h3 class="anchored" data-anchor-id="function-syntax-1">Function Syntax</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_brownian_motion</span>(</span>
<span id="cb5-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.delta_time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.initial_value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb5-7">)</span></code></pre></div>
<ul>
<li><code>.time</code>: Total time of the simulation.</li>
<li><code>.num_sims</code>: Total number of simulations.</li>
<li><code>.delta_time</code>: Time step size.</li>
<li><code>.initial_value</code>: Initial value of the simulation.</li>
<li><code>.return_tibble</code>: Return a tibble (TRUE) or a matrix (FALSE).</li>
</ul>
</section>
<section id="example-1" class="level3">
<h3 class="anchored" data-anchor-id="example-1">Example</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">brownian_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_brownian_motion</span>(</span>
<span id="cb6-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.delta_time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.initial_value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb6-7">)</span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(brownian_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  sim_number       t     y
  &lt;fct&gt;        &lt;int&gt; &lt;dbl&gt;
1 sim_number 1     1     0
2 sim_number 2     1     0
3 sim_number 3     1     0
4 sim_number 4     1     0
5 sim_number 5     1     0
6 sim_number 6     1     0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">brownian_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_brownian_motion_plot</span>(</span>
<span id="cb8-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> brownian_data,</span>
<span id="cb8-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_col =</span> t,</span>
<span id="cb8-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_col =</span> y,</span>
<span id="cb8-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb8-6">)</span>
<span id="cb8-7">brownian_plot</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-90783e5499734b017fec" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-90783e5499734b017fec">{"x":{"data":[{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-1.9624214170529242,-0.73051815627696404,-0.94330170435097305,-0.16222708913014852,0.99745673430599546,1.9409239809615535,0.71221295433491061,1.4786397225334338,1.2562164176791044,-0.035475712206262222,1.1053603053023053,0.70975993708259588,1.5197775842341685,2.0504144236893578,3.3110742128880184,2.8140442027863908,1.6699115825594308,0.47473800573630254,1.2296220261121631,1.0470668173488287,1.2021717015750677,1.4749166216859912,0.66542496489868874,1.773305267150916,-1.0482130156806131,-0.21945267889293979,-0.94078112847439099,-0.19129563478451356,-1.2945316705849965,0.58818636201713459,1.2102402240046921,-0.0055032015802701229,-1.0862923791426708,0.37918169947704333,0.4034847466037082,0.44039184968089923,-0.090052083109810555,-0.96972280759464624,-0.75658902847997833,0.67974703962421779,1.0151065594255702,0.13538241388670047,0.91197937834347287,1.526029973964357,2.2565409036357726,1.6016477664018389,2.5116840879479012,3.1895607748769672,2.542644373502748,1.3471580388010824,2.7016552751010692,2.3309834745713811,3.6931279855307317,3.0722579882747088,1.9177421070696639,3.2735186017008235,2.8615833757597176,2.0538415350375558,1.4032654802863633,1.2921363581856797,1.0666085988207674,2.3419108081203324,2.6953087117985226,4.1276707867980846,4.7180819358947597,3.1905445986697152,2.2033481439104268,2.3692673279157508,2.5048653619906638,3.4434138697627157,3.8870240588144416,5.3356536462376898,5.6812156116646024,5.3071789085428112,4.7752876658745276,5.7789288781473216,5.7187487676472122,6.14568724775161,6.4031934307633112,6.1013681581671664,7.1227209849467696,9.6490937544601501,9.2785613810770133,8.1491769375369252,7.6183376796761131,6.3251158701972718,4.8738469742432073,5.5208485317204268,6.2958507535156985,6.6331183993600389,6.9802489642053933,5.5549635428732653,3.6909888414694603,3.2486991626131387,3.2127163120037268,2.7965534248996922,2.6804223006407741,2.2992973287096352,2.8789127286595866,4.5612975891058243],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   2<br />y:  -1.962421417<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   3<br />y:  -0.730518156<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   4<br />y:  -0.943301704<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   5<br />y:  -0.162227089<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   6<br />y:   0.997456734<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   7<br />y:   1.940923981<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   8<br />y:   0.712212954<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   9<br />y:   1.478639723<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  10<br />y:   1.256216418<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  11<br />y:  -0.035475712<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  12<br />y:   1.105360305<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  13<br />y:   0.709759937<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  14<br />y:   1.519777584<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  15<br />y:   2.050414424<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  16<br />y:   3.311074213<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  17<br />y:   2.814044203<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  18<br />y:   1.669911583<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  19<br />y:   0.474738006<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  20<br />y:   1.229622026<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  21<br />y:   1.047066817<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  22<br />y:   1.202171702<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  23<br />y:   1.474916622<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  24<br />y:   0.665424965<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  25<br />y:   1.773305267<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  26<br />y:  -1.048213016<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  27<br />y:  -0.219452679<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  28<br />y:  -0.940781128<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  29<br />y:  -0.191295635<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  30<br />y:  -1.294531671<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  31<br />y:   0.588186362<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  32<br />y:   1.210240224<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  33<br />y:  -0.005503202<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  34<br />y:  -1.086292379<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  35<br />y:   0.379181699<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  36<br />y:   0.403484747<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  37<br />y:   0.440391850<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  38<br />y:  -0.090052083<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  39<br />y:  -0.969722808<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  40<br />y:  -0.756589028<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  41<br />y:   0.679747040<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  42<br />y:   1.015106559<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  43<br />y:   0.135382414<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  44<br />y:   0.911979378<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  45<br />y:   1.526029974<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  46<br />y:   2.256540904<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  47<br />y:   1.601647766<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  48<br />y:   2.511684088<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  49<br />y:   3.189560775<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  50<br />y:   2.542644374<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  51<br />y:   1.347158039<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  52<br />y:   2.701655275<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  53<br />y:   2.330983475<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  54<br />y:   3.693127986<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  55<br />y:   3.072257988<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  56<br />y:   1.917742107<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  57<br />y:   3.273518602<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  58<br />y:   2.861583376<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  59<br />y:   2.053841535<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  60<br />y:   1.403265480<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  61<br />y:   1.292136358<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  62<br />y:   1.066608599<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  63<br />y:   2.341910808<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  64<br />y:   2.695308712<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  65<br />y:   4.127670787<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  66<br />y:   4.718081936<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  67<br />y:   3.190544599<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  68<br />y:   2.203348144<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  69<br />y:   2.369267328<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  70<br />y:   2.504865362<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  71<br />y:   3.443413870<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  72<br />y:   3.887024059<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  73<br />y:   5.335653646<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  74<br />y:   5.681215612<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  75<br />y:   5.307178909<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  76<br />y:   4.775287666<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  77<br />y:   5.778928878<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  78<br />y:   5.718748768<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  79<br />y:   6.145687248<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  80<br />y:   6.403193431<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  81<br />y:   6.101368158<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  82<br />y:   7.122720985<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  83<br />y:   9.649093754<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  84<br />y:   9.278561381<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  85<br />y:   8.149176938<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  86<br />y:   7.618337680<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  87<br />y:   6.325115870<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  88<br />y:   4.873846974<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  89<br />y:   5.520848532<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  90<br />y:   6.295850754<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  91<br />y:   6.633118399<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  92<br />y:   6.980248964<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  93<br />y:   5.554963543<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  94<br />y:   3.690988841<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  95<br />y:   3.248699163<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  96<br />y:   3.212716312<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  97<br />y:   2.796553425<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  98<br />y:   2.680422301<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  99<br />y:   2.299297329<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 100<br />y:   2.878912729<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 101<br />y:   4.561297589<br />sim_number: sim_number 1<br />sim_number: sim_number 1"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"sim_number 1","legendgroup":"sim_number 1","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.73894405105159455,-1.8106752859226867,-1.5701963961362513,-2.7597267120506848,-4.6336448837347382,-3.8827295224518168,-2.8454050636128176,-1.845201252487719,-1.0461378601870204,0.9880626937883259,0.85464033393447225,0.69983951889194418,-0.37264198207659832,0.32708283838767133,0.22230457858218827,-0.51946668118377548,-0.72121427445660058,-0.95623799531240827,-1.6019276513778378,-0.55829885222678821,-1.5189736054586707,-2.9383745135695727,-1.8916227960491503,-2.5809289634133155,-0.99712751376045339,-1.8325981721424802,-1.7226730026101555,-1.6521636965550679,-1.5964624503299201,-1.6499917350710922,-3.2347582731892981,-4.2804883142534678,-4.3988577704371519,-5.1891084697669738,-5.5948120113533042,-5.1432463663581931,-4.6840473897767732,-6.7287722449635803,-5.4248758403667328,-4.0863007548658468,-5.8396115222166047,-6.1078833776411052,-6.2987918248857948,-6.8570146886567551,-7.2481422705064782,-6.5244784275606031,-5.3779379292365821,-3.942865202341125,-3.3999940831528161,-2.8191282426065163,-3.7016446952243638,-3.370510200039925,-3.958588446294502,-3.9592486107422964,-4.1812503680586222,-4.2187530017107839,-4.180206561239773,-3.3930888261128676,-3.589427133745648,-3.3607969941001237,-3.0956956238439974,-4.1807524695249283,-4.3810481685073714,-4.635536236845061,-3.9425234108608413,-5.2065839011375381,-5.011557051664421,-5.0951677489913658,-3.262069381472545,-3.3781932452277887,-3.2899139701178428,-2.557735040748764,-2.130644188656913,-3.0715626473925877,-4.1370351051877945,-3.3035332973226663,-4.6548266174557069,-5.7115093130444308,-8.0069344465226475,-7.4661099266054913,-8.4654640512809856,-8.8377541784832463,-10.336549705436815,-10.470593850037869,-11.255235679732374,-11.550524090355587,-11.839111119766841,-11.555126047767265,-11.183855530600693,-10.491888577789256,-10.528806448080022,-9.5351483703945998,-10.89600008683532,-11.889320519083981,-10.302321625325154,-10.622460662875921,-10.980366368459357,-9.7620186206820794,-9.1195102601041018,-9.3705366701399964],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   2<br />y:   0.738944051<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   3<br />y:  -1.810675286<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   4<br />y:  -1.570196396<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   5<br />y:  -2.759726712<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   6<br />y:  -4.633644884<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   7<br />y:  -3.882729522<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   8<br />y:  -2.845405064<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   9<br />y:  -1.845201252<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  10<br />y:  -1.046137860<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  11<br />y:   0.988062694<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  12<br />y:   0.854640334<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  13<br />y:   0.699839519<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  14<br />y:  -0.372641982<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  15<br />y:   0.327082838<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  16<br />y:   0.222304579<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  17<br />y:  -0.519466681<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  18<br />y:  -0.721214274<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  19<br />y:  -0.956237995<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  20<br />y:  -1.601927651<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  21<br />y:  -0.558298852<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  22<br />y:  -1.518973605<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  23<br />y:  -2.938374514<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  24<br />y:  -1.891622796<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  25<br />y:  -2.580928963<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  26<br />y:  -0.997127514<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  27<br />y:  -1.832598172<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  28<br />y:  -1.722673003<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  29<br />y:  -1.652163697<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  30<br />y:  -1.596462450<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  31<br />y:  -1.649991735<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  32<br />y:  -3.234758273<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  33<br />y:  -4.280488314<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  34<br />y:  -4.398857770<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  35<br />y:  -5.189108470<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  36<br />y:  -5.594812011<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  37<br />y:  -5.143246366<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  38<br />y:  -4.684047390<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  39<br />y:  -6.728772245<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  40<br />y:  -5.424875840<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  41<br />y:  -4.086300755<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  42<br />y:  -5.839611522<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  43<br />y:  -6.107883378<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  44<br />y:  -6.298791825<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  45<br />y:  -6.857014689<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  46<br />y:  -7.248142271<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  47<br />y:  -6.524478428<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  48<br />y:  -5.377937929<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  49<br />y:  -3.942865202<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  50<br />y:  -3.399994083<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  51<br />y:  -2.819128243<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  52<br />y:  -3.701644695<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  53<br />y:  -3.370510200<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  54<br />y:  -3.958588446<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  55<br />y:  -3.959248611<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  56<br />y:  -4.181250368<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  57<br />y:  -4.218753002<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  58<br />y:  -4.180206561<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  59<br />y:  -3.393088826<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  60<br />y:  -3.589427134<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  61<br />y:  -3.360796994<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  62<br />y:  -3.095695624<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  63<br />y:  -4.180752470<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  64<br />y:  -4.381048169<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  65<br />y:  -4.635536237<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  66<br />y:  -3.942523411<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  67<br />y:  -5.206583901<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  68<br />y:  -5.011557052<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  69<br />y:  -5.095167749<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  70<br />y:  -3.262069381<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  71<br />y:  -3.378193245<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  72<br />y:  -3.289913970<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  73<br />y:  -2.557735041<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  74<br />y:  -2.130644189<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  75<br />y:  -3.071562647<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  76<br />y:  -4.137035105<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  77<br />y:  -3.303533297<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  78<br />y:  -4.654826617<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  79<br />y:  -5.711509313<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  80<br />y:  -8.006934447<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  81<br />y:  -7.466109927<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  82<br />y:  -8.465464051<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  83<br />y:  -8.837754178<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  84<br />y: -10.336549705<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  85<br />y: -10.470593850<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  86<br />y: -11.255235680<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  87<br />y: -11.550524090<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  88<br />y: -11.839111120<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  89<br />y: -11.555126048<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  90<br />y: -11.183855531<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  91<br />y: -10.491888578<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  92<br />y: -10.528806448<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  93<br />y:  -9.535148370<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  94<br />y: -10.896000087<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  95<br />y: -11.889320519<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  96<br />y: -10.302321625<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  97<br />y: -10.622460663<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  98<br />y: -10.980366368<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  99<br />y:  -9.762018621<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 100<br />y:  -9.119510260<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 101<br />y:  -9.370536670<br />sim_number: sim_number 2<br />sim_number: sim_number 2"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(216,144,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 2","legendgroup":"sim_number 2","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-0.21850378218756183,-0.19131807609387091,0.30115320089626152,-0.45790522050691485,0.36974320517546366,1.1952546316903765,2.2154244587406029,4.1857666452105695,3.2722239765874881,3.1062428420175618,3.0212046112821649,2.1573247737362085,2.3536881367201583,3.2928728727584975,2.2641012692308382,1.6730982355390007,1.8802865498518389,2.9734252319383123,4.2644956961315881,3.4529352744236448,2.6086750340354485,3.1312963195920411,1.2035415866068997,1.9207749798222102,2.6054799022466328,1.3146168400014258,1.8359536549522266,3.1567461645276156,2.8311561216406824,3.4976513087818741,3.1146040132868404,3.7419696639608651,3.2940416237915353,3.5434800919886049,3.2187824354654029,3.1635484899667108,2.8517066748209925,2.3792102865418907,2.3998048764627553,2.9579124614297392,3.1693124103378048,4.5355238716439699,3.9293553983388074,4.4706552986619474,4.7733558485726606,4.7027794155773783,4.031459754497825,3.586500173365601,3.3466787456620399,1.6060116298938327,0.30464013478253993,-0.10802707887941364,-0.4664772379481863,-1.6946589580519873,-0.6015337236172853,-0.23694733145077268,0.056152997604782609,-0.27352659510862759,0.0035098549964135556,-0.4514245546297721,-0.44449642882640916,-0.37349473662745913,-0.87001771120236615,-2.1086069362342754,-1.7447437342548349,0.63988785202179022,0.30002255036447573,0.61240520417832178,-0.65167421364496814,-0.76964789562270319,0.42179557842206433,-1.5823514672508279,-3.572696673506929,-3.2068822130595662,-2.8604878429413061,-3.0333153401479733,-4.1486909243178758,-3.7771268010456853,-3.7943534252602653,-4.0923847040433534,-2.9038608236032966,-3.6878718392092313,-3.3820449513041586,-3.8235297159327546,-5.1101564182736752,-4.8062409992346602,-5.1698893239357187,-6.3042867811094832,-4.6712937149187468,-4.9808897570790513,-4.8978551515594715,-3.8027191365799746,-4.2230675759249765,-3.5704900451969364,-2.5298974123250813,-2.6782148147951519,-4.1238895934717359,-6.5612327922000908,-6.0016157569768183,-6.67759368809085],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   2<br />y:  -0.218503782<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   3<br />y:  -0.191318076<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   4<br />y:   0.301153201<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   5<br />y:  -0.457905221<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   6<br />y:   0.369743205<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   7<br />y:   1.195254632<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   8<br />y:   2.215424459<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   9<br />y:   4.185766645<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  10<br />y:   3.272223977<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  11<br />y:   3.106242842<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  12<br />y:   3.021204611<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  13<br />y:   2.157324774<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  14<br />y:   2.353688137<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  15<br />y:   3.292872873<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  16<br />y:   2.264101269<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  17<br />y:   1.673098236<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  18<br />y:   1.880286550<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  19<br />y:   2.973425232<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  20<br />y:   4.264495696<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  21<br />y:   3.452935274<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  22<br />y:   2.608675034<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  23<br />y:   3.131296320<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  24<br />y:   1.203541587<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  25<br />y:   1.920774980<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  26<br />y:   2.605479902<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  27<br />y:   1.314616840<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  28<br />y:   1.835953655<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  29<br />y:   3.156746165<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  30<br />y:   2.831156122<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  31<br />y:   3.497651309<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  32<br />y:   3.114604013<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  33<br />y:   3.741969664<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  34<br />y:   3.294041624<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  35<br />y:   3.543480092<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  36<br />y:   3.218782435<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  37<br />y:   3.163548490<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  38<br />y:   2.851706675<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  39<br />y:   2.379210287<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  40<br />y:   2.399804876<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  41<br />y:   2.957912461<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  42<br />y:   3.169312410<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  43<br />y:   4.535523872<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  44<br />y:   3.929355398<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  45<br />y:   4.470655299<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  46<br />y:   4.773355849<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  47<br />y:   4.702779416<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  48<br />y:   4.031459754<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  49<br />y:   3.586500173<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  50<br />y:   3.346678746<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  51<br />y:   1.606011630<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  52<br />y:   0.304640135<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  53<br />y:  -0.108027079<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  54<br />y:  -0.466477238<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  55<br />y:  -1.694658958<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  56<br />y:  -0.601533724<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  57<br />y:  -0.236947331<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  58<br />y:   0.056152998<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  59<br />y:  -0.273526595<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  60<br />y:   0.003509855<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  61<br />y:  -0.451424555<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  62<br />y:  -0.444496429<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  63<br />y:  -0.373494737<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  64<br />y:  -0.870017711<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  65<br />y:  -2.108606936<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  66<br />y:  -1.744743734<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  67<br />y:   0.639887852<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  68<br />y:   0.300022550<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  69<br />y:   0.612405204<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  70<br />y:  -0.651674214<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  71<br />y:  -0.769647896<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  72<br />y:   0.421795578<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  73<br />y:  -1.582351467<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  74<br />y:  -3.572696674<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  75<br />y:  -3.206882213<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  76<br />y:  -2.860487843<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  77<br />y:  -3.033315340<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  78<br />y:  -4.148690924<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  79<br />y:  -3.777126801<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  80<br />y:  -3.794353425<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  81<br />y:  -4.092384704<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  82<br />y:  -2.903860824<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  83<br />y:  -3.687871839<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  84<br />y:  -3.382044951<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  85<br />y:  -3.823529716<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  86<br />y:  -5.110156418<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  87<br />y:  -4.806240999<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  88<br />y:  -5.169889324<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  89<br />y:  -6.304286781<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  90<br />y:  -4.671293715<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  91<br />y:  -4.980889757<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  92<br />y:  -4.897855152<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  93<br />y:  -3.802719137<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  94<br />y:  -4.223067576<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  95<br />y:  -3.570490045<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  96<br />y:  -2.529897412<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  97<br />y:  -2.678214815<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  98<br />y:  -4.123889593<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  99<br />y:  -6.561232792<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 100<br />y:  -6.001615757<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 101<br />y:  -6.677593688<br />sim_number: sim_number 3<br />sim_number: sim_number 3"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(163,165,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 3","legendgroup":"sim_number 3","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,1.5890863983545738,2.5399298030906157,2.5484654141022292,2.1850379771767323,2.991640960674594,3.7236117894587255,3.4348797067581955,3.2385851547547539,3.1001293615707661,3.8751394081338533,3.3836503515637633,3.1098947177699436,2.6625041364974198,1.7118811614983755,1.5433940803238089,-0.71712909833128047,-1.1450355972775872,-0.49838362301820649,-0.48694487475376458,0.16379334235662191,-1.0459301013847226,-3.188592076269924,-3.9803742444322094,-3.9199577802856687,-3.8243531195461267,-3.9115845372091096,-4.7254996109594138,-4.4678925196301007,-4.4620361825022608,-5.2405805130867167,-5.9208299321782896,-6.3891976754167281,-7.8019129289774325,-9.8011488425782201,-10.043500865829637,-11.30733294960686,-11.401571853233648,-11.125570047563011,-10.771380893830528,-10.580308770375593,-9.8365241894881645,-10.351959916923933,-11.357126673677477,-10.909995172176451,-9.514783374720448,-7.0430016042347914,-7.683858481947337,-6.6346297496539419,-7.0460212576965704,-7.8479894188482344,-6.4796478695330757,-3.8641499243392858,-3.1910412368332333,-4.633416777935687,-6.0945674166746153,-6.229031308447432,-7.1295697141476317,-7.0913501389788927,-5.8270040833246304,-5.9734379407838611,-6.9086727446165908,-8.555955024840026,-8.3366120318081016,-7.7876908753266827,-8.5584412872620046,-8.9637321844100786,-8.8330919208056535,-8.5438868662786511,-8.7407731456711684,-9.5139365511776095,-10.341146364674747,-10.23728334245085,-11.177770632416255,-10.45052172274641,-8.5722041430242832,-9.1525973832151717,-8.9271789633927945,-8.0914613697076874,-8.3026991957341156,-8.9153452650217702,-9.7159653458458024,-11.357695025571571,-11.869617510782589,-9.5350900152839024,-11.341930872173746,-10.796644649225531,-11.736534422552404,-12.007877170207344,-12.76376095426318,-12.836353688696875,-14.349245683179458,-13.633570352654717,-11.658931272737744,-10.458057924355501,-10.959967389910711,-11.888806887796827,-12.151803335458872,-13.361144362191798,-13.213392394179856,-14.046914815270203],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   2<br />y:   1.589086398<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   3<br />y:   2.539929803<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   4<br />y:   2.548465414<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   5<br />y:   2.185037977<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   6<br />y:   2.991640961<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   7<br />y:   3.723611789<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   8<br />y:   3.434879707<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   9<br />y:   3.238585155<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  10<br />y:   3.100129362<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  11<br />y:   3.875139408<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  12<br />y:   3.383650352<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  13<br />y:   3.109894718<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  14<br />y:   2.662504136<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  15<br />y:   1.711881161<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  16<br />y:   1.543394080<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  17<br />y:  -0.717129098<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  18<br />y:  -1.145035597<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  19<br />y:  -0.498383623<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  20<br />y:  -0.486944875<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  21<br />y:   0.163793342<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  22<br />y:  -1.045930101<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  23<br />y:  -3.188592076<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  24<br />y:  -3.980374244<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  25<br />y:  -3.919957780<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  26<br />y:  -3.824353120<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  27<br />y:  -3.911584537<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  28<br />y:  -4.725499611<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  29<br />y:  -4.467892520<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  30<br />y:  -4.462036183<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  31<br />y:  -5.240580513<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  32<br />y:  -5.920829932<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  33<br />y:  -6.389197675<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  34<br />y:  -7.801912929<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  35<br />y:  -9.801148843<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  36<br />y: -10.043500866<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  37<br />y: -11.307332950<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  38<br />y: -11.401571853<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  39<br />y: -11.125570048<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  40<br />y: -10.771380894<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  41<br />y: -10.580308770<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  42<br />y:  -9.836524189<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  43<br />y: -10.351959917<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  44<br />y: -11.357126674<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  45<br />y: -10.909995172<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  46<br />y:  -9.514783375<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  47<br />y:  -7.043001604<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  48<br />y:  -7.683858482<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  49<br />y:  -6.634629750<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  50<br />y:  -7.046021258<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  51<br />y:  -7.847989419<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  52<br />y:  -6.479647870<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  53<br />y:  -3.864149924<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  54<br />y:  -3.191041237<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  55<br />y:  -4.633416778<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  56<br />y:  -6.094567417<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  57<br />y:  -6.229031308<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  58<br />y:  -7.129569714<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  59<br />y:  -7.091350139<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  60<br />y:  -5.827004083<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  61<br />y:  -5.973437941<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  62<br />y:  -6.908672745<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  63<br />y:  -8.555955025<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  64<br />y:  -8.336612032<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  65<br />y:  -7.787690875<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  66<br />y:  -8.558441287<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  67<br />y:  -8.963732184<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  68<br />y:  -8.833091921<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  69<br />y:  -8.543886866<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  70<br />y:  -8.740773146<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  71<br />y:  -9.513936551<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  72<br />y: -10.341146365<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  73<br />y: -10.237283342<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  74<br />y: -11.177770632<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  75<br />y: -10.450521723<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  76<br />y:  -8.572204143<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  77<br />y:  -9.152597383<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  78<br />y:  -8.927178963<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  79<br />y:  -8.091461370<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  80<br />y:  -8.302699196<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  81<br />y:  -8.915345265<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  82<br />y:  -9.715965346<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  83<br />y: -11.357695026<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  84<br />y: -11.869617511<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  85<br />y:  -9.535090015<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  86<br />y: -11.341930872<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  87<br />y: -10.796644649<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  88<br />y: -11.736534423<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  89<br />y: -12.007877170<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  90<br />y: -12.763760954<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  91<br />y: -12.836353689<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  92<br />y: -14.349245683<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  93<br />y: -13.633570353<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  94<br />y: -11.658931273<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  95<br />y: -10.458057924<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  96<br />y: -10.959967390<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  97<br />y: -11.888806888<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  98<br />y: -12.151803335<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  99<br />y: -13.361144362<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 100<br />y: -13.213392394<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 101<br />y: -14.046914815<br />sim_number: sim_number 4<br />sim_number: sim_number 4"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(57,182,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 4","legendgroup":"sim_number 4","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,1.4458437853730648,2.0902689344761285,2.2179933042577971,2.9080073814556986,1.8578989755108268,2.1042607022134292,-0.33743666642655262,0.81409738537207121,-0.785005383821896,-1.9929906910855106,-1.5404634651652604,-2.3194123443612495,-2.2619188020135415,-1.8030765172131411,-1.984364510771953,-2.3689188744860901,-2.0449737308934757,-2.481450936240535,-1.7330577847337201,-2.1095054378599398,-2.3649620416809669,-1.8103803945914372,-1.5830651948716279,-2.5765892879285777,-3.4133027184751774,-2.5495547082420611,-2.2944208120904812,-3.419186077388118,-4.6377278554715371,-3.3346441647647183,-3.806014572884711,-2.8981972467649566,-2.5661429106059477,-1.5396287959852424,-2.9252169228387279,-0.57155673814465358,-0.53086615117071323,-0.1974597351361882,1.1237746470893981,1.4917811031194532,0.8142308779352504,2.3820639049031516,1.7715437994530072,2.7590515525837938,5.0212161378077012,6.5921866797494708,6.3909322825850987,8.1865723303561673,9.1677639992055617,8.4250992230635866,8.5832597650129294,9.7239160301228136,7.4788379998081105,6.7239851273748554,7.4298457399869706,9.0375792644489774,10.328334315104218,10.40221165665848,11.064231615636494,11.911392898607135,11.558776450731388,11.066872343212525,12.589010059096987,10.212698545351387,11.432295984623549,11.195503512914666,12.807062929168698,9.9447937290645054,10.145668903343955,10.646015017565716,13.678021718943977,14.866544758264677,14.76741515643914,14.972834360936821,15.108710312956058,15.43004765561099,14.538916201435537,13.280623268153304,12.542612339657165,12.176837137645784,12.240169808242666,11.146058448037721,10.661136171005797,11.343318873854097,10.35771712673416,9.6242959723469585,10.520661965687694,10.066939918141552,10.340082536300057,10.980804457428173,11.690626043898009,10.541886644506008,10.614860736332064,10.026241949091009,10.053791044763008,9.3957654468961724,8.4239851239160917,7.6846823564765856,7.5546789464396022,8.3898549749194],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   2<br />y:   1.445843785<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   3<br />y:   2.090268934<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   4<br />y:   2.217993304<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   5<br />y:   2.908007381<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   6<br />y:   1.857898976<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   7<br />y:   2.104260702<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   8<br />y:  -0.337436666<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   9<br />y:   0.814097385<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  10<br />y:  -0.785005384<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  11<br />y:  -1.992990691<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  12<br />y:  -1.540463465<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  13<br />y:  -2.319412344<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  14<br />y:  -2.261918802<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  15<br />y:  -1.803076517<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  16<br />y:  -1.984364511<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  17<br />y:  -2.368918874<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  18<br />y:  -2.044973731<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  19<br />y:  -2.481450936<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  20<br />y:  -1.733057785<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  21<br />y:  -2.109505438<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  22<br />y:  -2.364962042<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  23<br />y:  -1.810380395<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  24<br />y:  -1.583065195<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  25<br />y:  -2.576589288<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  26<br />y:  -3.413302718<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  27<br />y:  -2.549554708<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  28<br />y:  -2.294420812<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  29<br />y:  -3.419186077<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  30<br />y:  -4.637727855<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  31<br />y:  -3.334644165<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  32<br />y:  -3.806014573<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  33<br />y:  -2.898197247<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  34<br />y:  -2.566142911<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  35<br />y:  -1.539628796<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  36<br />y:  -2.925216923<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  37<br />y:  -0.571556738<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  38<br />y:  -0.530866151<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  39<br />y:  -0.197459735<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  40<br />y:   1.123774647<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  41<br />y:   1.491781103<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  42<br />y:   0.814230878<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  43<br />y:   2.382063905<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  44<br />y:   1.771543799<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  45<br />y:   2.759051553<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  46<br />y:   5.021216138<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  47<br />y:   6.592186680<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  48<br />y:   6.390932283<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  49<br />y:   8.186572330<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  50<br />y:   9.167763999<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  51<br />y:   8.425099223<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  52<br />y:   8.583259765<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  53<br />y:   9.723916030<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  54<br />y:   7.478838000<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  55<br />y:   6.723985127<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  56<br />y:   7.429845740<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  57<br />y:   9.037579264<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  58<br />y:  10.328334315<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  59<br />y:  10.402211657<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  60<br />y:  11.064231616<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  61<br />y:  11.911392899<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  62<br />y:  11.558776451<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  63<br />y:  11.066872343<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  64<br />y:  12.589010059<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  65<br />y:  10.212698545<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  66<br />y:  11.432295985<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  67<br />y:  11.195503513<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  68<br />y:  12.807062929<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  69<br />y:   9.944793729<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  70<br />y:  10.145668903<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  71<br />y:  10.646015018<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  72<br />y:  13.678021719<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  73<br />y:  14.866544758<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  74<br />y:  14.767415156<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  75<br />y:  14.972834361<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  76<br />y:  15.108710313<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  77<br />y:  15.430047656<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  78<br />y:  14.538916201<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  79<br />y:  13.280623268<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  80<br />y:  12.542612340<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  81<br />y:  12.176837138<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  82<br />y:  12.240169808<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  83<br />y:  11.146058448<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  84<br />y:  10.661136171<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  85<br />y:  11.343318874<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  86<br />y:  10.357717127<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  87<br />y:   9.624295972<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  88<br />y:  10.520661966<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  89<br />y:  10.066939918<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  90<br />y:  10.340082536<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  91<br />y:  10.980804457<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  92<br />y:  11.690626044<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  93<br />y:  10.541886645<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  94<br />y:  10.614860736<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  95<br />y:  10.026241949<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  96<br />y:  10.053791045<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  97<br />y:   9.395765447<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  98<br />y:   8.423985124<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  99<br />y:   7.684682356<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 100<br />y:   7.554678946<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 101<br />y:   8.389854975<br />sim_number: sim_number 5<br />sim_number: sim_number 5"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,191,125,1)","dash":"solid"},"hoveron":"points","name":"sim_number 5","legendgroup":"sim_number 5","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-0.85946702758767812,-0.77405768882782511,-0.94820558001623423,-0.0085248868849960163,-0.31562405784189401,-1.3265829547567707,-2.5200747945755397,-1.5357836669061631,-1.191325123410423,-0.76418913784495834,-0.80717372912619467,-0.83282192446745928,0.028981849203606268,-0.59976521427844376,-1.0298828936473072,-0.00670912843545899,-1.5445794096526089,-1.0671139386659358,0.034664479593431628,-0.061299872877629578,-0.13458338754137386,0.8077472698913738,1.0766983680905413,0.78616225393765171,2.0538922538334372,1.4002056090655848,0.38997168366117879,0.35784060774639465,-0.47670428125217684,-0.46666389749274112,0.12216143451358627,-0.11865543765007475,0.24158938200854346,0.85300489723873918,1.8125843153514507,0.64115027194771324,1.6869759294792703,-0.077368507140314124,-0.025508447335086032,0.094905895687308367,-1.2594973956184188,0.87661812879494438,0.068652600985527751,0.81260826497491079,1.5098674788411965,1.5875764865691468,4.4636048220098195,3.7554321775335469,4.7011023531475686,4.3021644216171078,4.4002924785154613,2.361058575901656,4.0416711337199445,2.1291905840792493,3.0185588326410611,2.8844917252891866,2.1186407797166611,3.3370913419942418,2.4730469340667351,2.1568049401631697,2.3715060820491756,4.8030009544863166,5.7002216322287911,6.7675360950730878,8.334246586708149,9.5550327116890177,7.594188390084871,7.1552320925964636,9.1526845007427706,8.2057273433202287,8.8707950718153938,8.5197061936965213,8.8101919803586295,8.0847647180771354,6.4033326767272314,6.4753230662680004,5.163925705842896,5.5256649117063166,5.2913945912306408,4.340901208531438,3.1310770225799498,4.7082609143678207,3.6977217531223117,4.4067968993892919,2.1980113606147316,0.9921946019670842,1.5018383233619714,0.59827152470757772,0.23802186427535021,0.79348194042731679,0.85126417930469755,-0.3791264893958266,0.18739073523559269,0.12884073093248372,-0.88217740198667727,-0.56744669593277353,0.0087533288637070463,1.3820120205727606,1.2600608875632993,2.0510799906874397],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   2<br />y:  -0.859467028<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   3<br />y:  -0.774057689<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   4<br />y:  -0.948205580<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   5<br />y:  -0.008524887<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   6<br />y:  -0.315624058<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   7<br />y:  -1.326582955<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   8<br />y:  -2.520074795<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   9<br />y:  -1.535783667<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  10<br />y:  -1.191325123<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  11<br />y:  -0.764189138<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  12<br />y:  -0.807173729<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  13<br />y:  -0.832821924<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  14<br />y:   0.028981849<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  15<br />y:  -0.599765214<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  16<br />y:  -1.029882894<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  17<br />y:  -0.006709128<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  18<br />y:  -1.544579410<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  19<br />y:  -1.067113939<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  20<br />y:   0.034664480<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  21<br />y:  -0.061299873<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  22<br />y:  -0.134583388<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  23<br />y:   0.807747270<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  24<br />y:   1.076698368<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  25<br />y:   0.786162254<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  26<br />y:   2.053892254<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  27<br />y:   1.400205609<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  28<br />y:   0.389971684<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  29<br />y:   0.357840608<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  30<br />y:  -0.476704281<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  31<br />y:  -0.466663897<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  32<br />y:   0.122161435<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  33<br />y:  -0.118655438<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  34<br />y:   0.241589382<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  35<br />y:   0.853004897<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  36<br />y:   1.812584315<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  37<br />y:   0.641150272<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  38<br />y:   1.686975929<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  39<br />y:  -0.077368507<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  40<br />y:  -0.025508447<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  41<br />y:   0.094905896<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  42<br />y:  -1.259497396<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  43<br />y:   0.876618129<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  44<br />y:   0.068652601<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  45<br />y:   0.812608265<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  46<br />y:   1.509867479<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  47<br />y:   1.587576487<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  48<br />y:   4.463604822<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  49<br />y:   3.755432178<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  50<br />y:   4.701102353<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  51<br />y:   4.302164422<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  52<br />y:   4.400292479<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  53<br />y:   2.361058576<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  54<br />y:   4.041671134<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  55<br />y:   2.129190584<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  56<br />y:   3.018558833<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  57<br />y:   2.884491725<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  58<br />y:   2.118640780<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  59<br />y:   3.337091342<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  60<br />y:   2.473046934<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  61<br />y:   2.156804940<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  62<br />y:   2.371506082<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  63<br />y:   4.803000954<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  64<br />y:   5.700221632<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  65<br />y:   6.767536095<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  66<br />y:   8.334246587<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  67<br />y:   9.555032712<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  68<br />y:   7.594188390<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  69<br />y:   7.155232093<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  70<br />y:   9.152684501<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  71<br />y:   8.205727343<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  72<br />y:   8.870795072<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  73<br />y:   8.519706194<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  74<br />y:   8.810191980<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  75<br />y:   8.084764718<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  76<br />y:   6.403332677<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  77<br />y:   6.475323066<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  78<br />y:   5.163925706<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  79<br />y:   5.525664912<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  80<br />y:   5.291394591<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  81<br />y:   4.340901209<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  82<br />y:   3.131077023<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  83<br />y:   4.708260914<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  84<br />y:   3.697721753<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  85<br />y:   4.406796899<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  86<br />y:   2.198011361<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  87<br />y:   0.992194602<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  88<br />y:   1.501838323<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  89<br />y:   0.598271525<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  90<br />y:   0.238021864<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  91<br />y:   0.793481940<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  92<br />y:   0.851264179<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  93<br />y:  -0.379126489<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  94<br />y:   0.187390735<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  95<br />y:   0.128840731<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  96<br />y:  -0.882177402<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  97<br />y:  -0.567446696<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  98<br />y:   0.008753329<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  99<br />y:   1.382012021<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 100<br />y:   1.260060888<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 101<br />y:   2.051079991<br />sim_number: sim_number 6<br />sim_number: sim_number 6"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,191,196,1)","dash":"solid"},"hoveron":"points","name":"sim_number 6","legendgroup":"sim_number 6","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,1.6998430575974921,-0.21082306072430024,-2.802715233778581,-3.1336040605527744,-4.936956212999422,-5.6895997208259743,-6.8899041499983307,-8.1937729944371238,-7.317263464587537,-6.3798227620934345,-4.6992798499468895,-4.4178234459757544,-3.5030273258167268,-3.4987576303258283,-3.2335225016975353,-2.4678765315791593,-2.3477854163821132,-3.2999038294525147,-4.2701773377110896,-4.0596187477259091,-3.4160519525423543,-2.0487332338238984,-2.1604132489136401,-1.0145672686184406,-1.7794355160984703,-3.3314747388815902,-2.2655676681616832,-4.0785367203109191,-3.3919012981645551,-4.1835101503280452,-3.9760182702670952,-4.7540215691304528,-4.2408890561085588,-3.7666380836390863,-5.7019455065565241,-7.5291003728973207,-8.6410073994391325,-9.210467231244543,-9.4006193109252649,-9.5891597023011208,-10.780753890580909,-9.6357953662966018,-9.0721371247955247,-8.8796582980252232,-9.3231188402701566,-11.352917239640714,-10.239760434419885,-10.420418515560463,-8.579244608729466,-7.9676699056036,-8.9862476214267062,-9.5097897745715407,-10.746417711720632,-12.808971115316075,-11.277186398473784,-12.309785628077641,-12.460361403084786,-12.669795087660169,-13.206391395354919,-13.724648173405718,-15.498148219964612,-15.2147512676235,-15.09943301193147,-16.615091365761202,-17.239761846179693,-17.451618707052365,-17.415134638256614,-16.567152200342122,-17.287147062244003,-15.02986194221452,-15.473958915784946,-15.239982214975832,-15.296840809903935,-14.95512787831116,-13.319658080571394,-13.246049023685446,-13.606780091252752,-12.787964714194146,-14.01713622700348,-14.876887733360052,-15.782447139173181,-15.029996160825032,-15.082852989204904,-15.378553166785593,-15.982692178063216,-16.355902631527165,-16.995616634472292,-17.223515553892081,-18.069435243993386,-17.938834649985214,-17.539583218752711,-17.791742905486267,-18.739765140499433,-17.950936363834412,-18.783682179940158,-17.690582590599426,-16.177192416784308,-17.165160916222273,-18.56792750872507,-16.812187911257016],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   2<br />y:   1.699843058<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   3<br />y:  -0.210823061<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   4<br />y:  -2.802715234<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   5<br />y:  -3.133604061<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   6<br />y:  -4.936956213<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   7<br />y:  -5.689599721<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   8<br />y:  -6.889904150<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   9<br />y:  -8.193772994<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  10<br />y:  -7.317263465<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  11<br />y:  -6.379822762<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  12<br />y:  -4.699279850<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  13<br />y:  -4.417823446<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  14<br />y:  -3.503027326<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  15<br />y:  -3.498757630<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  16<br />y:  -3.233522502<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  17<br />y:  -2.467876532<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  18<br />y:  -2.347785416<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  19<br />y:  -3.299903829<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  20<br />y:  -4.270177338<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  21<br />y:  -4.059618748<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  22<br />y:  -3.416051953<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  23<br />y:  -2.048733234<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  24<br />y:  -2.160413249<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  25<br />y:  -1.014567269<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  26<br />y:  -1.779435516<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  27<br />y:  -3.331474739<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  28<br />y:  -2.265567668<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  29<br />y:  -4.078536720<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  30<br />y:  -3.391901298<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  31<br />y:  -4.183510150<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  32<br />y:  -3.976018270<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  33<br />y:  -4.754021569<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  34<br />y:  -4.240889056<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  35<br />y:  -3.766638084<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  36<br />y:  -5.701945507<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  37<br />y:  -7.529100373<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  38<br />y:  -8.641007399<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  39<br />y:  -9.210467231<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  40<br />y:  -9.400619311<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  41<br />y:  -9.589159702<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  42<br />y: -10.780753891<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  43<br />y:  -9.635795366<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  44<br />y:  -9.072137125<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  45<br />y:  -8.879658298<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  46<br />y:  -9.323118840<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  47<br />y: -11.352917240<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  48<br />y: -10.239760434<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  49<br />y: -10.420418516<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  50<br />y:  -8.579244609<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  51<br />y:  -7.967669906<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  52<br />y:  -8.986247621<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  53<br />y:  -9.509789775<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  54<br />y: -10.746417712<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  55<br />y: -12.808971115<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  56<br />y: -11.277186398<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  57<br />y: -12.309785628<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  58<br />y: -12.460361403<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  59<br />y: -12.669795088<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  60<br />y: -13.206391395<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  61<br />y: -13.724648173<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  62<br />y: -15.498148220<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  63<br />y: -15.214751268<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  64<br />y: -15.099433012<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  65<br />y: -16.615091366<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  66<br />y: -17.239761846<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  67<br />y: -17.451618707<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  68<br />y: -17.415134638<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  69<br />y: -16.567152200<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  70<br />y: -17.287147062<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  71<br />y: -15.029861942<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  72<br />y: -15.473958916<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  73<br />y: -15.239982215<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  74<br />y: -15.296840810<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  75<br />y: -14.955127878<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  76<br />y: -13.319658081<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  77<br />y: -13.246049024<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  78<br />y: -13.606780091<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  79<br />y: -12.787964714<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  80<br />y: -14.017136227<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  81<br />y: -14.876887733<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  82<br />y: -15.782447139<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  83<br />y: -15.029996161<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  84<br />y: -15.082852989<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  85<br />y: -15.378553167<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  86<br />y: -15.982692178<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  87<br />y: -16.355902632<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  88<br />y: -16.995616634<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  89<br />y: -17.223515554<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  90<br />y: -18.069435244<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  91<br />y: -17.938834650<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  92<br />y: -17.539583219<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  93<br />y: -17.791742905<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  94<br />y: -18.739765140<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  95<br />y: -17.950936364<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  96<br />y: -18.783682180<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  97<br />y: -17.690582591<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  98<br />y: -16.177192417<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  99<br />y: -17.165160916<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 100<br />y: -18.567927509<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 101<br />y: -16.812187911<br />sim_number: sim_number 7<br />sim_number: sim_number 7"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,176,246,1)","dash":"solid"},"hoveron":"points","name":"sim_number 7","legendgroup":"sim_number 7","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.21724390925242765,0.93445416786636226,1.1000444654791905,0.8517387076764309,1.0566297552562052,0.53404045920894716,1.4033547468079575,1.6302497460861265,-0.73775387476299958,-0.50580254880875575,-1.1947092488593223,-2.5010159896737276,-2.8301511670239154,-2.5697594586327432,-1.9225257982330992,-1.2942375826638306,-0.21542508104599986,-0.8785128736514487,0.72137519008269679,-0.47328126433371764,-2.3227445616070348,-1.5081910106434202,-2.0308454058727108,-1.065092696250616,0.013982939605361816,0.82994587868274172,0.16361063588992023,2.6452774400708905,1.9200195912560154,1.8106060264405683,1.5013919279627064,1.4993854638266688,2.8926127785572868,2.6639579909521873,2.8057371167454663,1.7091603916603788,0.73309126152001014,0.029561963879996753,1.3769807331685149,1.4964482954546694,2.3808273993984295,1.2655106922644579,-0.55441075597738709,0.49248276782010192,-0.89847292416552349,-1.0217937933149688,-1.1613482672225273,-0.48021308289435527,-0.94672154155429045,-0.44889650896544026,-0.34923196439664284,1.4498455573382829,0.77582882160822075,1.0588919228280538,0.88476379247371562,2.3837181080081167,2.1084147673484432,1.3997222689656799,2.1862899222416239,1.9581704294483828,2.9555232096451127,3.0694262943241859,4.362589874590209,2.9060946349757022,2.9778243576440127,2.5203974814884234,3.511999468842212,2.4402529685640544,0.8595012538607204,0.59355938950081744,-0.49512390028672099,-0.81657487939435069,-0.17374673027071907,0.46133261346510956,-0.22313129799472931,-0.48914574574709141,0.21811640003774618,0.63047080348054541,0.36033608097938746,0.60396669946757553,0.48780405595891524,1.8454086094258386,1.1149337638060806,2.4603364681946336,2.1691812619494404,2.4747700699834043,3.2371409097700803,2.7637776886781404,1.8636875516942937,2.3051774531801357,3.1196761633062864,0.6998274691649381,1.7836166845250778,0.24401752747638789,-1.4877687535274045,-0.40226007626553167,-1.5635165312801216,-0.86326989512120078,-2.0984647258430122,-2.3126733576076521],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   2<br />y:   0.217243909<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   3<br />y:   0.934454168<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   4<br />y:   1.100044465<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   5<br />y:   0.851738708<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   6<br />y:   1.056629755<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   7<br />y:   0.534040459<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   8<br />y:   1.403354747<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   9<br />y:   1.630249746<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  10<br />y:  -0.737753875<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  11<br />y:  -0.505802549<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  12<br />y:  -1.194709249<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  13<br />y:  -2.501015990<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  14<br />y:  -2.830151167<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  15<br />y:  -2.569759459<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  16<br />y:  -1.922525798<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  17<br />y:  -1.294237583<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  18<br />y:  -0.215425081<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  19<br />y:  -0.878512874<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  20<br />y:   0.721375190<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  21<br />y:  -0.473281264<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  22<br />y:  -2.322744562<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  23<br />y:  -1.508191011<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  24<br />y:  -2.030845406<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  25<br />y:  -1.065092696<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  26<br />y:   0.013982940<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  27<br />y:   0.829945879<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  28<br />y:   0.163610636<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  29<br />y:   2.645277440<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  30<br />y:   1.920019591<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  31<br />y:   1.810606026<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  32<br />y:   1.501391928<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  33<br />y:   1.499385464<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  34<br />y:   2.892612779<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  35<br />y:   2.663957991<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  36<br />y:   2.805737117<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  37<br />y:   1.709160392<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  38<br />y:   0.733091262<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  39<br />y:   0.029561964<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  40<br />y:   1.376980733<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  41<br />y:   1.496448295<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  42<br />y:   2.380827399<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  43<br />y:   1.265510692<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  44<br />y:  -0.554410756<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  45<br />y:   0.492482768<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  46<br />y:  -0.898472924<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  47<br />y:  -1.021793793<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  48<br />y:  -1.161348267<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  49<br />y:  -0.480213083<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  50<br />y:  -0.946721542<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  51<br />y:  -0.448896509<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  52<br />y:  -0.349231964<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  53<br />y:   1.449845557<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  54<br />y:   0.775828822<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  55<br />y:   1.058891923<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  56<br />y:   0.884763792<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  57<br />y:   2.383718108<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  58<br />y:   2.108414767<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  59<br />y:   1.399722269<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  60<br />y:   2.186289922<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  61<br />y:   1.958170429<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  62<br />y:   2.955523210<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  63<br />y:   3.069426294<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  64<br />y:   4.362589875<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  65<br />y:   2.906094635<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  66<br />y:   2.977824358<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  67<br />y:   2.520397481<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  68<br />y:   3.511999469<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  69<br />y:   2.440252969<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  70<br />y:   0.859501254<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  71<br />y:   0.593559390<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  72<br />y:  -0.495123900<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  73<br />y:  -0.816574879<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  74<br />y:  -0.173746730<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  75<br />y:   0.461332613<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  76<br />y:  -0.223131298<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  77<br />y:  -0.489145746<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  78<br />y:   0.218116400<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  79<br />y:   0.630470803<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  80<br />y:   0.360336081<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  81<br />y:   0.603966699<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  82<br />y:   0.487804056<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  83<br />y:   1.845408609<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  84<br />y:   1.114933764<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  85<br />y:   2.460336468<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  86<br />y:   2.169181262<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  87<br />y:   2.474770070<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  88<br />y:   3.237140910<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  89<br />y:   2.763777689<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  90<br />y:   1.863687552<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  91<br />y:   2.305177453<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  92<br />y:   3.119676163<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  93<br />y:   0.699827469<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  94<br />y:   1.783616685<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  95<br />y:   0.244017527<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  96<br />y:  -1.487768754<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  97<br />y:  -0.402260076<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  98<br />y:  -1.563516531<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  99<br />y:  -0.863269895<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 100<br />y:  -2.098464726<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 101<br />y:  -2.312673358<br />sim_number: sim_number 8<br />sim_number: sim_number 8"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(149,144,255,1)","dash":"solid"},"hoveron":"points","name":"sim_number 8","legendgroup":"sim_number 8","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.78631162683777134,0.12409826569792648,-0.46645373976103188,-1.9382933067197974,-0.8348712186387196,-0.8993467214130757,-1.0158595786445122,-1.6785826428465509,-2.5057414540403729,-2.6032478005895228,-3.6625074090781764,-3.4078064821555056,-2.8731781367246425,-3.3594498201303011,-3.8773799682392709,-2.3871247807116709,-3.7851046806419966,-4.4682489133077725,-3.1701935918909552,-2.0226975181683624,-3.0125117342319654,-1.6543099932538485,-3.8522418734087238,-4.8131929382352343,-4.1521652482928086,-5.3624138483399406,-5.8757841393807055,-8.4411334168161716,-8.0516582145358235,-7.874836523319706,-7.2673263173070035,-6.464158489612279,-6.2745659752082696,-7.2735585403794873,-6.1025398384829055,-4.9292059913273949,-4.3359146121348742,-6.0123714850598491,-6.6354340998157797,-7.9790529073855589,-6.8817195196570315,-5.0829381653222869,-6.1995348265286481,-4.939080999878823,-5.2176684413579313,-4.8777138112628711,-4.8267195292397487,-4.7625811868152592,-6.5715642707771664,-4.5853548934844959,-4.0921530877026973,-4.4797357362403698,-5.0725328180206564,-6.2263309035856427,-5.3118066124401695,-4.9508883483485553,-5.6683459493425596,-3.5551183589859385,-3.0063125813065161,-2.0912160770552597,-2.0955097062058763,-1.4335554231409555,-1.9326146813768701,-0.24849389093463514,-0.55478376237233717,-2.0244737164369706,-3.3856338177976451,-3.3209888644431955,-4.4878208926818592,-4.823502979918497,-4.4152359708799667,-5.1359096171730849,-5.4979381210929859,-5.0164515292018201,-5.1980248196221854,-4.2537834704650628,-3.1313887112573973,-3.5354497912226197,-2.588507909661161,-2.1100919750952092,-2.7780297401035048,-3.6662849530517412,-6.2160905385462577,-5.7769420584336162,-7.1431555978232986,-8.4334899542220434,-8.1152028688116165,-7.5552892830261547,-6.4806383375396219,-5.6771988158516402,-4.4631331468936439,-4.9528462634301853,-4.3318374748568527,-4.8986267913616297,-6.5260113957988741,-7.8726835122637215,-7.0887707361241734,-5.2888738512668692,-4.8821407985085967,-4.8151167743373007],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   2<br />y:   0.786311627<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   3<br />y:   0.124098266<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   4<br />y:  -0.466453740<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   5<br />y:  -1.938293307<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   6<br />y:  -0.834871219<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   7<br />y:  -0.899346721<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   8<br />y:  -1.015859579<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   9<br />y:  -1.678582643<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  10<br />y:  -2.505741454<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  11<br />y:  -2.603247801<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  12<br />y:  -3.662507409<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  13<br />y:  -3.407806482<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  14<br />y:  -2.873178137<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  15<br />y:  -3.359449820<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  16<br />y:  -3.877379968<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  17<br />y:  -2.387124781<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  18<br />y:  -3.785104681<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  19<br />y:  -4.468248913<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  20<br />y:  -3.170193592<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  21<br />y:  -2.022697518<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  22<br />y:  -3.012511734<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  23<br />y:  -1.654309993<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  24<br />y:  -3.852241873<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  25<br />y:  -4.813192938<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  26<br />y:  -4.152165248<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  27<br />y:  -5.362413848<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  28<br />y:  -5.875784139<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  29<br />y:  -8.441133417<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  30<br />y:  -8.051658215<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  31<br />y:  -7.874836523<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  32<br />y:  -7.267326317<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  33<br />y:  -6.464158490<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  34<br />y:  -6.274565975<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  35<br />y:  -7.273558540<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  36<br />y:  -6.102539838<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  37<br />y:  -4.929205991<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  38<br />y:  -4.335914612<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  39<br />y:  -6.012371485<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  40<br />y:  -6.635434100<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  41<br />y:  -7.979052907<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  42<br />y:  -6.881719520<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  43<br />y:  -5.082938165<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  44<br />y:  -6.199534827<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  45<br />y:  -4.939081000<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  46<br />y:  -5.217668441<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  47<br />y:  -4.877713811<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  48<br />y:  -4.826719529<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  49<br />y:  -4.762581187<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  50<br />y:  -6.571564271<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  51<br />y:  -4.585354893<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  52<br />y:  -4.092153088<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  53<br />y:  -4.479735736<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  54<br />y:  -5.072532818<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  55<br />y:  -6.226330904<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  56<br />y:  -5.311806612<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  57<br />y:  -4.950888348<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  58<br />y:  -5.668345949<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  59<br />y:  -3.555118359<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  60<br />y:  -3.006312581<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  61<br />y:  -2.091216077<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  62<br />y:  -2.095509706<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  63<br />y:  -1.433555423<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  64<br />y:  -1.932614681<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  65<br />y:  -0.248493891<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  66<br />y:  -0.554783762<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  67<br />y:  -2.024473716<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  68<br />y:  -3.385633818<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  69<br />y:  -3.320988864<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  70<br />y:  -4.487820893<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  71<br />y:  -4.823502980<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  72<br />y:  -4.415235971<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  73<br />y:  -5.135909617<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  74<br />y:  -5.497938121<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  75<br />y:  -5.016451529<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  76<br />y:  -5.198024820<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  77<br />y:  -4.253783470<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  78<br />y:  -3.131388711<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  79<br />y:  -3.535449791<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  80<br />y:  -2.588507910<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  81<br />y:  -2.110091975<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  82<br />y:  -2.778029740<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  83<br />y:  -3.666284953<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  84<br />y:  -6.216090539<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  85<br />y:  -5.776942058<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  86<br />y:  -7.143155598<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  87<br />y:  -8.433489954<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  88<br />y:  -8.115202869<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  89<br />y:  -7.555289283<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  90<br />y:  -6.480638338<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  91<br />y:  -5.677198816<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  92<br />y:  -4.463133147<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  93<br />y:  -4.952846263<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  94<br />y:  -4.331837475<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  95<br />y:  -4.898626791<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  96<br />y:  -6.526011396<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  97<br />y:  -7.872683512<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  98<br />y:  -7.088770736<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  99<br />y:  -5.288873851<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 100<br />y:  -4.882140799<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 101<br />y:  -4.815116774<br />sim_number: sim_number 9<br />sim_number: sim_number 9"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(231,107,243,1)","dash":"solid"},"hoveron":"points","name":"sim_number 9","legendgroup":"sim_number 9","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.31814793965239285,1.3041400580936617,1.5233498232987897,2.5586496384124122,2.1865801082906562,3.403182342144643,2.877623656049638,3.4372673741815976,1.8041538093180221,2.7804434040913115,4.0645500450393186,5.6397783405452806,5.9085667311745675,6.3909554558146198,6.2938026454236731,5.684171049902389,7.0582388144943726,7.2311331983997729,6.5983629868219289,7.6424041663655258,9.2703358828132387,7.2766400521714161,5.8638403532321073,5.1979158986993426,6.5626383628474763,6.2886847175893301,7.8705468489257884,7.4931089000067219,7.7983288129084043,7.2675384505802567,7.2078603209875878,8.2577550117892855,7.6897906609348627,8.5649471834522544,8.4165031111026991,8.4731536709586326,8.8479058275772413,8.5011141217527761,8.9519913937693705,8.548899345758306,7.582155930389141,6.2487901606204179,5.567752082820582,5.1917230337055251,5.0399205746044107,6.2273989535574685,5.7865120401065653,7.5263030454480022,9.4260232910349284,10.079681451563618,9.506525964484549,10.635501575634008,9.9244319581458864,9.7125517723116577,8.5765916148994297,7.7042992005327129,7.9606388909506993,7.832772352406951,7.9518173584922449,7.5006315192074746,8.230160186264845,8.4362557856884308,8.3447415189748604,10.436400859347639,10.738420468541086,12.387681919445312,13.36395297598752,14.607286122036205,15.078385602927241,15.000422747228448,12.56158057169247,12.931390833057904,12.795067129525613,12.040512536400287,11.986737390791866,12.735283891194129,10.787379029543212,10.455075159259211,10.867251224193678,11.04928716220549,11.719701600346442,13.013241049174006,13.741907070706217,12.231721072407439,11.756922549818734,13.545339647768024,12.902791418058204,12.387202208613896,11.822095218572342,12.979816162609056,12.69560685467925,12.387458670581459,12.633145821521079,12.703338098203888,12.498757822677481,11.840919648366977,10.153840878048149,8.8881786498832405,8.2136119996167061,10.359670933742002],"text":["t:   1<br />y:   0.000000000<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   2<br />y:   0.318147940<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   3<br />y:   1.304140058<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   4<br />y:   1.523349823<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   5<br />y:   2.558649638<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   6<br />y:   2.186580108<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   7<br />y:   3.403182342<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   8<br />y:   2.877623656<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   9<br />y:   3.437267374<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  10<br />y:   1.804153809<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  11<br />y:   2.780443404<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  12<br />y:   4.064550045<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  13<br />y:   5.639778341<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  14<br />y:   5.908566731<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  15<br />y:   6.390955456<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  16<br />y:   6.293802645<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  17<br />y:   5.684171050<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  18<br />y:   7.058238814<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  19<br />y:   7.231133198<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  20<br />y:   6.598362987<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  21<br />y:   7.642404166<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  22<br />y:   9.270335883<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  23<br />y:   7.276640052<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  24<br />y:   5.863840353<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  25<br />y:   5.197915899<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  26<br />y:   6.562638363<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  27<br />y:   6.288684718<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  28<br />y:   7.870546849<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  29<br />y:   7.493108900<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  30<br />y:   7.798328813<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  31<br />y:   7.267538451<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  32<br />y:   7.207860321<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  33<br />y:   8.257755012<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  34<br />y:   7.689790661<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  35<br />y:   8.564947183<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  36<br />y:   8.416503111<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  37<br />y:   8.473153671<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  38<br />y:   8.847905828<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  39<br />y:   8.501114122<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  40<br />y:   8.951991394<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  41<br />y:   8.548899346<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  42<br />y:   7.582155930<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  43<br />y:   6.248790161<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  44<br />y:   5.567752083<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  45<br />y:   5.191723034<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  46<br />y:   5.039920575<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  47<br />y:   6.227398954<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  48<br />y:   5.786512040<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  49<br />y:   7.526303045<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  50<br />y:   9.426023291<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  51<br />y:  10.079681452<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  52<br />y:   9.506525964<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  53<br />y:  10.635501576<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  54<br />y:   9.924431958<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  55<br />y:   9.712551772<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  56<br />y:   8.576591615<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  57<br />y:   7.704299201<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  58<br />y:   7.960638891<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  59<br />y:   7.832772352<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  60<br />y:   7.951817358<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  61<br />y:   7.500631519<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  62<br />y:   8.230160186<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  63<br />y:   8.436255786<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  64<br />y:   8.344741519<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  65<br />y:  10.436400859<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  66<br />y:  10.738420469<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  67<br />y:  12.387681919<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  68<br />y:  13.363952976<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  69<br />y:  14.607286122<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  70<br />y:  15.078385603<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  71<br />y:  15.000422747<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  72<br />y:  12.561580572<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  73<br />y:  12.931390833<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  74<br />y:  12.795067130<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  75<br />y:  12.040512536<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  76<br />y:  11.986737391<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  77<br />y:  12.735283891<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  78<br />y:  10.787379030<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  79<br />y:  10.455075159<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  80<br />y:  10.867251224<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  81<br />y:  11.049287162<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  82<br />y:  11.719701600<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  83<br />y:  13.013241049<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  84<br />y:  13.741907071<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  85<br />y:  12.231721072<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  86<br />y:  11.756922550<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  87<br />y:  13.545339648<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  88<br />y:  12.902791418<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  89<br />y:  12.387202209<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  90<br />y:  11.822095219<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  91<br />y:  12.979816163<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  92<br />y:  12.695606855<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  93<br />y:  12.387458671<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  94<br />y:  12.633145822<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  95<br />y:  12.703338098<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  96<br />y:  12.498757823<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  97<br />y:  11.840919648<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  98<br />y:  10.153840878<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  99<br />y:   8.888178650<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 100<br />y:   8.213612000<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 101<br />y:  10.359670934<br />sim_number: sim_number 10<br />sim_number: sim_number 10"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(255,98,188,1)","dash":"solid"},"hoveron":"points","name":"sim_number 10","legendgroup":"sim_number 10","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.762557077625573,"r":7.3059360730593621,"b":40.182648401826491,"l":43.105022831050235},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"title":{"text":"Brownian Motion","font":{"color":"rgba(0,0,0,1)","family":"","size":17.534246575342465},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-4,106],"tickmode":"array","ticktext":["0","25","50","75","100"],"tickvals":[0,24.999999999999996,50,75,100],"categoryorder":"array","categoryarray":["0","25","50","75","100"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":{"text":"t","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-20.494368671717716,17.140734147388546],"tickmode":"array","ticktext":["-20","-10","0","10"],"tickvals":[-20,-10,0,10.000000000000004],"categoryorder":"array","categoryarray":["-20","-10","0","10"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":{"text":"y","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"305c7327a99":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"305c7327a99","visdat":{"305c7327a99":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>This code simulates 10 paths of Brownian Motion over 100 time units, starting from an initial value of 0. The <code>ts_brownian_motion_plot()</code> function creates a static plot of these simulations.</p>
</section>
</section>
<section id="geometric-brownian-motion" class="level2">
<h2 class="anchored" data-anchor-id="geometric-brownian-motion">Geometric Brownian Motion</h2>
<p>Geometric Brownian Motion (GBM) is a variation of Brownian Motion where the logarithm of the variable follows a Brownian Motion. It is commonly used to model stock prices in the Black-Scholes option pricing model.</p>
<section id="function-syntax-2" class="level3">
<h3 class="anchored" data-anchor-id="function-syntax-2">Function Syntax</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_geometric_brownian_motion</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sigma =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.initial_value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb9-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.delta_time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>,</span>
<span id="cb9-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb9-9">)</span></code></pre></div>
<ul>
<li><code>.num_sims</code>: Total number of simulations.</li>
<li><code>.time</code>: Total time of the simulation.</li>
<li><code>.mean</code>: Expected return.</li>
<li><code>.sigma</code>: Volatility.</li>
<li><code>.initial_value</code>: Initial value of the simulation.</li>
<li><code>.delta_time</code>: Time step size.</li>
<li><code>.return_tibble</code>: Return a tibble (TRUE) or a matrix (FALSE).</li>
</ul>
</section>
<section id="example-2" class="level3">
<h3 class="anchored" data-anchor-id="example-2">Example</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">gbm_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_geometric_brownian_motion</span>(</span>
<span id="cb10-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb10-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, </span>
<span id="cb10-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mean =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, </span>
<span id="cb10-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sigma =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, </span>
<span id="cb10-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.initial_value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb10-7">  )</span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(gbm_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  sim_number       t     y
  &lt;fct&gt;        &lt;int&gt; &lt;dbl&gt;
1 sim_number 1     1   100
2 sim_number 2     1   100
3 sim_number 3     1   100
4 sim_number 4     1   100
5 sim_number 5     1   100
6 sim_number 6     1   100</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">gbm_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_brownian_motion_plot</span>(</span>
<span id="cb12-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> gbm_data,</span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_col =</span> t,</span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_col =</span> y,</span>
<span id="cb12-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb12-6">)</span>
<span id="cb12-7">gbm_plot</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-1a786d48a890c280887c" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-1a786d48a890c280887c">{"x":{"data":[{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,101.33943025414851,101.870521011931,101.4799354300584,100.12864462722116,99.904284081141739,101.16624451791229,101.5282715045236,100.11170466463639,100.15853775677895,98.705662942034778,99.266609005782954,99.052628534330253,99.540586043582721,99.063823736388372,99.249490028773849,99.021185646473285,98.073498449427362,97.351278726790724,96.113355203238811,96.330601241804786,96.59915945357794,97.766242102758383,97.537182508708241,97.637610259231451,98.033818018495566],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  2<br />y: 101.33943<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  3<br />y: 101.87052<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  4<br />y: 101.47994<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  5<br />y: 100.12864<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  6<br />y:  99.90428<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  7<br />y: 101.16624<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  8<br />y: 101.52827<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  9<br />y: 100.11170<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 10<br />y: 100.15854<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 11<br />y:  98.70566<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 12<br />y:  99.26661<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 13<br />y:  99.05263<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 14<br />y:  99.54059<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 15<br />y:  99.06382<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 16<br />y:  99.24949<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 17<br />y:  99.02119<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 18<br />y:  98.07350<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 19<br />y:  97.35128<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 20<br />y:  96.11336<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 21<br />y:  96.33060<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 22<br />y:  96.59916<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 23<br />y:  97.76624<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 24<br />y:  97.53718<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 25<br />y:  97.63761<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 26<br />y:  98.03382<br />sim_number: sim_number 1<br />sim_number: sim_number 1"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"sim_number 1","legendgroup":"sim_number 1","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,99.295862539341456,98.871418683651996,98.405358628116247,96.888772777595875,97.604428594453637,95.982582379695501,97.353503162193036,95.77354862079585,93.933763379615968,94.140905181770847,96.1773392272015,96.972058018469966,96.714959086955233,95.7682058549685,95.037927048393328,96.258086614192464,95.088394215471283,94.287080727265192,94.669862417364087,93.019951874848573,93.256945620149466,93.274043721382114,92.400651180002825,92.45290149066193,92.764617175560289],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  2<br />y:  99.29586<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  3<br />y:  98.87142<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  4<br />y:  98.40536<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  5<br />y:  96.88877<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  6<br />y:  97.60443<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  7<br />y:  95.98258<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  8<br />y:  97.35350<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  9<br />y:  95.77355<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 10<br />y:  93.93376<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 11<br />y:  94.14091<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 12<br />y:  96.17734<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 13<br />y:  96.97206<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 14<br />y:  96.71496<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 15<br />y:  95.76821<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 16<br />y:  95.03793<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 17<br />y:  96.25809<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 18<br />y:  95.08839<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 19<br />y:  94.28708<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 20<br />y:  94.66986<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 21<br />y:  93.01995<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 22<br />y:  93.25695<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 23<br />y:  93.27404<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 24<br />y:  92.40065<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 25<br />y:  92.45290<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 26<br />y:  92.76462<br />sim_number: sim_number 2<br />sim_number: sim_number 2"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(216,144,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 2","legendgroup":"sim_number 2","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,98.465203389206209,97.557507980531824,97.103586957916036,98.084507043168799,97.597541551740704,98.393255071786612,98.143014756792041,98.217798810365665,97.731281793613832,96.46627824583733,94.883099865259624,95.412574648190883,95.573504107245924,94.578353930588804,92.835377920924429,91.686525150260266,89.93430463648717,91.326896555670203,90.770855064899024,90.523493527691841,92.524584363175961,91.261676200334307,91.99132647889401,91.793910964223414,91.444493600490347],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  2<br />y:  98.46520<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  3<br />y:  97.55751<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  4<br />y:  97.10359<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  5<br />y:  98.08451<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  6<br />y:  97.59754<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  7<br />y:  98.39326<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  8<br />y:  98.14301<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  9<br />y:  98.21780<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 10<br />y:  97.73128<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 11<br />y:  96.46628<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 12<br />y:  94.88310<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 13<br />y:  95.41257<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 14<br />y:  95.57350<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 15<br />y:  94.57835<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 16<br />y:  92.83538<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 17<br />y:  91.68653<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 18<br />y:  89.93430<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 19<br />y:  91.32690<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 20<br />y:  90.77086<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 21<br />y:  90.52349<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 22<br />y:  92.52458<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 23<br />y:  91.26168<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 24<br />y:  91.99133<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 25<br />y:  91.79391<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 26<br />y:  91.44449<br />sim_number: sim_number 3<br />sim_number: sim_number 3"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(163,165,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 3","legendgroup":"sim_number 3","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,98.812410644529635,98.49262255808155,96.748802750231121,96.588184429325381,95.456331712000321,96.059193750914673,96.738227374317233,96.094542341806118,95.110170113057791,96.035400276166627,94.970789004295426,95.458507284312446,95.020459498601582,95.065614993159102,94.800653370251354,94.952897995886701,94.499897154647456,95.736980427035206,95.87380975169026,95.943570284386681,95.886205137091707,98.015719595034753,97.102520598999405,96.633350953435112,97.309111279420563],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  2<br />y:  98.81241<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  3<br />y:  98.49262<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  4<br />y:  96.74880<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  5<br />y:  96.58818<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  6<br />y:  95.45633<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  7<br />y:  96.05919<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  8<br />y:  96.73823<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  9<br />y:  96.09454<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 10<br />y:  95.11017<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 11<br />y:  96.03540<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 12<br />y:  94.97079<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 13<br />y:  95.45851<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 14<br />y:  95.02046<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 15<br />y:  95.06561<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 16<br />y:  94.80065<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 17<br />y:  94.95290<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 18<br />y:  94.49990<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 19<br />y:  95.73698<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 20<br />y:  95.87381<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 21<br />y:  95.94357<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 22<br />y:  95.88621<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 23<br />y:  98.01572<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 24<br />y:  97.10252<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 25<br />y:  96.63335<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 26<br />y:  97.30911<br />sim_number: sim_number 4<br />sim_number: sim_number 4"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(57,182,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 4","legendgroup":"sim_number 4","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,100.22137414394827,100.05673796471136,99.150862598641922,97.784108511268002,98.052787041701222,97.899234155844525,97.198694275397415,97.533592488552713,99.528528630328694,100.55552732455182,100.6964291743151,99.907484098096432,100.292735576298,100.56348988765484,101.73120535129561,106.1528972119085,105.08962421431494,105.95570793409202,106.69347763892237,106.5913340403783,104.37306827540998,104.48154825276539,104.52902841651672,103.58863827148248,104.30414119557385],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  2<br />y: 100.22137<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  3<br />y: 100.05674<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  4<br />y:  99.15086<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  5<br />y:  97.78411<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  6<br />y:  98.05279<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  7<br />y:  97.89923<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  8<br />y:  97.19869<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  9<br />y:  97.53359<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 10<br />y:  99.52853<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 11<br />y: 100.55553<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 12<br />y: 100.69643<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 13<br />y:  99.90748<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 14<br />y: 100.29274<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 15<br />y: 100.56349<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 16<br />y: 101.73121<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 17<br />y: 106.15290<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 18<br />y: 105.08962<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 19<br />y: 105.95571<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 20<br />y: 106.69348<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 21<br />y: 106.59133<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 22<br />y: 104.37307<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 23<br />y: 104.48155<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 24<br />y: 104.52903<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 25<br />y: 103.58864<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 26<br />y: 104.30414<br />sim_number: sim_number 5<br />sim_number: sim_number 5"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,191,125,1)","dash":"solid"},"hoveron":"points","name":"sim_number 5","legendgroup":"sim_number 5","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,100.72342851322999,102.6485406943568,101.41125204304717,101.02192524374836,100.10869524746063,100.93174980404591,98.587333488685317,98.145550204281051,98.049011664557625,98.520864521515392,99.604173760941251,100.23441936317026,100.67906496088111,101.97577334597487,102.66890634262437,101.08777698675951,99.193021938968826,100.8581998551637,100.95088700583194,100.11488640745181,101.99626724883481,101.65517848171302,103.65319382211315,103.42319967513754,103.36838092211266],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  2<br />y: 100.72343<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  3<br />y: 102.64854<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  4<br />y: 101.41125<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  5<br />y: 101.02193<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  6<br />y: 100.10870<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  7<br />y: 100.93175<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  8<br />y:  98.58733<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  9<br />y:  98.14555<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 10<br />y:  98.04901<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 11<br />y:  98.52086<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 12<br />y:  99.60417<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 13<br />y: 100.23442<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 14<br />y: 100.67906<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 15<br />y: 101.97577<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 16<br />y: 102.66891<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 17<br />y: 101.08778<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 18<br />y:  99.19302<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 19<br />y: 100.85820<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 20<br />y: 100.95089<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 21<br />y: 100.11489<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 22<br />y: 101.99627<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 23<br />y: 101.65518<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 24<br />y: 103.65319<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 25<br />y: 103.42320<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 26<br />y: 103.36838<br />sim_number: sim_number 6<br />sim_number: sim_number 6"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,191,196,1)","dash":"solid"},"hoveron":"points","name":"sim_number 6","legendgroup":"sim_number 6","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,100.43105954514328,101.11449021547115,98.726786264471968,96.40650135741312,97.677185973965109,95.582119206693605,95.24489059516371,94.937825522140116,96.801293773432448,98.759811401037908,98.097725150391668,96.969190737567018,97.632782509284411,97.653352723620102,98.208820605535365,98.002552573592723,96.626402944320603,96.907605179576947,98.038547240688217,97.606889236376801,96.036207909332504,98.709738456293792,98.71939567110104,98.459849095002582,99.338188824882394],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  2<br />y: 100.43106<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  3<br />y: 101.11449<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  4<br />y:  98.72679<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  5<br />y:  96.40650<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  6<br />y:  97.67719<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  7<br />y:  95.58212<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  8<br />y:  95.24489<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  9<br />y:  94.93783<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 10<br />y:  96.80129<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 11<br />y:  98.75981<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 12<br />y:  98.09773<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 13<br />y:  96.96919<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 14<br />y:  97.63278<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 15<br />y:  97.65335<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 16<br />y:  98.20882<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 17<br />y:  98.00255<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 18<br />y:  96.62640<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 19<br />y:  96.90761<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 20<br />y:  98.03855<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 21<br />y:  97.60689<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 22<br />y:  96.03621<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 23<br />y:  98.70974<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 24<br />y:  98.71940<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 25<br />y:  98.45985<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 26<br />y:  99.33819<br />sim_number: sim_number 7<br />sim_number: sim_number 7"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,176,246,1)","dash":"solid"},"hoveron":"points","name":"sim_number 7","legendgroup":"sim_number 7","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,98.191727411700953,97.827687366165478,96.932498086779688,96.85704920072979,95.754755133543952,96.503507754633674,96.627057508649045,96.810159120178213,98.182074912714526,98.557348094275739,98.808630512239731,98.775567833546305,97.792624075352094,98.215281566285796,99.385986690190293,99.100640804650183,100.28143734516318,99.356005166309643,99.705438887524892,99.656941910252769,100.84145659334123,99.831915411673748,99.496723739110791,100.21354608342104,98.373622503388148],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  2<br />y:  98.19173<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  3<br />y:  97.82769<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  4<br />y:  96.93250<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  5<br />y:  96.85705<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  6<br />y:  95.75476<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  7<br />y:  96.50351<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  8<br />y:  96.62706<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  9<br />y:  96.81016<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 10<br />y:  98.18207<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 11<br />y:  98.55735<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 12<br />y:  98.80863<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 13<br />y:  98.77557<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 14<br />y:  97.79262<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 15<br />y:  98.21528<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 16<br />y:  99.38599<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 17<br />y:  99.10064<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 18<br />y: 100.28144<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 19<br />y:  99.35601<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 20<br />y:  99.70544<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 21<br />y:  99.65694<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 22<br />y: 100.84146<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 23<br />y:  99.83192<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 24<br />y:  99.49672<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 25<br />y: 100.21355<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 26<br />y:  98.37362<br />sim_number: sim_number 8<br />sim_number: sim_number 8"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(149,144,255,1)","dash":"solid"},"hoveron":"points","name":"sim_number 8","legendgroup":"sim_number 8","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,100.39053238335289,99.805118194596659,99.312960470266603,99.229127012472802,99.225804385273577,99.52525654099901,97.954854068476777,97.623759970107088,95.900779497575527,97.496236539149976,95.893732943142453,94.817796883125851,95.963928894961299,97.008074071148442,96.93405296222069,97.02450094249383,97.568460195749722,97.771742122783039,97.842585285589024,99.219821582420181,99.715653506178,99.718274017666488,100.1619225961656,100.30980308932821,99.669637300081547],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  2<br />y: 100.39053<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  3<br />y:  99.80512<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  4<br />y:  99.31296<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  5<br />y:  99.22913<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  6<br />y:  99.22580<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  7<br />y:  99.52526<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  8<br />y:  97.95485<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  9<br />y:  97.62376<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 10<br />y:  95.90078<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 11<br />y:  97.49624<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 12<br />y:  95.89373<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 13<br />y:  94.81780<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 14<br />y:  95.96393<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 15<br />y:  97.00807<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 16<br />y:  96.93405<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 17<br />y:  97.02450<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 18<br />y:  97.56846<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 19<br />y:  97.77174<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 20<br />y:  97.84259<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 21<br />y:  99.21982<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 22<br />y:  99.71565<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 23<br />y:  99.71827<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 24<br />y: 100.16192<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 25<br />y: 100.30980<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 26<br />y:  99.66964<br />sim_number: sim_number 9<br />sim_number: sim_number 9"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(231,107,243,1)","dash":"solid"},"hoveron":"points","name":"sim_number 9","legendgroup":"sim_number 9","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"y":[100,99.617842433177842,100.37115451131739,99.175615509122281,99.792753210925056,99.320522026537091,100.8335808473893,99.848916569995467,99.269018658323574,100.0049469940694,99.333623160513469,98.983517639295101,99.514444857846613,100.07570024943294,98.669066990036669,99.181136458808155,99.046175452794202,99.78298526950104,101.09746341965911,100.09129934112902,99.94986040571078,99.136626800632811,98.962403687323103,99.193984198490341,99.04746811151881,98.411441276430381],"text":["t:  1<br />y: 100.00000<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  2<br />y:  99.61784<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  3<br />y: 100.37115<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  4<br />y:  99.17562<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  5<br />y:  99.79275<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  6<br />y:  99.32052<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  7<br />y: 100.83358<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  8<br />y:  99.84892<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  9<br />y:  99.26902<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 10<br />y: 100.00495<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 11<br />y:  99.33362<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 12<br />y:  98.98352<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 13<br />y:  99.51444<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 14<br />y: 100.07570<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 15<br />y:  98.66907<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 16<br />y:  99.18114<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 17<br />y:  99.04618<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 18<br />y:  99.78299<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 19<br />y: 101.09746<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 20<br />y: 100.09130<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 21<br />y:  99.94986<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 22<br />y:  99.13663<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 23<br />y:  98.96240<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 24<br />y:  99.19398<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 25<br />y:  99.04747<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 26<br />y:  98.41144<br />sim_number: sim_number 10<br />sim_number: sim_number 10"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(255,98,188,1)","dash":"solid"},"hoveron":"points","name":"sim_number 10","legendgroup":"sim_number 10","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.762557077625573,"r":7.3059360730593621,"b":40.182648401826491,"l":43.105022831050235},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"title":{"text":"Geometric Brownian Motion","font":{"color":"rgba(0,0,0,1)","family":"","size":17.534246575342465},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.25,27.25],"tickmode":"array","ticktext":["0","10","20"],"tickvals":[0,10,20],"categoryorder":"array","categoryarray":["0","10","20"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":{"text":"t","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[89.096345986365407,107.53143628904414],"tickmode":"array","ticktext":["90","95","100","105"],"tickvals":[90,95,100,105],"categoryorder":"array","categoryarray":["90","95","100","105"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":{"text":"y","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"305c4b157ecf":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"305c4b157ecf","visdat":{"305c4b157ecf":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>This code simulates 10 paths of Geometric Brownian Motion over 25 time units with an expected return of 0.05 and volatility of 0.2. The <code>ts_brownian_motion_plot()</code> function again helps in visualizing the simulations.</p>
</section>
</section>
</section>
<section id="your-turn" class="level1">
<h1>Your Turn!</h1>
<p>These functions offer a straightforward way to simulate and visualize complex stochastic processes. I encourage you to tweak the parameters, run your own simulations, and explore how different settings affect the outcomes. Whether you’re modeling stock prices or random movements in nature, these tools can provide valuable insights.</p>
<p>Feel free to check out the detailed documentation of these functions <a href="https://www.spsanderson.com/healthyR.ts/reference/index.html">here</a> and experiment with your own datasets.</p>
<hr>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-27/</guid>
  <pubDate>Thu, 27 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Run a Macro When a Cell Value Changes in VBA</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-26/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hello, everyone! Today, we’ll be diving into a practical example of how to run a macro when a cell value changes in VBA. This is particularly useful when you need to trigger certain actions based on user input or dynamic data changes in your Excel sheets. Let’s get started!</p>
</section>
<section id="setting-up-the-worksheet-change-event" class="level1">
<h1>Setting Up the Worksheet Change Event</h1>
<p>To run a macro when a cell value changes, we need to use the <code>Worksheet_Change</code> event. This event is triggered every time a cell value in a specific worksheet changes.</p>
<p>Here’s the basic structure of the <code>Worksheet_Change</code> event:</p>
<pre class="vba"><code>Private Sub Worksheet_Change(ByVal Target As Range)
    ' Your code here
End Sub</code></pre>
<p>In this event, <code>Target</code> refers to the range of cells that have changed. We’ll use this to identify if the change occurred in the cell or range of cells we are interested in.</p>
</section>
<section id="example-scenario" class="level1">
<h1>Example Scenario</h1>
<p>Imagine we want to run a macro whenever the value in cell A1 changes. We’ll write a simple macro that displays a message box when this happens.</p>
<section id="step-by-step-guide" class="level2">
<h2 class="anchored" data-anchor-id="step-by-step-guide">Step-by-Step Guide</h2>
<ol type="1">
<li><strong>Open the VBA Editor:</strong>
<ul>
<li>Press <code>ALT + F11</code> to open the VBA editor.</li>
</ul></li>
<li><strong>Insert the Code:</strong>
<ul>
<li>In the VBA editor, find the sheet where you want to apply the change event. For example, <code>Sheet1</code>.</li>
<li>Double-click on <code>Sheet1</code> to open its code window.</li>
<li>Insert the following code:</li>
</ul></li>
</ol>
<pre class="vba"><code>Private Sub Worksheet_Change(ByVal Target As Range)
    ' Check if the changed cell is A1
    If Not Intersect(Target, Me.Range("A1")) Is Nothing Then
        ' Run your macro here
        Call MyMacro
    End If
End Sub</code></pre>
</section>
<section id="explanation" class="level2">
<h2 class="anchored" data-anchor-id="explanation">Explanation</h2>
<ul>
<li><p><strong>Worksheet_Change Event:</strong> This event gets triggered whenever any cell value in <code>Sheet1</code> changes.</p></li>
<li><p><strong>Intersect Function:</strong> We use the <code>Intersect</code> function to check if the changed cell (<code>Target</code>) overlaps with cell A1 (<code>Me.Range("A1")</code>). If there is an intersection (i.e., the changed cell is A1), the condition returns <code>True</code>.</p></li>
<li><p><strong>Call MyMacro:</strong> When the condition is <code>True</code>, we call another macro named <code>MyMacro</code>. This is where you define what actions you want to perform when cell A1 changes.</p></li>
</ul>
</section>
<section id="defining-the-macro" class="level2">
<h2 class="anchored" data-anchor-id="defining-the-macro">Defining the Macro</h2>
<p>Next, let’s define the <code>MyMacro</code> that gets called when cell A1 changes. For simplicity, we’ll make it display a message box.</p>
<pre class="vba"><code>Sub MyMacro()
    MsgBox "Cell A1 has changed!"
End Sub</code></pre>
</section>
<section id="putting-it-all-together" class="level2">
<h2 class="anchored" data-anchor-id="putting-it-all-together">Putting It All Together</h2>
<p>Here’s the complete code for <code>Sheet1</code>:</p>
<pre class="vba"><code>Private Sub Worksheet_Change(ByVal Target As Range)
    ' Check if the changed cell is A1
    If Not Intersect(Target, Me.Range("A1")) Is Nothing Then
        ' Run your macro here
        Call MyMacro
    End If
End Sub

Sub MyMacro()
    MsgBox "Cell A1 has changed!"
End Sub</code></pre>
</section>
<section id="testing-the-macro" class="level2">
<h2 class="anchored" data-anchor-id="testing-the-macro">Testing the Macro</h2>
<p>To test the macro:</p>
<ol type="1">
<li>Close the VBA editor and go back to Excel.</li>
<li>Change the value in cell A1.</li>
<li>You should see a message box saying, “Cell A1 has changed!”</li>
</ol>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>By using the <code>Worksheet_Change</code> event, you can easily set up macros to run whenever specific cell values change. This can be incredibly useful for automating tasks and making your Excel workbooks more dynamic and interactive.</p>
<p>I hope you found this guide helpful! If you have any questions or want to share how you use this in your projects, feel free to leave a comment below.</p>
<p>Happy coding!</p>
</section>
<section id="reference" class="level1">
<h1>Reference</h1>
<p><a href="https://learn.microsoft.com/en-us/office/vba/api/excel.worksheet.change">https://learn.microsoft.com/en-us/office/vba/api/excel.worksheet.change</a></p>
<hr>
<p>That’s it for today! Remember to keep experimenting and exploring new ways to automate your Excel tasks using VBA. See you next time!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>vba</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-26/</guid>
  <pubDate>Wed, 26 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Extract Strings Between Specific Characters in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-25/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hello, R enthusiasts! Today, we’re jumping into a common text processing task: extracting strings between specific characters. This is a great skill for data cleaning and manipulation, especially when working with raw text data. I’m going to show you how to achieve this using base R, the <code>stringr</code> package, and the <code>stringi</code> package. Let’s go!</p>
<section id="extracting-strings-using-base-r" class="level2">
<h2 class="anchored" data-anchor-id="extracting-strings-using-base-r">Extracting Strings Using Base R</h2>
<p>Base R provides several ways to extract substrings, including <code>sub</code> and <code>gregexpr</code>. Here, we’ll use <code>sub</code> and <code>gsub</code> for some examples.</p>
<section id="example-1-base-r-with-sub" class="level3">
<h3 class="anchored" data-anchor-id="example-1-base-r-with-sub">Example 1: Base R with <code>sub</code></h3>
<p>Suppose you have a string and you want to extract the text between two characters, say <code>[</code> and <code>]</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample string</span></span>
<span id="cb1-2">text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extract this [text] from the string."</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using sub to extract text between square brackets</span></span>
<span id="cb1-5">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[(.*?)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">].*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>, text)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "text"</code></pre>
</div>
</div>
</section>
<section id="example-2-base-r-with-gsub" class="level3">
<h3 class="anchored" data-anchor-id="example-2-base-r-with-gsub">Example 2: Base R with <code>gsub</code></h3>
<p>Now, let’s extract text between parentheses <code>(</code> and <code>)</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example string</span></span>
<span id="cb3-2">text2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is a sample (extract this part) string."</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract string between parentheses using base R</span></span>
<span id="cb3-5">extracted_base <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">((.*)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">).*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1"</span>, text2)</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(extracted_base)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "extract this part"</code></pre>
</div>
</div>
<p>In these examples, <code>sub</code> and <code>gsub</code> use regular expressions to find the text between the specified characters and replace the entire string with the extracted part. The pattern <code>.*\\[(.*?)\\].*</code> and <code>.*\\((.*)\\).*</code> break down as follows: - <code>.*</code> matches any character (except for line terminators) zero or more times. - <code>\\[</code> matches the literal <code>[</code> and <code>\\(</code> matches the literal <code>(</code>. - <code>(.*?)</code> and <code>(.*)</code> are non-greedy matches for any character (.) zero or more times. - <code>\\]</code> matches the literal <code>]</code> and <code>\\)</code> matches the literal <code>)</code>. - <code>\\1</code> in the replacement string refers to the first capture group, i.e., the text between <code>[ ]</code> and <code>( )</code>.</p>
</section>
</section>
<section id="extracting-strings-using-stringr" class="level2">
<h2 class="anchored" data-anchor-id="extracting-strings-using-stringr">Extracting Strings Using <code>stringr</code></h2>
<p>The <code>stringr</code> package, part of the tidyverse, makes string manipulation more straightforward with consistent functions.</p>
<section id="example-1-using-stringrstr_extract" class="level3">
<h3 class="anchored" data-anchor-id="example-1-using-stringrstr_extract">Example 1: Using <code>stringr::str_extract</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the stringr package</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using str_extract to extract text between square brackets</span></span>
<span id="cb5-5">result_str_extract <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(text, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(?&lt;=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[).*?(?=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">])"</span>)</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result_str_extract)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "text"</code></pre>
</div>
</div>
</section>
<section id="example-2-using-stringr-to-extract-text-between-parentheses" class="level3">
<h3 class="anchored" data-anchor-id="example-2-using-stringr-to-extract-text-between-parentheses">Example 2: Using <code>stringr</code> to extract text between parentheses</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example using stringr</span></span>
<span id="cb7-2">extracted_str <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(text2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(.*?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb7-3">extracted_str <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_sub</span>(extracted_str, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(extracted_str)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "extract this part"</code></pre>
</div>
</div>
<p>The <code>str_extract</code> function extracts the first substring matching a regex pattern. Here, <code>(?&lt;=\\[).*?(?=\\])</code> and <code>\\(.*?\\)</code> use lookbehind <code>(?&lt;=\\[)</code> and lookahead <code>(?=\\])</code> assertions to match text between <code>[</code> and <code>]</code>, and simple matching for text between <code>(</code> and <code>)</code>. <code>str_sub</code> is then used to remove the enclosing parentheses.</p>
</section>
</section>
<section id="extracting-strings-using-stringi" class="level2">
<h2 class="anchored" data-anchor-id="extracting-strings-using-stringi">Extracting Strings Using <code>stringi</code></h2>
<p>The <code>stringi</code> package provides robust and efficient tools for string manipulation.</p>
<section id="example-1-using-stringistri_extract" class="level3">
<h3 class="anchored" data-anchor-id="example-1-using-stringistri_extract">Example 1: Using <code>stringi::stri_extract</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the stringi package</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringi)</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using stri_extract to extract text between square brackets</span></span>
<span id="cb9-5">result_stri_extract <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_extract</span>(text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">regex =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(?&lt;=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[).*?(?=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">])"</span>)</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result_stri_extract)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "text"</code></pre>
</div>
</div>
</section>
<section id="example-2-using-stringi-to-extract-text-between-parentheses" class="level3">
<h3 class="anchored" data-anchor-id="example-2-using-stringi-to-extract-text-between-parentheses">Example 2: Using <code>stringi</code> to extract text between parentheses</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example using stringi</span></span>
<span id="cb11-2">extracted_stri <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stringi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_extract_first_regex</span>(text2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(.*?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb11-3">extracted_stri <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stringi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_sub</span>(extracted_stri, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(extracted_stri)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "extract this part"</code></pre>
</div>
</div>
<p>The <code>stri_extract</code> function from <code>stringi</code> works similarly to <code>str_extract</code>, utilizing regex patterns for text extraction. It’s highly optimized for performance, especially with large datasets. <code>stri_sub</code> is used to remove the enclosing parentheses.</p>
</section>
</section>
<section id="your-turn" class="level2">
<h2 class="anchored" data-anchor-id="your-turn">Your Turn!</h2>
<p>Experimenting with these functions and patterns on your own datasets will help you understand their nuances. Here are a few additional exercises to solidify your understanding:</p>
<ul>
<li>Extract text between parentheses <code>(</code> and <code>)</code>.</li>
<li>Extract text between the first and last occurrences of a specific character in a string.</li>
<li>Extract all occurrences of text between two characters in a string.</li>
</ul>
<p>Feel free to use the examples provided as a template for your own tasks.</p>
<p>Happy coding!</p>
<hr>
<section id="bonus-combining-methods" class="level3">
<h3 class="anchored" data-anchor-id="bonus-combining-methods">Bonus: Combining Methods</h3>
<p>For more complex scenarios, you might need to combine different methods. Here’s a quick example of how you can handle multiple extractions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample string with multiple patterns</span></span>
<span id="cb13-2">text_multiple <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here is [text1] and here is (text2)."</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using gregexpr and regmatches to extract all matches</span></span>
<span id="cb13-5">matches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regmatches</span>(</span>
<span id="cb13-6">  text_multiple, </span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gregexpr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(?&lt;=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[).*?(?=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">])|(?&lt;=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">().*?(?=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">))"</span>, </span>
<span id="cb13-8">           text_multiple, </span>
<span id="cb13-9">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">perl =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb13-10">  )</span>
<span id="cb13-11"></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the matches</span></span>
<span id="cb13-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(matches))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "text1" "text2"</code></pre>
</div>
</div>
<p>This example uses <code>gregexpr</code> to find all matches and <code>regmatches</code> to extract them.</p>
<hr>
<p>Until next time, keep exploring and enjoying the power of R!</p>


</section>
</section>
</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>operations</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-25/</guid>
  <pubDate>Tue, 25 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>An Introduction to healthyR.ai</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-24/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>This post will introduction to the <code>healthyR.ai</code> package. The <code>healthyR.ai</code> package is a collection of functions that I have developed to help me analyze and visualize data. The package is designed to be easy to use and to provide a wide range of functionality for data analysis. The package is also meant to help and provide some easy boilerplate funcationality for machine learning.</p>
<p>It might be best to view this post in light mode to see the tables better.</p>
</section>
<section id="installation" class="level1">
<h1>Installation</h1>
<p>You can install the released version of healthyR.ai from CRAN with:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"healthyR.ai"</span>)</span></code></pre></div>
<p>And the development version from GitHub with:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("devtools")</span></span>
<span id="cb2-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spsanderson/healthyR.ai"</span>)</span></code></pre></div>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<section id="the-goal" class="level2">
<h2 class="anchored" data-anchor-id="the-goal">The Goal</h2>
<hr>
<p>The ultimate goal really is to make it easier to do data analysis and machine learning in R. The package is designed to be easy to use and to provide a wide range of functionality for data analysis. The package is also meant to help and provide some easy boilerplate functionality for machine learning. This package is in its early stages and will be updated frequently.</p>
<p>It also keeps with the same framework of all of the <code>healthyverse</code> packages in that it is meant for the user to be able to use the package without having to know a lot of R. Many rural hospitals do not have the resources to perform this sort of work, so I am working hard to build these types of things out for them for free.</p>
<p>Let’s go through some examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.ai)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DT)</span></code></pre></div>
</div>
<p>Now let’s get a list of all the functions that are exposed in the package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Functions and their arguments for healthyR</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">pat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%&gt;%"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":="</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"as_label"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"as_name"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enquo"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enquos"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"expr"</span>,</span>
<span id="cb4-4">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sym"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"syms"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required_pkgs.step_hai_fourier"</span>,</span>
<span id="cb4-5">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required_pkgs.step_hai_fourier_discrete"</span>,</span>
<span id="cb4-6">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required_pkgs.step_hai_hyperbolic"</span>,</span>
<span id="cb4-7">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required_pkgs.step_hai_scale_zero_one"</span>,</span>
<span id="cb4-8">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required_pkgs.step_hai_scal_zscore"</span>,</span>
<span id="cb4-9">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required_pkgs.step_hai_winsorized_move"</span>,</span>
<span id="cb4-10">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required_pkgs.step_hai_winsorized_truncate"</span>)</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls.str</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"package:healthyR.ai"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>fns <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> pat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">params =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(fns, formalArgs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(fns) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">func_with_params =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toString</span>(params)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">func_with_params =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(</span>
<span id="cb4-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(</span>
<span id="cb4-20">        func_with_params, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">("</span>), </span>
<span id="cb4-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(fns, func_with_params), </span>
<span id="cb4-22">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(fns, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"("</span>, func_with_params, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)</span>
<span id="cb4-23">    )) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(fns, func_with_params) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(fns)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datatable</span>(</span>
<span id="cb4-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#class = 'cell-boarder-stripe',</span></span>
<span id="cb4-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colnames =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Function"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Full Call"</span>),</span>
<span id="cb4-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb4-30">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">autowidth =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb4-31">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pageLength =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-32">    )</span>
<span id="cb4-33">  )</span></code></pre></div>
<div class="cell-output-display">
<div class="datatables html-widget html-fill-item" id="htmlwidget-039d08720c7944584119" style="width:100%;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-039d08720c7944584119">{"x":{"filter":"none","vertical":false,"data":[["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85"],["color_blind","get_juiced_data","hai_auto_c50","hai_auto_cubist","hai_auto_earth","hai_auto_glmnet","hai_auto_knn","hai_auto_ranger","hai_auto_svm_poly","hai_auto_svm_rbf","hai_auto_wflw_metrics","hai_auto_xgboost","hai_c50_data_prepper","hai_control_chart","hai_cubist_data_prepper","hai_data_impute","hai_data_poly","hai_data_scale","hai_data_transform","hai_data_trig","hai_default_classification_metric_set","hai_default_regression_metric_set","hai_density_hist_plot","hai_density_plot","hai_density_qq_plot","hai_distribution_comparison_tbl","hai_earth_data_prepper","hai_fourier_augment","hai_fourier_discrete_augment","hai_fourier_discrete_vec","hai_fourier_vec","hai_get_density_data_tbl","hai_get_dist_data_tbl","hai_glmnet_data_prepper","hai_histogram_facet_plot","hai_hyperbolic_augment","hai_hyperbolic_vec","hai_kmeans_automl","hai_kmeans_automl_predict","hai_kmeans_mapped_tbl","hai_kmeans_obj","hai_kmeans_scree_data_tbl","hai_kmeans_scree_plot","hai_kmeans_scree_plt","hai_kmeans_tidy_tbl","hai_kmeans_user_item_tbl","hai_knn_data_prepper","hai_kurtosis_vec","hai_polynomial_augment","hai_range_statistic","hai_ranger_data_prepper","hai_scale_color_colorblind","hai_scale_fill_colorblind","hai_scale_zero_one_augment","hai_scale_zero_one_vec","hai_scale_zscore_augment","hai_scale_zscore_vec","hai_skewed_features","hai_skewness_vec","hai_svm_poly_data_prepper","hai_svm_rbf_data_prepper","hai_umap_list","hai_umap_plot","hai_winsorized_move_augment","hai_winsorized_move_vec","hai_winsorized_truncate_augment","hai_winsorized_truncate_vec","hai_xgboost_data_prepper","kmeans_mapped_tbl","kmeans_obj","kmeans_scree_data_tbl","kmeans_scree_plt","kmeans_tidy_tbl","kmeans_user_item_tbl","pca_your_recipe","required_pkgs.step_hai_scale_zscore","step_hai_fourier","step_hai_fourier_discrete","step_hai_hyperbolic","step_hai_scale_zero_one","step_hai_scale_zscore","step_hai_winsorized_move","step_hai_winsorized_truncate","umap_list","umap_plt"],["color_blind(NULL)","get_juiced_data(.recipe_object)","hai_auto_c50c(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_auto_cubistc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\")","hai_auto_earthc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_auto_glmnetc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_auto_knnc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_auto_rangerc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_auto_svm_polyc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_auto_svm_rbfc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_auto_wflw_metrics(.data)","hai_auto_xgboostc(\".data\", \".rec_obj\", \".splits_obj\", \".rsamp_obj\", \".tune\", \".grid_size\", \".num_cores\", \".best_metric\", \".model_type\")","hai_c50_data_prepperc(\".data\", \".recipe_formula\")","hai_control_chartc(\".data\", \".value_col\", \".x_col\", \".center_line\", \".std_dev\", \".plt_title\", \".plt_catpion\", \".plt_font_size\", \".print_plot\")","hai_cubist_data_prepperc(\".data\", \".recipe_formula\")","hai_data_imputec(\".recipe_object\", \"...\", \".seed_value\", \".type_of_imputation\", \".number_of_trees\", \".neighbors\", \".mean_trim\", \".roll_statistic\", \".roll_window\")","hai_data_polyc(\".recipe_object\", \"...\", \".p_degree\")","hai_data_scalec(\".recipe_object\", \"...\", \".type_of_scale\", \".range_min\", \".range_max\", \".scale_factor\")","hai_data_transformc(\".recipe_object\", \"...\", \".type_of_scale\", \".bc_limits\", \".bc_num_unique\", \".bs_deg_free\", \".bs_degree\", \".log_base\", \".log_offset\", \".logit_offset\", \".ns_deg_free\", \".rel_shift\", \".rel_reverse\", \".rel_smooth\", \".yj_limits\", \".yj_num_unique\")","hai_data_trigc(\".recipe_object\", \"...\", \".type_of_scale\", \".inverse\")","hai_default_classification_metric_set(NULL)","hai_default_regression_metric_set(NULL)","hai_density_hist_plotc(\".data\", \".dist_name_col\", \".value_col\", \".alpha\", \".interactive\")","hai_density_plotc(\".data\", \".dist_name_col\", \".x_col\", \".y_col\", \".size\", \".alpha\", \".interactive\")","hai_density_qq_plotc(\".data\", \".dist_name_col\", \".x_col\", \".y_col\", \".size\", \".alpha\", \".interactive\")","hai_distribution_comparison_tblc(\".x\", \".distributions\", \".normalize\")","hai_earth_data_prepperc(\".data\", \".recipe_formula\")","hai_fourier_augmentc(\".data\", \".value\", \".period\", \".order\", \".names\", \".scale_type\")","hai_fourier_discrete_augmentc(\".data\", \".value\", \".period\", \".order\", \".names\", \".scale_type\")","hai_fourier_discrete_vecc(\".x\", \".period\", \".order\", \".scale_type\")","hai_fourier_vecc(\".x\", \".period\", \".order\", \".scale_type\")","hai_get_density_data_tblc(\".data\", \".unnest\", \".group_data\")","hai_get_dist_data_tblc(\".data\", \".unnest\", \".group_data\")","hai_glmnet_data_prepperc(\".data\", \".recipe_formula\")","hai_histogram_facet_plotc(\".data\", \".bins\", \".scale_data\", \".ncol\", \".fct_reorder\", \".fct_rev\", \".fill\", \".color\", \".scale\", \".interactive\")","hai_hyperbolic_augmentc(\".data\", \".value\", \".names\", \".scale_type\")","hai_hyperbolic_vecc(\".x\", \".scale_type\")","hai_kmeans_automlc(\".data\", \".split_ratio\", \".seed\", \".centers\", \".standardize\", \".print_model_summary\", \".predictors\", \".categorical_encoding\", \".initialization_mode\", \".max_iterations\")","hai_kmeans_automl_predict(.input)","hai_kmeans_mapped_tblc(\".data\", \".centers\")","hai_kmeans_objc(\".data\", \".centers\")","hai_kmeans_scree_data_tbl(.data)","hai_kmeans_scree_plot(.data)","hai_kmeans_scree_plt(.data)","hai_kmeans_tidy_tblc(\".kmeans_obj\", \".data\", \".tidy_type\")","hai_kmeans_user_item_tblc(\".data\", \".row_input\", \".col_input\", \".record_input\")","hai_knn_data_prepperc(\".data\", \".recipe_formula\")","hai_kurtosis_vec(.x)","hai_polynomial_augmentc(\".data\", \".formula\", \".pred_col\", \".degree\", \".new_col_prefix\")","hai_range_statistic(.x)","hai_ranger_data_prepperc(\".data\", \".recipe_formula\")","hai_scale_color_colorblindc(\"...\", \"theme\")","hai_scale_fill_colorblindc(\"...\", \"theme\")","hai_scale_zero_one_augmentc(\".data\", \".value\", \".names\")","hai_scale_zero_one_vec(.x)","hai_scale_zscore_augmentc(\".data\", \".value\", \".names\")","hai_scale_zscore_vec(.x)","hai_skewed_featuresc(\".data\", \".threshold\", \".drop_keys\")","hai_skewness_vec(.x)","hai_svm_poly_data_prepperc(\".data\", \".recipe_formula\")","hai_svm_rbf_data_prepperc(\".data\", \".recipe_formula\")","hai_umap_listc(\".data\", \".kmeans_map_tbl\", \".k_cluster\")","hai_umap_plotc(\".data\", \".point_size\", \".label\")","hai_winsorized_move_augmentc(\".data\", \".value\", \".multiple\", \".names\")","hai_winsorized_move_vecc(\".x\", \".multiple\")","hai_winsorized_truncate_augmentc(\".data\", \".value\", \".fraction\", \".names\")","hai_winsorized_truncate_vecc(\".x\", \".fraction\")","hai_xgboost_data_prepperc(\".data\", \".recipe_formula\")","kmeans_mapped_tblc(\".data\", \".centers\")","kmeans_objc(\".data\", \".centers\")","kmeans_scree_data_tbl(.data)","kmeans_scree_plt(.data)","kmeans_tidy_tblc(\".kmeans_obj\", \".data\", \".tidy_type\")","kmeans_user_item_tblc(\".data\", \".row_input\", \".col_input\", \".record_input\")","pca_your_recipec(\".recipe_object\", \".data\", \".threshold\", \".top_n\")","required_pkgs.step_hai_scale_zscorec(\"x\", \"...\")","step_hai_fourierc(\"recipe\", \"...\", \"role\", \"trained\", \"columns\", \"scale_type\", \"period\", \"order\", \"skip\", \"id\")","step_hai_fourier_discretec(\"recipe\", \"...\", \"role\", \"trained\", \"columns\", \"scale_type\", \"period\", \"order\", \"skip\", \"id\")","step_hai_hyperbolicc(\"recipe\", \"...\", \"role\", \"trained\", \"columns\", \"scale_type\", \"skip\", \"id\")","step_hai_scale_zero_onec(\"recipe\", \"...\", \"role\", \"trained\", \"columns\", \"skip\", \"id\")","step_hai_scale_zscorec(\"recipe\", \"...\", \"role\", \"trained\", \"columns\", \"skip\", \"id\")","step_hai_winsorized_movec(\"recipe\", \"...\", \"role\", \"trained\", \"columns\", \"multiple\", \"skip\", \"id\")","step_hai_winsorized_truncatec(\"recipe\", \"...\", \"role\", \"trained\", \"columns\", \"fraction\", \"skip\", \"id\")","umap_listc(\".data\", \".kmeans_map_tbl\", \".k_cluster\")","umap_pltc(\".data\", \".point_size\", \".label\")"]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Function<\/th>\n      <th>Full Call<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"autowidth":true,"pageLength":10,"columnDefs":[{"orderable":false,"targets":0},{"name":" ","targets":0},{"name":"fns","targets":1},{"name":"func_with_params","targets":2}],"order":[],"autoWidth":false,"orderClasses":false}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s start off going through an example of using the function, <code>pca_your_repipe</code>. First, the syntax.</p>
<section id="example---pca-a-recipe" class="level2">
<h2 class="anchored" data-anchor-id="example---pca-a-recipe">Example - PCA a recipe</h2>
<section id="syntax" class="level3">
<h3 class="anchored" data-anchor-id="syntax">Syntax</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pca_your_recipe</span>(.recipe_object, .data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</section>
<section id="arguments" class="level3">
<h3 class="anchored" data-anchor-id="arguments">Arguments</h3>
<ul>
<li><code>.recipe_object</code> -</li>
<li><code>.data</code> - The full data set that is used in the original recipe object passed into .recipe_object in order to obtain the baked data of the transform.</li>
<li><code>.threshold</code> - A number between 0 and 1. A fraction of the total variance that should be covered by the components.</li>
<li><code>.top_n</code> - How many variables loadings should be returned per PC</li>
</ul>
</section>
<section id="value" class="level3">
<h3 class="anchored" data-anchor-id="value">Value</h3>
<p>A list object with several components.</p>
</section>
<section id="details" class="level3">
<h3 class="anchored" data-anchor-id="details">Details</h3>
<p>This is a simple wrapper around some recipes functions to perform a PCA on a given recipe. This function will output a list and return it invisible. All of the components of the analysis will be returned in a list as their own object that can be selected individually. A scree plot is also included. The items that get returned are:</p>
<ul>
<li>pca_transform - This is the pca recipe.</li>
<li>variable_loadings</li>
<li>variable_variance</li>
<li>pca_estimates</li>
<li>pca_juiced_estimates</li>
<li>pca_baked_data</li>
<li>pca_variance_df</li>
<li>pca_rotattion_df</li>
<li>pca_variance_scree_plt</li>
<li>pca_loadings_plt</li>
<li>pca_loadings_plotly</li>
<li>pca_top_n_loadings_plt</li>
<li>pca_top_n_plotly</li>
</ul>
</section>
<section id="working-example" class="level3">
<h3 class="anchored" data-anchor-id="working-example">Working Example</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rsample)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(recipes)</span>
<span id="cb6-3"></span>
<span id="cb6-4">splits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initial_split</span>(mtcars, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb6-5"></span>
<span id="cb6-6">rec_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">training</span>(splits)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_normalize</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_predictors</span>())</span>
<span id="cb6-8"></span>
<span id="cb6-9">pca_output <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pca_your_recipe</span>(</span>
<span id="cb6-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.recipe_object =</span> rec_obj, </span>
<span id="cb6-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> mtcars, </span>
<span id="cb6-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, </span>
<span id="cb6-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb6-14">  )</span></code></pre></div>
</div>
<p>Now let’s check the output:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">pca_output</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$pca_transform</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Recipe ──────────────────────────────────────────────────────────────────────</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Inputs </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Number of variables by role</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>outcome:    1
predictor: 10</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Operations </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Centering and scaling for: all_predictors()</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Centering for: recipes::all_numeric()</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Scaling for: recipes::all_numeric()</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Sparse, unbalanced variable filter on: recipes::all_numeric()</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• PCA extraction with: recipes::all_numeric_predictors()</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
$variable_loadings
# A tibble: 100 × 4
   terms  value component id       
   &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    
 1 cyl   -0.394 PC1       pca_RSbN6
 2 disp  -0.389 PC1       pca_RSbN6
 3 hp    -0.356 PC1       pca_RSbN6
 4 drat   0.321 PC1       pca_RSbN6
 5 wt    -0.358 PC1       pca_RSbN6
 6 qsec   0.248 PC1       pca_RSbN6
 7 vs     0.319 PC1       pca_RSbN6
 8 am     0.248 PC1       pca_RSbN6
 9 gear   0.238 PC1       pca_RSbN6
10 carb  -0.232 PC1       pca_RSbN6
# ℹ 90 more rows

$variable_variance
# A tibble: 40 × 4
   terms     value component id       
   &lt;chr&gt;     &lt;dbl&gt;     &lt;int&gt; &lt;chr&gt;    
 1 variance 6.09           1 pca_RSbN6
 2 variance 2.42           2 pca_RSbN6
 3 variance 0.619          3 pca_RSbN6
 4 variance 0.231          4 pca_RSbN6
 5 variance 0.215          5 pca_RSbN6
 6 variance 0.171          6 pca_RSbN6
 7 variance 0.112          7 pca_RSbN6
 8 variance 0.0848         8 pca_RSbN6
 9 variance 0.0409         9 pca_RSbN6
10 variance 0.0219        10 pca_RSbN6
# ℹ 30 more rows

$pca_estimates</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Recipe ──────────────────────────────────────────────────────────────────────</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Inputs </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Number of variables by role</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>outcome:    1
predictor: 10</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Training information </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Training data contained 25 data points and no incomplete rows.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Operations </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Centering and scaling for: cyl, disp, hp, drat, wt, qsec, ... | Trained</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Centering for: cyl, disp, hp, drat, wt, qsec, vs, am, gear, ... | Trained</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Scaling for: cyl, disp, hp, drat, wt, qsec, vs, am, gear, ... | Trained</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• Sparse, unbalanced variable filter removed: &lt;none&gt; | Trained</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>• PCA extraction with: cyl, disp, hp, drat, wt, qsec, vs, am, ... | Trained</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
$pca_juiced_estimates
# A tibble: 25 × 3
       mpg    PC1      PC2
     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;
 1 -1.67   -3.54  -0.529  
 2  0.0945  0.633  2.03   
 3  0.394   2.31  -1.60   
 4  0.178   1.88  -1.88   
 5  1.99    3.29   0.00164
 6  1.66    3.79   0.988  
 7 -0.670  -2.14  -0.503  
 8 -0.953  -3.45  -0.248  
 9  2.24    3.59   0.0209 
10  0.161   2.47   0.534  
# ℹ 15 more rows

$pca_baked_data
# A tibble: 32 × 3
       mpg    PC1    PC2
     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
 1  0.0945  0.633  2.03 
 2  0.0945  0.613  1.87 
 3  0.394   2.76   0.137
 4  0.161   0.228 -2.17 
 5 -0.288  -2.01  -0.623
 6 -0.388   0.191 -2.55 
 7 -1.02   -2.82   0.438
 8  0.660   1.91  -1.13 
 9  0.394   2.31  -1.60 
10 -0.205   0.622  0.125
# ℹ 22 more rows

$pca_variance_df
# A tibble: 10 × 6
   PC    var_explained var_pct_txt cum_var_pct cum_var_pct_txt ou_threshold
   &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt;           &lt;fct&gt;       
 1 PC1         0.609   60.86%            0.609 60.86%          Under       
 2 PC2         0.242   24.19%            0.850 85.05%          Over        
 3 PC3         0.0619  6.19%             0.912 91.24%          Over        
 4 PC4         0.0231  2.31%             0.935 93.55%          Over        
 5 PC5         0.0215  2.15%             0.957 95.70%          Over        
 6 PC6         0.0171  1.71%             0.974 97.41%          Over        
 7 PC7         0.0112  1.12%             0.985 98.52%          Over        
 8 PC8         0.00848 0.85%             0.994 99.37%          Over        
 9 PC9         0.00409 0.41%             0.998 99.78%          Over        
10 PC10        0.00219 0.22%             1     100.00%         Over        

$pca_rotation_df
# A tibble: 10 × 10
      PC1     PC2     PC3     PC4      PC5     PC6     PC7     PC8     PC9
    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;
 1 -0.394  0.0328 -0.146   0.0804 -0.162    0.0655 -0.223  -0.0200 -0.728 
 2 -0.389 -0.0623  0.0134 -0.0763  0.200   -0.383   0.447   0.0126 -0.369 
 3 -0.356  0.213   0.240   0.342  -0.195   -0.145   0.270   0.614   0.282 
 4  0.321  0.295   0.0556  0.336   0.768   -0.125  -0.0333  0.127  -0.204 
 5 -0.358 -0.124   0.391  -0.367   0.305   -0.347  -0.105  -0.338   0.262 
 6  0.248 -0.432   0.425  -0.317   0.00567 -0.0377 -0.272   0.568  -0.259 
 7  0.319 -0.255   0.421   0.505  -0.328   -0.313   0.156  -0.373  -0.163 
 8  0.248  0.443  -0.217  -0.241  -0.294   -0.693  -0.253   0.0794 -0.0246
 9  0.238  0.449   0.346  -0.431  -0.125    0.278   0.509  -0.0781 -0.222 
10 -0.232  0.445   0.490   0.151  -0.0541   0.189  -0.494  -0.133  -0.0201
# ℹ 1 more variable: PC10 &lt;dbl&gt;

$pca_variance_scree_plt</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-24/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
$pca_loadings_plt</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-24/index_files/figure-html/unnamed-chunk-4-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
$pca_loadings_plotly

$pca_top_n_loadings_plt</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-24/index_files/figure-html/unnamed-chunk-4-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
$pca_top_n_plotly</code></pre>
</div>
</div>
<p>Pretty easy as you can see.</p>
</section>
</section>
<section id="example---histogram-facet-plot" class="level2">
<h2 class="anchored" data-anchor-id="example---histogram-facet-plot">Example - Histogram Facet Plot</h2>
<section id="syntax-1" class="level3">
<h3 class="anchored" data-anchor-id="syntax-1">Syntax</h3>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hai_histogram_facet_plot</span>(</span>
<span id="cb43-2">  .data,</span>
<span id="cb43-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb43-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.scale_data =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb43-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb43-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.fct_reorder =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb43-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.fct_rev =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb43-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>,</span>
<span id="cb43-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb43-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>,</span>
<span id="cb43-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb43-12">)</span></code></pre></div>
</section>
<section id="arguments-1" class="level3">
<h3 class="anchored" data-anchor-id="arguments-1">Arguments</h3>
<ul>
<li><code>.data</code> - The data you want to pass to the function.</li>
<li><code>.bins</code> - The number of bins for the histograms.</li>
<li><code>.scale_data</code> - This is a boolean set to FALSE. TRUE will use hai_scale_zero_one_vec() to [0, 1] scale the data.</li>
<li><code>.ncol</code> - The number of columns for the facet_warp argument.</li>
<li><code>.fct_reorder</code> - Should the factor column be reordered? TRUE/FALSE, default of FALSE</li>
<li><code>.fct_rev</code> - Should the factor column be reversed? TRUE/FALSE, default of FALSE</li>
<li><code>.fill</code> - Default is steelblue</li>
<li><code>.color</code> - Default is ‘white’</li>
<li><code>.scale</code> - Default is ‘free’</li>
<li><code>.interactive</code> - Default is FALSE, TRUE will produce a plotly plot.</li>
</ul>
</section>
<section id="working-example-1" class="level3">
<h3 class="anchored" data-anchor-id="working-example-1">Working Example</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hai_histogram_facet_plot</span>(mtcars, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-24/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hai_histogram_facet_plot</span>(mtcars, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.scale_data =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-24/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="example---boilerplacte-funcationality" class="level2">
<h2 class="anchored" data-anchor-id="example---boilerplacte-funcationality">Example - Boilerplacte Funcationality</h2>
<p>Now we are going to go over some simple boilerplate funcationality. I call it boilerplate because you don’t have to change anything if you dont want to. For the boilerplate function there is a corresponding data preprocessor that will get the data into the shape it needs to be in for the algorithm. Let’s take a look.</p>
<section id="working-example-2" class="level3">
<h3 class="anchored" data-anchor-id="working-example-2">Working Example</h3>
<p>First lets look at the data, then we will look at it after the preprocessor.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(iris)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1">rec_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hai_earth_data_prepper</span>(iris, Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .)</span>
<span id="cb48-2"></span>
<span id="cb48-3">rec_obj</span></code></pre></div>
</div>
<p>Now to run it through the boilerplate:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1">auto_earth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hai_auto_earth</span>(</span>
<span id="cb49-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> iris,</span>
<span id="cb49-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.rec_obj =</span> rec_obj,</span>
<span id="cb49-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.best_metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f_meas"</span>,</span>
<span id="cb49-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.model_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification"</span></span>
<span id="cb49-6">)</span></code></pre></div>
</div>
<p>Now let’s inspect the output:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(auto_earth)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "recipe_info" "model_info"  "tuned_info" </code></pre>
</div>
</div>
</section>
<section id="recipe-information" class="level3">
<h3 class="anchored" data-anchor-id="recipe-information">Recipe Information</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1">auto_earth[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recipe_info"</span>]]</span></code></pre></div>
</div>
</section>
<section id="model-information" class="level3">
<h3 class="anchored" data-anchor-id="model-information">Model Information</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1">auto_earth[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_info"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$model_spec
MARS Model Specification (classification)

Main Arguments:
  num_terms = tune::tune()
  prod_degree = tune::tune()
  prune_method = none

Computational engine: earth 


$wflw
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: mars()

── Preprocessor ────────────────────────────────────────────────────────────────
4 Recipe Steps

• step_string2factor()
• step_novel()
• step_dummy()
• step_zv()

── Model ───────────────────────────────────────────────────────────────────────
MARS Model Specification (classification)

Main Arguments:
  num_terms = tune::tune()
  prod_degree = tune::tune()
  prune_method = none

Computational engine: earth 


$fitted_wflw
══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: mars()

── Preprocessor ────────────────────────────────────────────────────────────────
4 Recipe Steps

• step_string2factor()
• step_novel()
• step_dummy()
• step_zv()

── Model ───────────────────────────────────────────────────────────────────────
GLM (family binomial, link logit):
           nulldev  df       dev  df   devratio     AIC iters converged
setosa     144.779 111   52.6908 110     0.6360   56.69    22         1
versicolor 137.505 111  125.5536 110     0.0869  129.60     4         1
virginica  144.779 111   15.1575 110     0.8950   19.16     9         1

Earth selected 2 of 15 terms, and 1 of 4 predictors (pmethod="none") (nprune=2)
Termination condition: Reached nk 21
Importance: Petal.Length-unused, Sepal.Length-unused, Sepal.Width-unused, ...
Number of terms at each degree of interaction: 1 1 (additive model)

Earth
                  GCV       RSS       GRSq        RSq
setosa     0.15145196 16.066078 0.34455933 0.36796602
versicolor 0.20252995 21.484449 0.05906052 0.09266277
virginica  0.04535734  4.811523 0.80370644 0.81071635
All        0.36072282 38.265605 0.46747354 0.48649080

$was_tuned
[1] "tuned"</code></pre>
</div>
</div>
</section>
<section id="tuned-information" class="level3">
<h3 class="anchored" data-anchor-id="tuned-information">Tuned Information</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1">auto_earth[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tuned_info"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$tuning_grid
# A tibble: 7 × 2
  num_terms prod_degree
      &lt;int&gt;       &lt;int&gt;
1         3           2
2         4           1
3         5           2
4         3           1
5         4           2
6         2           2
7         2           1

$cv_obj
# Monte Carlo cross-validation (0.75/0.25) with 25 resamples  
# A tibble: 25 × 2
   splits          id        
   &lt;list&gt;          &lt;chr&gt;     
 1 &lt;split [84/28]&gt; Resample01
 2 &lt;split [84/28]&gt; Resample02
 3 &lt;split [84/28]&gt; Resample03
 4 &lt;split [84/28]&gt; Resample04
 5 &lt;split [84/28]&gt; Resample05
 6 &lt;split [84/28]&gt; Resample06
 7 &lt;split [84/28]&gt; Resample07
 8 &lt;split [84/28]&gt; Resample08
 9 &lt;split [84/28]&gt; Resample09
10 &lt;split [84/28]&gt; Resample10
# ℹ 15 more rows

$tuned_results
# Tuning results
# Monte Carlo cross-validation (0.75/0.25) with 25 resamples  
# A tibble: 25 × 4
   splits          id         .metrics          .notes          
   &lt;list&gt;          &lt;chr&gt;      &lt;list&gt;            &lt;list&gt;          
 1 &lt;split [84/28]&gt; Resample01 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 2 &lt;split [84/28]&gt; Resample02 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 3 &lt;split [84/28]&gt; Resample03 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 4 &lt;split [84/28]&gt; Resample04 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 5 &lt;split [84/28]&gt; Resample05 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 6 &lt;split [84/28]&gt; Resample06 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 7 &lt;split [84/28]&gt; Resample07 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 8 &lt;split [84/28]&gt; Resample08 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
 9 &lt;split [84/28]&gt; Resample09 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
10 &lt;split [84/28]&gt; Resample10 &lt;tibble [77 × 6]&gt; &lt;tibble [5 × 3]&gt;
# ℹ 15 more rows

There were issues with some computations:

  - Warning(s) x5: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x6: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x1: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x1: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x2: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x1: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x5: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x4: While computing multiclass `precision()`, some levels had no pred...
  - Warning(s) x48: glm.fit: algorithm did not converge, glm.fit: fitted probabilitie...
  - Warning(s) x2: glm.fit: algorithm did not converge, glm.fit: fitted probabilitie...
  - Warning(s) x49: glm.fit: fitted probabilities numerically 0 or 1 occurred, glm.fi...
  - Warning(s) x1: glm.fit: fitted probabilities numerically 0 or 1 occurred, glm.fi...

Run `show_notes(.Last.tune.result)` for more information.

$grid_size
[1] 10

$best_metric
[1] "f_meas"

$best_result_set
# A tibble: 1 × 8
  num_terms prod_degree .metric .estimator  mean     n std_err .config          
      &lt;int&gt;       &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;            
1         2           1 f_meas  macro      0.124    25  0.0154 Preprocessor1_Mo…

$tuning_grid_plot</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-24/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
$plotly_grid_plot</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="metric-sets" class="level1">
<h1>Metric Sets</h1>
<p>With this package there comes some metric set’s that can be computed using the <code>yardstick</code> package. These are the metric sets that are available:</p>
<section id="classification" class="level2">
<h2 class="anchored" data-anchor-id="classification">Classification</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hai_default_classification_metric_set</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>A metric set, consisting of:
- `sensitivity()`, a class metric  | direction: maximize
- `specificity()`, a class metric  | direction: maximize
- `recall()`, a class metric       | direction: maximize
- `precision()`, a class metric    | direction: maximize
- `mcc()`, a class metric          | direction: maximize
- `accuracy()`, a class metric     | direction: maximize
- `f_meas()`, a class metric       | direction: maximize
- `kap()`, a class metric          | direction: maximize
- `ppv()`, a class metric          | direction: maximize
- `npv()`, a class metric          | direction: maximize
- `bal_accuracy()`, a class metric | direction: maximize</code></pre>
</div>
</div>
</section>
<section id="regression" class="level2">
<h2 class="anchored" data-anchor-id="regression">Regression</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hai_default_regression_metric_set</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>A metric set, consisting of:
- `mae()`, a numeric metric   | direction: minimize
- `mape()`, a numeric metric  | direction: minimize
- `mase()`, a numeric metric  | direction: minimize
- `smape()`, a numeric metric | direction: minimize
- `rmse()`, a numeric metric  | direction: minimize
- `rsq()`, a numeric metric   | direction: maximize</code></pre>
</div>
</div>
<p>Here is a list of the items currently on it as of writing this article:</p>
<ol type="1">
<li><strong>Plotting Functions</strong> - Functions for plotting.</li>
<li><strong>Clustering Functions</strong> - Functions for clustering and analysis.</li>
<li><strong>Boiler Plate Functions</strong> - Functions for automatic recipes, workflows, and tuned models.</li>
<li><strong>Dimensionality Reduction</strong> - Functions for dimension reduction.</li>
<li><strong>Data Wrangling</strong> - Functions for data wrangling.</li>
<li><strong>Data Preprocessors</strong> - Functions for data preprocessing.</li>
<li><strong>Recipe Steps</strong> - Functions to add recipe steps.</li>
<li><strong>Table Functions</strong> - Functions that return tibbles.</li>
<li><strong>Vectorized Functions</strong> - Vector functions.</li>
<li><strong>Augmenting Functions</strong> - Functions for data augmentation.</li>
<li><strong>Miscellaneous Functions</strong> - Miscellaneous utility functions.</li>
<li><strong>Metric Sets</strong> - Metric sets for evaluation.</li>
</ol>
<p>For more detailed information, you can visit the <a href="https://www.spsanderson.com/healthyR.ai/reference/">healthyR.ai function reference page</a>.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>I hope this helped a bit with understanding the <code>healthyR.ai</code> package. It is a very powerful package that can help you with a lot of different tasks. I will be writing more about this package in the future. If you have any questions or comments, please feel free to reach out to me at any of these:</p>
<p>People can get in touch with you through the following social profiles:</p>
<ul>
<li><strong>LinkedIn</strong>: <a href="https://www.linkedin.com/in/spsanderson">linkedin.com/in/spsanderson</a></li>
<li><strong>Mastodon</strong>: <a href="https://mstdn.social/@stevensanderson">mstdn.social/<span class="citation" data-cites="stevensanderson">@stevensanderson</span></a></li>
<li><strong>Telegram</strong>: <a href="https://t.me/steveondata">t.me/steveondata</a></li>
</ul>
<hr>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-24/</guid>
  <pubDate>Mon, 24 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Writing Excel Spreadsheets to Disk with R and Python</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-23/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When working with data, exporting your results to an Excel file can be very handy. Today, I’ll show you how to write the iris dataset to an Excel file using R and Python. We will explore three R packages: <code>writexl</code>, <code>openxlsx</code>, and <code>xlsx</code>, and the <code>openpyxl</code> library in Python. Let’s dive in!</p>
<section id="writing-excel-files-in-r" class="level2">
<h2 class="anchored" data-anchor-id="writing-excel-files-in-r">Writing Excel Files in R</h2>
<p>First, let’s start with R. We’ll use the well-known <code>iris</code> dataset and write it to a temporary file using three different packages.</p>
<section id="using-writexl" class="level3">
<h3 class="anchored" data-anchor-id="using-writexl">Using <code>writexl</code></h3>
<p>The <code>writexl</code> package is straightforward and easy to use for writing data frames to Excel files.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install and load the writexl package</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"writexl"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(writexl)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write iris dataset to a temporary file</span></span>
<span id="cb1-6">writexl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_xlsx</span>(iris, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>())</span></code></pre></div>
<p>The <code>write_xlsx</code> function does exactly what it says: it writes your data frame to an Excel file. The <code>tempfile()</code> function creates a temporary file, which is useful for quick testing without cluttering your directory.</p>
</section>
<section id="using-openxlsx" class="level3">
<h3 class="anchored" data-anchor-id="using-openxlsx">Using <code>openxlsx</code></h3>
<p>The <code>openxlsx</code> package provides more flexibility and additional features compared to <code>writexl</code>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install and load the openxlsx package</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openxlsx"</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(openxlsx)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the iris dataset to a temporary file</span></span>
<span id="cb2-6">openxlsx<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.xlsx</span>(iris, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>())</span></code></pre></div>
<p>With <code>openxlsx</code>, you can directly write the data frame to an Excel file using the <code>write.xlsx</code> function, making the process simple and efficient.</p>
</section>
<section id="using-xlsx" class="level3">
<h3 class="anchored" data-anchor-id="using-xlsx">Using <code>xlsx</code></h3>
<p>The <code>xlsx</code> package is another option that can be useful, though it requires Java.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install and load the xlsx package</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xlsx"</span>)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(xlsx)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the iris dataset to a temporary file</span></span>
<span id="cb3-6">xlsx<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.xlsx</span>(iris, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tempfile</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".xlsx"</span>))</span></code></pre></div>
<p><code>write.xlsx</code> from the <code>xlsx</code> package works similarly to the previous functions but requires the <code>.xlsx</code> extension to be explicitly added to the temporary file name.</p>
</section>
</section>
<section id="writing-excel-files-in-python" class="level2">
<h2 class="anchored" data-anchor-id="writing-excel-files-in-python">Writing Excel Files in Python</h2>
<p>Now, let’s see how to achieve the same with Python using the <code>openpyxl</code> library.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install openpyxl if you haven't already</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install openpyxl</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openpyxl</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load an existing workbook</span></span>
<span id="cb4-7">workbook <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> openpyxl.load_workbook(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example.xlsx"</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a new seet</span></span>
<span id="cb4-10">workbook.create_sheet(title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sheet1"</span>)</span>
<span id="cb4-11"></span>
<span id="cb4-12">sheet_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sheet1"</span></span>
<span id="cb4-13"></span>
<span id="cb4-14">sheet <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> workbook[sheet_name]</span>
<span id="cb4-15"></span>
<span id="cb4-16">sheet[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A1"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, World!"</span></span>
<span id="cb4-17"></span>
<span id="cb4-18">workbook.save(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example.xlsx"</span>)</span></code></pre></div>
<p>Here is a concise breakdown of what this script does:</p>
<ul>
<li>Installs the openpyxl library (if necessary).</li>
<li>Imports the openpyxl library.</li>
<li>Loads an existing Excel workbook named example.xlsx.</li>
<li>Creates a new sheet titled “Sheet1” in the workbook.</li>
<li>Assigns the value “Hello, World!” to cell A1 of the new sheet.</li>
<li>Saves the changes back to “example.xlsx”.</li>
</ul>
</section>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself!</h1>
<p>Feel free to try these code snippets on your own. Exporting data to Excel is a common task, and knowing different ways to do it can be very useful in your data analysis toolkit. If you want to learn more about integrating Excel with R and Python, consider purchasing the book <a href="https://packt.link/oTyZJ">“Extending Excel with Python and R”</a> for in-depth tutorials and advanced techniques.</p>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>python</category>
  <category>excel</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-23/</guid>
  <pubDate>Sun, 23 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Practical Examples with healthyR.ts</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-20/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Today I am going to go over some quick yet practical examples of ways that you can use the <code>healthyR.ts</code> package. This package is designed to help you analyze time series data in a more efficient and effective manner.</p>
<p>Let’s just jump right into it!</p>
</section>
<section id="load-the-libraries" class="level1">
<h1>Load the libraries</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.ts)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(timetk)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(modeltime)</span></code></pre></div>
</div>
</section>
<section id="load-the-data" class="level1">
<h1>Load the data</h1>
<p>We are going to use the timeseries data called <code>BJSales.lead</code> that comes with Base R. We will do this to showcase a couple of things like turning a ts object into a tibble and plotting the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the data, which has no time series information other than it is</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a time series object and 150 points in length, so we will go ahead and</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a date column for it and name it date_col.</span></span>
<span id="cb2-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> BJsales.lead <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_to_tbl</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq.Date</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1991-01-01"</span>), </span>
<span id="cb2-7">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, </span>
<span id="cb2-8">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(date_col, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>())</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the first few rows of the data</span></span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 2
  date_col   value
  &lt;date&gt;     &lt;dbl&gt;
1 1991-01-01 10.0 
2 1991-02-01 10.1 
3 1991-03-01 10.3 
4 1991-04-01  9.75
5 1991-05-01 10.3 
6 1991-06-01 10.1 </code></pre>
</div>
</div>
<p>So far, we have loaded the data and created a date column for it. Now, let’s plot the data. We are going to use the <code>ts_vva_plot</code> function to do this.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the data</span></span>
<span id="cb4-2">plt_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_vva_plot</span>(df, date_col, value)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(plt_data[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"augmented_data_tbl"</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  date_col   name           value
  &lt;date&gt;     &lt;fct&gt;          &lt;dbl&gt;
1 1991-01-01 Value        10.0   
2 1991-01-01 Velocity     NA     
3 1991-01-01 Acceleration NA     
4 1991-02-01 Value        10.1   
5 1991-02-01 Velocity      0.0600
6 1991-02-01 Acceleration NA     </code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">plt_data[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plots"</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interactive_plot"</span>]]</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-44eefbcb1bf5c21b225b" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-44eefbcb1bf5c21b225b">{"x":{"data":[{"x":[7670,7701,7729,7760,7790,7821,7851,7882,7913,7943,7974,8004,8035,8066,8095,8126,8156,8187,8217,8248,8279,8309,8340,8370,8401,8432,8460,8491,8521,8552,8582,8613,8644,8674,8705,8735,8766,8797,8825,8856,8886,8917,8947,8978,9009,9039,9070,9100,9131,9162,9190,9221,9251,9282,9312,9343,9374,9404,9435,9465,9496,9527,9556,9587,9617,9648,9678,9709,9740,9770,9801,9831,9862,9893,9921,9952,9982,10013,10043,10074,10105,10135,10166,10196,10227,10258,10286,10317,10347,10378,10408,10439,10470,10500,10531,10561,10592,10623,10651,10682,10712,10743,10773,10804,10835,10865,10896,10926,10957,10988,11017,11048,11078,11109,11139,11170,11201,11231,11262,11292,11323,11354,11382,11413,11443,11474,11504,11535,11566,11596,11627,11657,11688,11719,11747,11778,11808,11839,11869,11900,11931,11961,11992,12022,12053,12084,12112,12143,12173,12204],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"text":["date_col: 1991-01-01<br />value: 10.01<br />name: Value<br />name: Value","date_col: 1991-02-01<br />value: 10.07<br />name: Value<br />name: Value","date_col: 1991-03-01<br />value: 10.32<br />name: Value<br />name: Value","date_col: 1991-04-01<br />value:  9.75<br />name: Value<br />name: Value","date_col: 1991-05-01<br />value: 10.33<br />name: Value<br />name: Value","date_col: 1991-06-01<br />value: 10.13<br />name: Value<br />name: Value","date_col: 1991-07-01<br />value: 10.36<br />name: Value<br />name: Value","date_col: 1991-08-01<br />value: 10.32<br />name: Value<br />name: Value","date_col: 1991-09-01<br />value: 10.13<br />name: Value<br />name: Value","date_col: 1991-10-01<br />value: 10.16<br />name: Value<br />name: Value","date_col: 1991-11-01<br />value: 10.58<br />name: Value<br />name: Value","date_col: 1991-12-01<br />value: 10.62<br />name: Value<br />name: Value","date_col: 1992-01-01<br />value: 10.86<br />name: Value<br />name: Value","date_col: 1992-02-01<br />value: 11.20<br />name: Value<br />name: Value","date_col: 1992-03-01<br />value: 10.74<br />name: Value<br />name: Value","date_col: 1992-04-01<br />value: 10.56<br />name: Value<br />name: Value","date_col: 1992-05-01<br />value: 10.48<br />name: Value<br />name: Value","date_col: 1992-06-01<br />value: 10.77<br />name: Value<br />name: Value","date_col: 1992-07-01<br />value: 11.33<br />name: Value<br />name: Value","date_col: 1992-08-01<br />value: 10.96<br />name: Value<br />name: Value","date_col: 1992-09-01<br />value: 11.16<br />name: Value<br />name: Value","date_col: 1992-10-01<br />value: 11.70<br />name: Value<br />name: Value","date_col: 1992-11-01<br />value: 11.39<br />name: Value<br />name: Value","date_col: 1992-12-01<br />value: 11.42<br />name: Value<br />name: Value","date_col: 1993-01-01<br />value: 11.94<br />name: Value<br />name: Value","date_col: 1993-02-01<br />value: 11.24<br />name: Value<br />name: Value","date_col: 1993-03-01<br />value: 11.59<br />name: Value<br />name: Value","date_col: 1993-04-01<br />value: 10.96<br />name: Value<br />name: Value","date_col: 1993-05-01<br />value: 11.40<br />name: Value<br />name: Value","date_col: 1993-06-01<br />value: 11.02<br />name: Value<br />name: Value","date_col: 1993-07-01<br />value: 11.01<br />name: Value<br />name: Value","date_col: 1993-08-01<br />value: 11.23<br />name: Value<br />name: Value","date_col: 1993-09-01<br />value: 11.33<br />name: Value<br />name: Value","date_col: 1993-10-01<br />value: 10.83<br />name: Value<br />name: Value","date_col: 1993-11-01<br />value: 10.84<br />name: Value<br />name: Value","date_col: 1993-12-01<br />value: 11.14<br />name: Value<br />name: Value","date_col: 1994-01-01<br />value: 10.38<br />name: Value<br />name: Value","date_col: 1994-02-01<br />value: 10.90<br />name: Value<br />name: Value","date_col: 1994-03-01<br />value: 11.05<br />name: Value<br />name: Value","date_col: 1994-04-01<br />value: 11.11<br />name: Value<br />name: Value","date_col: 1994-05-01<br />value: 11.01<br />name: Value<br />name: Value","date_col: 1994-06-01<br />value: 11.22<br />name: Value<br />name: Value","date_col: 1994-07-01<br />value: 11.21<br />name: Value<br />name: Value","date_col: 1994-08-01<br />value: 11.91<br />name: Value<br />name: Value","date_col: 1994-09-01<br />value: 11.69<br />name: Value<br />name: Value","date_col: 1994-10-01<br />value: 10.93<br />name: Value<br />name: Value","date_col: 1994-11-01<br />value: 10.99<br />name: Value<br />name: Value","date_col: 1994-12-01<br />value: 11.01<br />name: Value<br />name: Value","date_col: 1995-01-01<br />value: 10.84<br />name: Value<br />name: Value","date_col: 1995-02-01<br />value: 10.76<br />name: Value<br />name: Value","date_col: 1995-03-01<br />value: 10.77<br />name: Value<br />name: Value","date_col: 1995-04-01<br />value: 10.88<br />name: Value<br />name: Value","date_col: 1995-05-01<br />value: 10.49<br />name: Value<br />name: Value","date_col: 1995-06-01<br />value: 10.50<br />name: Value<br />name: Value","date_col: 1995-07-01<br />value: 11.00<br />name: Value<br />name: Value","date_col: 1995-08-01<br />value: 10.98<br />name: Value<br />name: Value","date_col: 1995-09-01<br />value: 10.61<br />name: Value<br />name: Value","date_col: 1995-10-01<br />value: 10.48<br />name: Value<br />name: Value","date_col: 1995-11-01<br />value: 10.53<br />name: Value<br />name: Value","date_col: 1995-12-01<br />value: 11.07<br />name: Value<br />name: Value","date_col: 1996-01-01<br />value: 10.61<br />name: Value<br />name: Value","date_col: 1996-02-01<br />value: 10.86<br />name: Value<br />name: Value","date_col: 1996-03-01<br />value: 10.34<br />name: Value<br />name: Value","date_col: 1996-04-01<br />value: 10.78<br />name: Value<br />name: Value","date_col: 1996-05-01<br />value: 10.80<br />name: Value<br />name: Value","date_col: 1996-06-01<br />value: 10.33<br />name: Value<br />name: Value","date_col: 1996-07-01<br />value: 10.44<br />name: Value<br />name: Value","date_col: 1996-08-01<br />value: 10.50<br />name: Value<br />name: Value","date_col: 1996-09-01<br />value: 10.75<br />name: Value<br />name: Value","date_col: 1996-10-01<br />value: 10.40<br />name: Value<br />name: Value","date_col: 1996-11-01<br />value: 10.40<br />name: Value<br />name: Value","date_col: 1996-12-01<br />value: 10.34<br />name: Value<br />name: Value","date_col: 1997-01-01<br />value: 10.55<br />name: Value<br />name: Value","date_col: 1997-02-01<br />value: 10.46<br />name: Value<br />name: Value","date_col: 1997-03-01<br />value: 10.82<br />name: Value<br />name: Value","date_col: 1997-04-01<br />value: 10.91<br />name: Value<br />name: Value","date_col: 1997-05-01<br />value: 10.87<br />name: Value<br />name: Value","date_col: 1997-06-01<br />value: 10.67<br />name: Value<br />name: Value","date_col: 1997-07-01<br />value: 11.11<br />name: Value<br />name: Value","date_col: 1997-08-01<br />value: 10.88<br />name: Value<br />name: Value","date_col: 1997-09-01<br />value: 11.28<br />name: Value<br />name: Value","date_col: 1997-10-01<br />value: 11.27<br />name: Value<br />name: Value","date_col: 1997-11-01<br />value: 11.44<br />name: Value<br />name: Value","date_col: 1997-12-01<br />value: 11.52<br />name: Value<br />name: Value","date_col: 1998-01-01<br />value: 12.10<br />name: Value<br />name: Value","date_col: 1998-02-01<br />value: 11.83<br />name: Value<br />name: Value","date_col: 1998-03-01<br />value: 12.62<br />name: Value<br />name: Value","date_col: 1998-04-01<br />value: 12.41<br />name: Value<br />name: Value","date_col: 1998-05-01<br />value: 12.43<br />name: Value<br />name: Value","date_col: 1998-06-01<br />value: 12.73<br />name: Value<br />name: Value","date_col: 1998-07-01<br />value: 13.01<br />name: Value<br />name: Value","date_col: 1998-08-01<br />value: 12.74<br />name: Value<br />name: Value","date_col: 1998-09-01<br />value: 12.73<br />name: Value<br />name: Value","date_col: 1998-10-01<br />value: 12.76<br />name: Value<br />name: Value","date_col: 1998-11-01<br />value: 12.92<br />name: Value<br />name: Value","date_col: 1998-12-01<br />value: 12.64<br />name: Value<br />name: Value","date_col: 1999-01-01<br />value: 12.79<br />name: Value<br />name: Value","date_col: 1999-02-01<br />value: 13.05<br />name: Value<br />name: Value","date_col: 1999-03-01<br />value: 12.69<br />name: Value<br />name: Value","date_col: 1999-04-01<br />value: 13.01<br />name: Value<br />name: Value","date_col: 1999-05-01<br />value: 12.90<br />name: Value<br />name: Value","date_col: 1999-06-01<br />value: 13.12<br />name: Value<br />name: Value","date_col: 1999-07-01<br />value: 12.47<br />name: Value<br />name: Value","date_col: 1999-08-01<br />value: 12.47<br />name: Value<br />name: Value","date_col: 1999-09-01<br />value: 12.94<br />name: Value<br />name: Value","date_col: 1999-10-01<br />value: 13.10<br />name: Value<br />name: Value","date_col: 1999-11-01<br />value: 12.91<br />name: Value<br />name: Value","date_col: 1999-12-01<br />value: 13.39<br />name: Value<br />name: Value","date_col: 2000-01-01<br />value: 13.13<br />name: Value<br />name: Value","date_col: 2000-02-01<br />value: 13.34<br />name: Value<br />name: Value","date_col: 2000-03-01<br />value: 13.34<br />name: Value<br />name: Value","date_col: 2000-04-01<br />value: 13.14<br />name: Value<br />name: Value","date_col: 2000-05-01<br />value: 13.49<br />name: Value<br />name: Value","date_col: 2000-06-01<br />value: 13.87<br />name: Value<br />name: Value","date_col: 2000-07-01<br />value: 13.39<br />name: Value<br />name: Value","date_col: 2000-08-01<br />value: 13.59<br />name: Value<br />name: Value","date_col: 2000-09-01<br />value: 13.27<br />name: Value<br />name: Value","date_col: 2000-10-01<br />value: 13.70<br />name: Value<br />name: Value","date_col: 2000-11-01<br />value: 13.20<br />name: Value<br />name: Value","date_col: 2000-12-01<br />value: 13.32<br />name: Value<br />name: Value","date_col: 2001-01-01<br />value: 13.15<br />name: Value<br />name: Value","date_col: 2001-02-01<br />value: 13.30<br />name: Value<br />name: Value","date_col: 2001-03-01<br />value: 12.94<br />name: Value<br />name: Value","date_col: 2001-04-01<br />value: 13.29<br />name: Value<br />name: Value","date_col: 2001-05-01<br />value: 13.26<br />name: Value<br />name: Value","date_col: 2001-06-01<br />value: 13.08<br />name: Value<br />name: Value","date_col: 2001-07-01<br />value: 13.24<br />name: Value<br />name: Value","date_col: 2001-08-01<br />value: 13.31<br />name: Value<br />name: Value","date_col: 2001-09-01<br />value: 13.52<br />name: Value<br />name: Value","date_col: 2001-10-01<br />value: 13.02<br />name: Value<br />name: Value","date_col: 2001-11-01<br />value: 13.25<br />name: Value<br />name: Value","date_col: 2001-12-01<br />value: 13.12<br />name: Value<br />name: Value","date_col: 2002-01-01<br />value: 13.26<br />name: Value<br />name: Value","date_col: 2002-02-01<br />value: 13.11<br />name: Value<br />name: Value","date_col: 2002-03-01<br />value: 13.30<br />name: Value<br />name: Value","date_col: 2002-04-01<br />value: 13.06<br />name: Value<br />name: Value","date_col: 2002-05-01<br />value: 13.32<br />name: Value<br />name: Value","date_col: 2002-06-01<br />value: 13.10<br />name: Value<br />name: Value","date_col: 2002-07-01<br />value: 13.27<br />name: Value<br />name: Value","date_col: 2002-08-01<br />value: 13.64<br />name: Value<br />name: Value","date_col: 2002-09-01<br />value: 13.58<br />name: Value<br />name: Value","date_col: 2002-10-01<br />value: 13.87<br />name: Value<br />name: Value","date_col: 2002-11-01<br />value: 13.53<br />name: Value<br />name: Value","date_col: 2002-12-01<br />value: 13.41<br />name: Value<br />name: Value","date_col: 2003-01-01<br />value: 13.25<br />name: Value<br />name: Value","date_col: 2003-02-01<br />value: 13.50<br />name: Value<br />name: Value","date_col: 2003-03-01<br />value: 13.58<br />name: Value<br />name: Value","date_col: 2003-04-01<br />value: 13.51<br />name: Value<br />name: Value","date_col: 2003-05-01<br />value: 13.77<br />name: Value<br />name: Value","date_col: 2003-06-01<br />value: 13.40<br />name: Value<br />name: Value"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"Value","legendgroup":"Value","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[7670,7701,7729,7760,7790,7821,7851,7882,7913,7943,7974,8004,8035,8066,8095,8126,8156,8187,8217,8248,8279,8309,8340,8370,8401,8432,8460,8491,8521,8552,8582,8613,8644,8674,8705,8735,8766,8797,8825,8856,8886,8917,8947,8978,9009,9039,9070,9100,9131,9162,9190,9221,9251,9282,9312,9343,9374,9404,9435,9465,9496,9527,9556,9587,9617,9648,9678,9709,9740,9770,9801,9831,9862,9893,9921,9952,9982,10013,10043,10074,10105,10135,10166,10196,10227,10258,10286,10317,10347,10378,10408,10439,10470,10500,10531,10561,10592,10623,10651,10682,10712,10743,10773,10804,10835,10865,10896,10926,10957,10988,11017,11048,11078,11109,11139,11170,11201,11231,11262,11292,11323,11354,11382,11413,11443,11474,11504,11535,11566,11596,11627,11657,11688,11719,11747,11778,11808,11839,11869,11900,11931,11961,11992,12022,12053,12084,12112,12143,12173,12204],"y":[null,0.060000000000000497,0.25,-0.57000000000000028,0.58000000000000007,-0.19999999999999929,0.22999999999999865,-0.039999999999999147,-0.1899999999999995,0.029999999999999361,0.41999999999999993,0.039999999999999147,0.24000000000000021,0.33999999999999986,-0.45999999999999908,-0.17999999999999972,-0.080000000000000071,0.28999999999999915,0.5600000000000005,-0.36999999999999922,0.19999999999999929,0.53999999999999915,-0.30999999999999872,0.029999999999999361,0.51999999999999957,-0.69999999999999929,0.34999999999999964,-0.62999999999999901,0.4399999999999995,-0.38000000000000078,-0.0099999999999997868,0.22000000000000064,0.099999999999999645,-0.5,0.0099999999999997868,0.30000000000000071,-0.75999999999999979,0.51999999999999957,0.15000000000000036,0.059999999999998721,-0.099999999999999645,0.21000000000000085,-0.0099999999999997868,0.69999999999999929,-0.22000000000000064,-0.75999999999999979,0.060000000000000497,0.019999999999999574,-0.16999999999999993,-0.080000000000000071,0.0099999999999997868,0.11000000000000121,-0.39000000000000057,0.0099999999999997868,0.5,-0.019999999999999574,-0.37000000000000099,-0.12999999999999901,0.049999999999998934,0.54000000000000092,-0.46000000000000085,0.25,-0.51999999999999957,0.4399999999999995,0.02000000000000135,-0.47000000000000064,0.10999999999999943,0.060000000000000497,0.25,-0.34999999999999964,0,-0.060000000000000497,0.21000000000000085,-0.089999999999999858,0.35999999999999943,0.089999999999999858,-0.040000000000000924,-0.19999999999999929,0.4399999999999995,-0.22999999999999865,0.39999999999999858,-0.0099999999999997868,0.16999999999999993,0.080000000000000071,0.58000000000000007,-0.26999999999999957,0.78999999999999915,-0.20999999999999908,0.019999999999999574,0.30000000000000071,0.27999999999999936,-0.26999999999999957,-0.0099999999999997868,0.029999999999999361,0.16000000000000014,-0.27999999999999936,0.14999999999999858,0.26000000000000156,-0.36000000000000121,0.32000000000000028,-0.10999999999999943,0.21999999999999886,-0.64999999999999858,0,0.46999999999999886,0.16000000000000014,-0.1899999999999995,0.48000000000000043,-0.25999999999999979,0.20999999999999908,0,-0.19999999999999929,0.34999999999999964,0.37999999999999901,-0.47999999999999865,0.19999999999999929,-0.32000000000000028,0.42999999999999972,-0.5,0.12000000000000099,-0.16999999999999993,0.15000000000000036,-0.36000000000000121,0.34999999999999964,-0.029999999999999361,-0.17999999999999972,0.16000000000000014,0.070000000000000284,0.20999999999999908,-0.5,0.23000000000000043,-0.13000000000000078,0.14000000000000057,-0.15000000000000036,0.19000000000000128,-0.24000000000000021,0.25999999999999979,-0.22000000000000064,0.16999999999999993,0.37000000000000099,-0.060000000000000497,0.28999999999999915,-0.33999999999999986,-0.11999999999999922,-0.16000000000000014,0.25,0.080000000000000071,-0.070000000000000284,0.25999999999999979,-0.36999999999999922],"text":["date_col: 1991-01-01<br />value:    NA<br />name: Velocity<br />name: Velocity","date_col: 1991-02-01<br />value:  0.06<br />name: Velocity<br />name: Velocity","date_col: 1991-03-01<br />value:  0.25<br />name: Velocity<br />name: Velocity","date_col: 1991-04-01<br />value: -0.57<br />name: Velocity<br />name: Velocity","date_col: 1991-05-01<br />value:  0.58<br />name: Velocity<br />name: Velocity","date_col: 1991-06-01<br />value: -0.20<br />name: Velocity<br />name: Velocity","date_col: 1991-07-01<br />value:  0.23<br />name: Velocity<br />name: Velocity","date_col: 1991-08-01<br />value: -0.04<br />name: Velocity<br />name: Velocity","date_col: 1991-09-01<br />value: -0.19<br />name: Velocity<br />name: Velocity","date_col: 1991-10-01<br />value:  0.03<br />name: Velocity<br />name: Velocity","date_col: 1991-11-01<br />value:  0.42<br />name: Velocity<br />name: Velocity","date_col: 1991-12-01<br />value:  0.04<br />name: Velocity<br />name: Velocity","date_col: 1992-01-01<br />value:  0.24<br />name: Velocity<br />name: Velocity","date_col: 1992-02-01<br />value:  0.34<br />name: Velocity<br />name: Velocity","date_col: 1992-03-01<br />value: -0.46<br />name: Velocity<br />name: Velocity","date_col: 1992-04-01<br />value: -0.18<br />name: Velocity<br />name: Velocity","date_col: 1992-05-01<br />value: -0.08<br />name: Velocity<br />name: Velocity","date_col: 1992-06-01<br />value:  0.29<br />name: Velocity<br />name: Velocity","date_col: 1992-07-01<br />value:  0.56<br />name: Velocity<br />name: Velocity","date_col: 1992-08-01<br />value: -0.37<br />name: Velocity<br />name: Velocity","date_col: 1992-09-01<br />value:  0.20<br />name: Velocity<br />name: Velocity","date_col: 1992-10-01<br />value:  0.54<br />name: Velocity<br />name: Velocity","date_col: 1992-11-01<br />value: -0.31<br />name: Velocity<br />name: Velocity","date_col: 1992-12-01<br />value:  0.03<br />name: Velocity<br />name: Velocity","date_col: 1993-01-01<br />value:  0.52<br />name: Velocity<br />name: Velocity","date_col: 1993-02-01<br />value: -0.70<br />name: Velocity<br />name: Velocity","date_col: 1993-03-01<br />value:  0.35<br />name: Velocity<br />name: Velocity","date_col: 1993-04-01<br />value: -0.63<br />name: Velocity<br />name: Velocity","date_col: 1993-05-01<br />value:  0.44<br />name: Velocity<br />name: Velocity","date_col: 1993-06-01<br />value: -0.38<br />name: Velocity<br />name: Velocity","date_col: 1993-07-01<br />value: -0.01<br />name: Velocity<br />name: Velocity","date_col: 1993-08-01<br />value:  0.22<br />name: Velocity<br />name: Velocity","date_col: 1993-09-01<br />value:  0.10<br />name: Velocity<br />name: Velocity","date_col: 1993-10-01<br />value: -0.50<br />name: Velocity<br />name: Velocity","date_col: 1993-11-01<br />value:  0.01<br />name: Velocity<br />name: Velocity","date_col: 1993-12-01<br />value:  0.30<br />name: Velocity<br />name: Velocity","date_col: 1994-01-01<br />value: -0.76<br />name: Velocity<br />name: Velocity","date_col: 1994-02-01<br />value:  0.52<br />name: Velocity<br />name: Velocity","date_col: 1994-03-01<br />value:  0.15<br />name: Velocity<br />name: Velocity","date_col: 1994-04-01<br />value:  0.06<br />name: Velocity<br />name: Velocity","date_col: 1994-05-01<br />value: -0.10<br />name: Velocity<br />name: Velocity","date_col: 1994-06-01<br />value:  0.21<br />name: Velocity<br />name: Velocity","date_col: 1994-07-01<br />value: -0.01<br />name: Velocity<br />name: Velocity","date_col: 1994-08-01<br />value:  0.70<br />name: Velocity<br />name: Velocity","date_col: 1994-09-01<br />value: -0.22<br />name: Velocity<br />name: Velocity","date_col: 1994-10-01<br />value: -0.76<br />name: Velocity<br />name: Velocity","date_col: 1994-11-01<br />value:  0.06<br />name: Velocity<br />name: Velocity","date_col: 1994-12-01<br />value:  0.02<br />name: Velocity<br />name: Velocity","date_col: 1995-01-01<br />value: -0.17<br />name: Velocity<br />name: Velocity","date_col: 1995-02-01<br />value: -0.08<br />name: Velocity<br />name: Velocity","date_col: 1995-03-01<br />value:  0.01<br />name: Velocity<br />name: Velocity","date_col: 1995-04-01<br />value:  0.11<br />name: Velocity<br />name: Velocity","date_col: 1995-05-01<br />value: -0.39<br />name: Velocity<br />name: Velocity","date_col: 1995-06-01<br />value:  0.01<br />name: Velocity<br />name: Velocity","date_col: 1995-07-01<br />value:  0.50<br />name: Velocity<br />name: Velocity","date_col: 1995-08-01<br />value: -0.02<br />name: Velocity<br />name: Velocity","date_col: 1995-09-01<br />value: -0.37<br />name: Velocity<br />name: Velocity","date_col: 1995-10-01<br />value: -0.13<br />name: Velocity<br />name: Velocity","date_col: 1995-11-01<br />value:  0.05<br />name: Velocity<br />name: Velocity","date_col: 1995-12-01<br />value:  0.54<br />name: Velocity<br />name: Velocity","date_col: 1996-01-01<br />value: -0.46<br />name: Velocity<br />name: Velocity","date_col: 1996-02-01<br />value:  0.25<br />name: Velocity<br />name: Velocity","date_col: 1996-03-01<br />value: -0.52<br />name: Velocity<br />name: Velocity","date_col: 1996-04-01<br />value:  0.44<br />name: Velocity<br />name: Velocity","date_col: 1996-05-01<br />value:  0.02<br />name: Velocity<br />name: Velocity","date_col: 1996-06-01<br />value: -0.47<br />name: Velocity<br />name: Velocity","date_col: 1996-07-01<br />value:  0.11<br />name: Velocity<br />name: Velocity","date_col: 1996-08-01<br />value:  0.06<br />name: Velocity<br />name: Velocity","date_col: 1996-09-01<br />value:  0.25<br />name: Velocity<br />name: Velocity","date_col: 1996-10-01<br />value: -0.35<br />name: Velocity<br />name: Velocity","date_col: 1996-11-01<br />value:  0.00<br />name: Velocity<br />name: Velocity","date_col: 1996-12-01<br />value: -0.06<br />name: Velocity<br />name: Velocity","date_col: 1997-01-01<br />value:  0.21<br />name: Velocity<br />name: Velocity","date_col: 1997-02-01<br />value: -0.09<br />name: Velocity<br />name: Velocity","date_col: 1997-03-01<br />value:  0.36<br />name: Velocity<br />name: Velocity","date_col: 1997-04-01<br />value:  0.09<br />name: Velocity<br />name: Velocity","date_col: 1997-05-01<br />value: -0.04<br />name: Velocity<br />name: Velocity","date_col: 1997-06-01<br />value: -0.20<br />name: Velocity<br />name: Velocity","date_col: 1997-07-01<br />value:  0.44<br />name: Velocity<br />name: Velocity","date_col: 1997-08-01<br />value: -0.23<br />name: Velocity<br />name: Velocity","date_col: 1997-09-01<br />value:  0.40<br />name: Velocity<br />name: Velocity","date_col: 1997-10-01<br />value: -0.01<br />name: Velocity<br />name: Velocity","date_col: 1997-11-01<br />value:  0.17<br />name: Velocity<br />name: Velocity","date_col: 1997-12-01<br />value:  0.08<br />name: Velocity<br />name: Velocity","date_col: 1998-01-01<br />value:  0.58<br />name: Velocity<br />name: Velocity","date_col: 1998-02-01<br />value: -0.27<br />name: Velocity<br />name: Velocity","date_col: 1998-03-01<br />value:  0.79<br />name: Velocity<br />name: Velocity","date_col: 1998-04-01<br />value: -0.21<br />name: Velocity<br />name: Velocity","date_col: 1998-05-01<br />value:  0.02<br />name: Velocity<br />name: Velocity","date_col: 1998-06-01<br />value:  0.30<br />name: Velocity<br />name: Velocity","date_col: 1998-07-01<br />value:  0.28<br />name: Velocity<br />name: Velocity","date_col: 1998-08-01<br />value: -0.27<br />name: Velocity<br />name: Velocity","date_col: 1998-09-01<br />value: -0.01<br />name: Velocity<br />name: Velocity","date_col: 1998-10-01<br />value:  0.03<br />name: Velocity<br />name: Velocity","date_col: 1998-11-01<br />value:  0.16<br />name: Velocity<br />name: Velocity","date_col: 1998-12-01<br />value: -0.28<br />name: Velocity<br />name: Velocity","date_col: 1999-01-01<br />value:  0.15<br />name: Velocity<br />name: Velocity","date_col: 1999-02-01<br />value:  0.26<br />name: Velocity<br />name: Velocity","date_col: 1999-03-01<br />value: -0.36<br />name: Velocity<br />name: Velocity","date_col: 1999-04-01<br />value:  0.32<br />name: Velocity<br />name: Velocity","date_col: 1999-05-01<br />value: -0.11<br />name: Velocity<br />name: Velocity","date_col: 1999-06-01<br />value:  0.22<br />name: Velocity<br />name: Velocity","date_col: 1999-07-01<br />value: -0.65<br />name: Velocity<br />name: Velocity","date_col: 1999-08-01<br />value:  0.00<br />name: Velocity<br />name: Velocity","date_col: 1999-09-01<br />value:  0.47<br />name: Velocity<br />name: Velocity","date_col: 1999-10-01<br />value:  0.16<br />name: Velocity<br />name: Velocity","date_col: 1999-11-01<br />value: -0.19<br />name: Velocity<br />name: Velocity","date_col: 1999-12-01<br />value:  0.48<br />name: Velocity<br />name: Velocity","date_col: 2000-01-01<br />value: -0.26<br />name: Velocity<br />name: Velocity","date_col: 2000-02-01<br />value:  0.21<br />name: Velocity<br />name: Velocity","date_col: 2000-03-01<br />value:  0.00<br />name: Velocity<br />name: Velocity","date_col: 2000-04-01<br />value: -0.20<br />name: Velocity<br />name: Velocity","date_col: 2000-05-01<br />value:  0.35<br />name: Velocity<br />name: Velocity","date_col: 2000-06-01<br />value:  0.38<br />name: Velocity<br />name: Velocity","date_col: 2000-07-01<br />value: -0.48<br />name: Velocity<br />name: Velocity","date_col: 2000-08-01<br />value:  0.20<br />name: Velocity<br />name: Velocity","date_col: 2000-09-01<br />value: -0.32<br />name: Velocity<br />name: Velocity","date_col: 2000-10-01<br />value:  0.43<br />name: Velocity<br />name: Velocity","date_col: 2000-11-01<br />value: -0.50<br />name: Velocity<br />name: Velocity","date_col: 2000-12-01<br />value:  0.12<br />name: Velocity<br />name: Velocity","date_col: 2001-01-01<br />value: -0.17<br />name: Velocity<br />name: Velocity","date_col: 2001-02-01<br />value:  0.15<br />name: Velocity<br />name: Velocity","date_col: 2001-03-01<br />value: -0.36<br />name: Velocity<br />name: Velocity","date_col: 2001-04-01<br />value:  0.35<br />name: Velocity<br />name: Velocity","date_col: 2001-05-01<br />value: -0.03<br />name: Velocity<br />name: Velocity","date_col: 2001-06-01<br />value: -0.18<br />name: Velocity<br />name: Velocity","date_col: 2001-07-01<br />value:  0.16<br />name: Velocity<br />name: Velocity","date_col: 2001-08-01<br />value:  0.07<br />name: Velocity<br />name: Velocity","date_col: 2001-09-01<br />value:  0.21<br />name: Velocity<br />name: Velocity","date_col: 2001-10-01<br />value: -0.50<br />name: Velocity<br />name: Velocity","date_col: 2001-11-01<br />value:  0.23<br />name: Velocity<br />name: Velocity","date_col: 2001-12-01<br />value: -0.13<br />name: Velocity<br />name: Velocity","date_col: 2002-01-01<br />value:  0.14<br />name: Velocity<br />name: Velocity","date_col: 2002-02-01<br />value: -0.15<br />name: Velocity<br />name: Velocity","date_col: 2002-03-01<br />value:  0.19<br />name: Velocity<br />name: Velocity","date_col: 2002-04-01<br />value: -0.24<br />name: Velocity<br />name: Velocity","date_col: 2002-05-01<br />value:  0.26<br />name: Velocity<br />name: Velocity","date_col: 2002-06-01<br />value: -0.22<br />name: Velocity<br />name: Velocity","date_col: 2002-07-01<br />value:  0.17<br />name: Velocity<br />name: Velocity","date_col: 2002-08-01<br />value:  0.37<br />name: Velocity<br />name: Velocity","date_col: 2002-09-01<br />value: -0.06<br />name: Velocity<br />name: Velocity","date_col: 2002-10-01<br />value:  0.29<br />name: Velocity<br />name: Velocity","date_col: 2002-11-01<br />value: -0.34<br />name: Velocity<br />name: Velocity","date_col: 2002-12-01<br />value: -0.12<br />name: Velocity<br />name: Velocity","date_col: 2003-01-01<br />value: -0.16<br />name: Velocity<br />name: Velocity","date_col: 2003-02-01<br />value:  0.25<br />name: Velocity<br />name: Velocity","date_col: 2003-03-01<br />value:  0.08<br />name: Velocity<br />name: Velocity","date_col: 2003-04-01<br />value: -0.07<br />name: Velocity<br />name: Velocity","date_col: 2003-05-01<br />value:  0.26<br />name: Velocity<br />name: Velocity","date_col: 2003-06-01<br />value: -0.37<br />name: Velocity<br />name: Velocity"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,186,56,1)","dash":"solid"},"hoveron":"points","name":"Velocity","legendgroup":"Velocity","showlegend":true,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[7670,7701,7729,7760,7790,7821,7851,7882,7913,7943,7974,8004,8035,8066,8095,8126,8156,8187,8217,8248,8279,8309,8340,8370,8401,8432,8460,8491,8521,8552,8582,8613,8644,8674,8705,8735,8766,8797,8825,8856,8886,8917,8947,8978,9009,9039,9070,9100,9131,9162,9190,9221,9251,9282,9312,9343,9374,9404,9435,9465,9496,9527,9556,9587,9617,9648,9678,9709,9740,9770,9801,9831,9862,9893,9921,9952,9982,10013,10043,10074,10105,10135,10166,10196,10227,10258,10286,10317,10347,10378,10408,10439,10470,10500,10531,10561,10592,10623,10651,10682,10712,10743,10773,10804,10835,10865,10896,10926,10957,10988,11017,11048,11078,11109,11139,11170,11201,11231,11262,11292,11323,11354,11382,11413,11443,11474,11504,11535,11566,11596,11627,11657,11688,11719,11747,11778,11808,11839,11869,11900,11931,11961,11992,12022,12053,12084,12112,12143,12173,12204],"y":[null,null,0.1899999999999995,-0.82000000000000028,1.1500000000000004,-0.77999999999999936,0.42999999999999794,-0.2699999999999978,-0.15000000000000036,0.21999999999999886,0.39000000000000057,-0.38000000000000078,0.20000000000000107,0.099999999999999645,-0.79999999999999893,0.27999999999999936,0.099999999999999645,0.36999999999999922,0.27000000000000135,-0.92999999999999972,0.56999999999999851,0.33999999999999986,-0.84999999999999787,0.33999999999999808,0.49000000000000021,-1.2199999999999989,1.0499999999999989,-0.97999999999999865,1.0699999999999985,-0.82000000000000028,0.37000000000000099,0.23000000000000043,-0.12000000000000099,-0.59999999999999964,0.50999999999999979,0.29000000000000092,-1.0600000000000005,1.2799999999999994,-0.36999999999999922,-0.090000000000001634,-0.15999999999999837,0.3100000000000005,-0.22000000000000064,0.70999999999999908,-0.91999999999999993,-0.53999999999999915,0.82000000000000028,-0.040000000000000924,-0.1899999999999995,0.089999999999999858,0.089999999999999858,0.10000000000000142,-0.50000000000000178,0.40000000000000036,0.49000000000000021,-0.51999999999999957,-0.35000000000000142,0.24000000000000199,0.17999999999999794,0.49000000000000199,-1.0000000000000018,0.71000000000000085,-0.76999999999999957,0.95999999999999908,-0.41999999999999815,-0.49000000000000199,0.58000000000000007,-0.049999999999998934,0.1899999999999995,-0.59999999999999964,0.34999999999999964,-0.060000000000000497,0.27000000000000135,-0.30000000000000071,0.44999999999999929,-0.26999999999999957,-0.13000000000000078,-0.15999999999999837,0.63999999999999879,-0.66999999999999815,0.62999999999999723,-0.40999999999999837,0.17999999999999972,-0.089999999999999858,0.5,-0.84999999999999964,1.0599999999999987,-0.99999999999999822,0.22999999999999865,0.28000000000000114,-0.02000000000000135,-0.54999999999999893,0.25999999999999979,0.039999999999999147,0.13000000000000078,-0.4399999999999995,0.42999999999999794,0.11000000000000298,-0.62000000000000277,0.68000000000000149,-0.42999999999999972,0.32999999999999829,-0.86999999999999744,0.64999999999999858,0.46999999999999886,-0.30999999999999872,-0.34999999999999964,0.66999999999999993,-0.74000000000000021,0.46999999999999886,-0.20999999999999908,-0.19999999999999929,0.54999999999999893,0.029999999999999361,-0.85999999999999766,0.67999999999999794,-0.51999999999999957,0.75,-0.92999999999999972,0.62000000000000099,-0.29000000000000092,0.32000000000000028,-0.51000000000000156,0.71000000000000085,-0.37999999999999901,-0.15000000000000036,0.33999999999999986,-0.089999999999999858,0.13999999999999879,-0.70999999999999908,0.73000000000000043,-0.36000000000000121,0.27000000000000135,-0.29000000000000092,0.34000000000000163,-0.43000000000000149,0.5,-0.48000000000000043,0.39000000000000057,0.20000000000000107,-0.43000000000000149,0.34999999999999964,-0.62999999999999901,0.22000000000000064,-0.040000000000000924,0.41000000000000014,-0.16999999999999993,-0.15000000000000036,0.33000000000000007,-0.62999999999999901],"text":["date_col: 1991-01-01<br />value:    NA<br />name: Acceleration<br />name: Acceleration","date_col: 1991-02-01<br />value:    NA<br />name: Acceleration<br />name: Acceleration","date_col: 1991-03-01<br />value:  0.19<br />name: Acceleration<br />name: Acceleration","date_col: 1991-04-01<br />value: -0.82<br />name: Acceleration<br />name: Acceleration","date_col: 1991-05-01<br />value:  1.15<br />name: Acceleration<br />name: Acceleration","date_col: 1991-06-01<br />value: -0.78<br />name: Acceleration<br />name: Acceleration","date_col: 1991-07-01<br />value:  0.43<br />name: Acceleration<br />name: Acceleration","date_col: 1991-08-01<br />value: -0.27<br />name: Acceleration<br />name: Acceleration","date_col: 1991-09-01<br />value: -0.15<br />name: Acceleration<br />name: Acceleration","date_col: 1991-10-01<br />value:  0.22<br />name: Acceleration<br />name: Acceleration","date_col: 1991-11-01<br />value:  0.39<br />name: Acceleration<br />name: Acceleration","date_col: 1991-12-01<br />value: -0.38<br />name: Acceleration<br />name: Acceleration","date_col: 1992-01-01<br />value:  0.20<br />name: Acceleration<br />name: Acceleration","date_col: 1992-02-01<br />value:  0.10<br />name: Acceleration<br />name: Acceleration","date_col: 1992-03-01<br />value: -0.80<br />name: Acceleration<br />name: Acceleration","date_col: 1992-04-01<br />value:  0.28<br />name: Acceleration<br />name: Acceleration","date_col: 1992-05-01<br />value:  0.10<br />name: Acceleration<br />name: Acceleration","date_col: 1992-06-01<br />value:  0.37<br />name: Acceleration<br />name: Acceleration","date_col: 1992-07-01<br />value:  0.27<br />name: Acceleration<br />name: Acceleration","date_col: 1992-08-01<br />value: -0.93<br />name: Acceleration<br />name: Acceleration","date_col: 1992-09-01<br />value:  0.57<br />name: Acceleration<br />name: Acceleration","date_col: 1992-10-01<br />value:  0.34<br />name: Acceleration<br />name: Acceleration","date_col: 1992-11-01<br />value: -0.85<br />name: Acceleration<br />name: Acceleration","date_col: 1992-12-01<br />value:  0.34<br />name: Acceleration<br />name: Acceleration","date_col: 1993-01-01<br />value:  0.49<br />name: Acceleration<br />name: Acceleration","date_col: 1993-02-01<br />value: -1.22<br />name: Acceleration<br />name: Acceleration","date_col: 1993-03-01<br />value:  1.05<br />name: Acceleration<br />name: Acceleration","date_col: 1993-04-01<br />value: -0.98<br />name: Acceleration<br />name: Acceleration","date_col: 1993-05-01<br />value:  1.07<br />name: Acceleration<br />name: Acceleration","date_col: 1993-06-01<br />value: -0.82<br />name: Acceleration<br />name: Acceleration","date_col: 1993-07-01<br />value:  0.37<br />name: Acceleration<br />name: Acceleration","date_col: 1993-08-01<br />value:  0.23<br />name: Acceleration<br />name: Acceleration","date_col: 1993-09-01<br />value: -0.12<br />name: Acceleration<br />name: Acceleration","date_col: 1993-10-01<br />value: -0.60<br />name: Acceleration<br />name: Acceleration","date_col: 1993-11-01<br />value:  0.51<br />name: Acceleration<br />name: Acceleration","date_col: 1993-12-01<br />value:  0.29<br />name: Acceleration<br />name: Acceleration","date_col: 1994-01-01<br />value: -1.06<br />name: Acceleration<br />name: Acceleration","date_col: 1994-02-01<br />value:  1.28<br />name: Acceleration<br />name: Acceleration","date_col: 1994-03-01<br />value: -0.37<br />name: Acceleration<br />name: Acceleration","date_col: 1994-04-01<br />value: -0.09<br />name: Acceleration<br />name: Acceleration","date_col: 1994-05-01<br />value: -0.16<br />name: Acceleration<br />name: Acceleration","date_col: 1994-06-01<br />value:  0.31<br />name: Acceleration<br />name: Acceleration","date_col: 1994-07-01<br />value: -0.22<br />name: Acceleration<br />name: Acceleration","date_col: 1994-08-01<br />value:  0.71<br />name: Acceleration<br />name: Acceleration","date_col: 1994-09-01<br />value: -0.92<br />name: Acceleration<br />name: Acceleration","date_col: 1994-10-01<br />value: -0.54<br />name: Acceleration<br />name: Acceleration","date_col: 1994-11-01<br />value:  0.82<br />name: Acceleration<br />name: Acceleration","date_col: 1994-12-01<br />value: -0.04<br />name: Acceleration<br />name: Acceleration","date_col: 1995-01-01<br />value: -0.19<br />name: Acceleration<br />name: Acceleration","date_col: 1995-02-01<br />value:  0.09<br />name: Acceleration<br />name: Acceleration","date_col: 1995-03-01<br />value:  0.09<br />name: Acceleration<br />name: Acceleration","date_col: 1995-04-01<br />value:  0.10<br />name: Acceleration<br />name: Acceleration","date_col: 1995-05-01<br />value: -0.50<br />name: Acceleration<br />name: Acceleration","date_col: 1995-06-01<br />value:  0.40<br />name: Acceleration<br />name: Acceleration","date_col: 1995-07-01<br />value:  0.49<br />name: Acceleration<br />name: Acceleration","date_col: 1995-08-01<br />value: -0.52<br />name: Acceleration<br />name: Acceleration","date_col: 1995-09-01<br />value: -0.35<br />name: Acceleration<br />name: Acceleration","date_col: 1995-10-01<br />value:  0.24<br />name: Acceleration<br />name: Acceleration","date_col: 1995-11-01<br />value:  0.18<br />name: Acceleration<br />name: Acceleration","date_col: 1995-12-01<br />value:  0.49<br />name: Acceleration<br />name: Acceleration","date_col: 1996-01-01<br />value: -1.00<br />name: Acceleration<br />name: Acceleration","date_col: 1996-02-01<br />value:  0.71<br />name: Acceleration<br />name: Acceleration","date_col: 1996-03-01<br />value: -0.77<br />name: Acceleration<br />name: Acceleration","date_col: 1996-04-01<br />value:  0.96<br />name: Acceleration<br />name: Acceleration","date_col: 1996-05-01<br />value: -0.42<br />name: Acceleration<br />name: Acceleration","date_col: 1996-06-01<br />value: -0.49<br />name: Acceleration<br />name: Acceleration","date_col: 1996-07-01<br />value:  0.58<br />name: Acceleration<br />name: Acceleration","date_col: 1996-08-01<br />value: -0.05<br />name: Acceleration<br />name: Acceleration","date_col: 1996-09-01<br />value:  0.19<br />name: Acceleration<br />name: Acceleration","date_col: 1996-10-01<br />value: -0.60<br />name: Acceleration<br />name: Acceleration","date_col: 1996-11-01<br />value:  0.35<br />name: Acceleration<br />name: Acceleration","date_col: 1996-12-01<br />value: -0.06<br />name: Acceleration<br />name: Acceleration","date_col: 1997-01-01<br />value:  0.27<br />name: Acceleration<br />name: Acceleration","date_col: 1997-02-01<br />value: -0.30<br />name: Acceleration<br />name: Acceleration","date_col: 1997-03-01<br />value:  0.45<br />name: Acceleration<br />name: Acceleration","date_col: 1997-04-01<br />value: -0.27<br />name: Acceleration<br />name: Acceleration","date_col: 1997-05-01<br />value: -0.13<br />name: Acceleration<br />name: Acceleration","date_col: 1997-06-01<br />value: -0.16<br />name: Acceleration<br />name: Acceleration","date_col: 1997-07-01<br />value:  0.64<br />name: Acceleration<br />name: Acceleration","date_col: 1997-08-01<br />value: -0.67<br />name: Acceleration<br />name: Acceleration","date_col: 1997-09-01<br />value:  0.63<br />name: Acceleration<br />name: Acceleration","date_col: 1997-10-01<br />value: -0.41<br />name: Acceleration<br />name: Acceleration","date_col: 1997-11-01<br />value:  0.18<br />name: Acceleration<br />name: Acceleration","date_col: 1997-12-01<br />value: -0.09<br />name: Acceleration<br />name: Acceleration","date_col: 1998-01-01<br />value:  0.50<br />name: Acceleration<br />name: Acceleration","date_col: 1998-02-01<br />value: -0.85<br />name: Acceleration<br />name: Acceleration","date_col: 1998-03-01<br />value:  1.06<br />name: Acceleration<br />name: Acceleration","date_col: 1998-04-01<br />value: -1.00<br />name: Acceleration<br />name: Acceleration","date_col: 1998-05-01<br />value:  0.23<br />name: Acceleration<br />name: Acceleration","date_col: 1998-06-01<br />value:  0.28<br />name: Acceleration<br />name: Acceleration","date_col: 1998-07-01<br />value: -0.02<br />name: Acceleration<br />name: Acceleration","date_col: 1998-08-01<br />value: -0.55<br />name: Acceleration<br />name: Acceleration","date_col: 1998-09-01<br />value:  0.26<br />name: Acceleration<br />name: Acceleration","date_col: 1998-10-01<br />value:  0.04<br />name: Acceleration<br />name: Acceleration","date_col: 1998-11-01<br />value:  0.13<br />name: Acceleration<br />name: Acceleration","date_col: 1998-12-01<br />value: -0.44<br />name: Acceleration<br />name: Acceleration","date_col: 1999-01-01<br />value:  0.43<br />name: Acceleration<br />name: Acceleration","date_col: 1999-02-01<br />value:  0.11<br />name: Acceleration<br />name: Acceleration","date_col: 1999-03-01<br />value: -0.62<br />name: Acceleration<br />name: Acceleration","date_col: 1999-04-01<br />value:  0.68<br />name: Acceleration<br />name: Acceleration","date_col: 1999-05-01<br />value: -0.43<br />name: Acceleration<br />name: Acceleration","date_col: 1999-06-01<br />value:  0.33<br />name: Acceleration<br />name: Acceleration","date_col: 1999-07-01<br />value: -0.87<br />name: Acceleration<br />name: Acceleration","date_col: 1999-08-01<br />value:  0.65<br />name: Acceleration<br />name: Acceleration","date_col: 1999-09-01<br />value:  0.47<br />name: Acceleration<br />name: Acceleration","date_col: 1999-10-01<br />value: -0.31<br />name: Acceleration<br />name: Acceleration","date_col: 1999-11-01<br />value: -0.35<br />name: Acceleration<br />name: Acceleration","date_col: 1999-12-01<br />value:  0.67<br />name: Acceleration<br />name: Acceleration","date_col: 2000-01-01<br />value: -0.74<br />name: Acceleration<br />name: Acceleration","date_col: 2000-02-01<br />value:  0.47<br />name: Acceleration<br />name: Acceleration","date_col: 2000-03-01<br />value: -0.21<br />name: Acceleration<br />name: Acceleration","date_col: 2000-04-01<br />value: -0.20<br />name: Acceleration<br />name: Acceleration","date_col: 2000-05-01<br />value:  0.55<br />name: Acceleration<br />name: Acceleration","date_col: 2000-06-01<br />value:  0.03<br />name: Acceleration<br />name: Acceleration","date_col: 2000-07-01<br />value: -0.86<br />name: Acceleration<br />name: Acceleration","date_col: 2000-08-01<br />value:  0.68<br />name: Acceleration<br />name: Acceleration","date_col: 2000-09-01<br />value: -0.52<br />name: Acceleration<br />name: Acceleration","date_col: 2000-10-01<br />value:  0.75<br />name: Acceleration<br />name: Acceleration","date_col: 2000-11-01<br />value: -0.93<br />name: Acceleration<br />name: Acceleration","date_col: 2000-12-01<br />value:  0.62<br />name: Acceleration<br />name: Acceleration","date_col: 2001-01-01<br />value: -0.29<br />name: Acceleration<br />name: Acceleration","date_col: 2001-02-01<br />value:  0.32<br />name: Acceleration<br />name: Acceleration","date_col: 2001-03-01<br />value: -0.51<br />name: Acceleration<br />name: Acceleration","date_col: 2001-04-01<br />value:  0.71<br />name: Acceleration<br />name: Acceleration","date_col: 2001-05-01<br />value: -0.38<br />name: Acceleration<br />name: Acceleration","date_col: 2001-06-01<br />value: -0.15<br />name: Acceleration<br />name: Acceleration","date_col: 2001-07-01<br />value:  0.34<br />name: Acceleration<br />name: Acceleration","date_col: 2001-08-01<br />value: -0.09<br />name: Acceleration<br />name: Acceleration","date_col: 2001-09-01<br />value:  0.14<br />name: Acceleration<br />name: Acceleration","date_col: 2001-10-01<br />value: -0.71<br />name: Acceleration<br />name: Acceleration","date_col: 2001-11-01<br />value:  0.73<br />name: Acceleration<br />name: Acceleration","date_col: 2001-12-01<br />value: -0.36<br />name: Acceleration<br />name: Acceleration","date_col: 2002-01-01<br />value:  0.27<br />name: Acceleration<br />name: Acceleration","date_col: 2002-02-01<br />value: -0.29<br />name: Acceleration<br />name: Acceleration","date_col: 2002-03-01<br />value:  0.34<br />name: Acceleration<br />name: Acceleration","date_col: 2002-04-01<br />value: -0.43<br />name: Acceleration<br />name: Acceleration","date_col: 2002-05-01<br />value:  0.50<br />name: Acceleration<br />name: Acceleration","date_col: 2002-06-01<br />value: -0.48<br />name: Acceleration<br />name: Acceleration","date_col: 2002-07-01<br />value:  0.39<br />name: Acceleration<br />name: Acceleration","date_col: 2002-08-01<br />value:  0.20<br />name: Acceleration<br />name: Acceleration","date_col: 2002-09-01<br />value: -0.43<br />name: Acceleration<br />name: Acceleration","date_col: 2002-10-01<br />value:  0.35<br />name: Acceleration<br />name: Acceleration","date_col: 2002-11-01<br />value: -0.63<br />name: Acceleration<br />name: Acceleration","date_col: 2002-12-01<br />value:  0.22<br />name: Acceleration<br />name: Acceleration","date_col: 2003-01-01<br />value: -0.04<br />name: Acceleration<br />name: Acceleration","date_col: 2003-02-01<br />value:  0.41<br />name: Acceleration<br />name: Acceleration","date_col: 2003-03-01<br />value: -0.17<br />name: Acceleration<br />name: Acceleration","date_col: 2003-04-01<br />value: -0.15<br />name: Acceleration<br />name: Acceleration","date_col: 2003-05-01<br />value:  0.33<br />name: Acceleration<br />name: Acceleration","date_col: 2003-06-01<br />value: -0.63<br />name: Acceleration<br />name: Acceleration"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(97,156,255,1)","dash":"solid"},"hoveron":"points","name":"Acceleration","legendgroup":"Acceleration","showlegend":true,"xaxis":"x3","yaxis":"y3","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":37.917808219178085,"r":7.3059360730593621,"b":40.182648401826491,"l":22.648401826484022},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[7443.3000000000002,12430.700000000001],"tickmode":"array","ticktext":["1995","2000"],"tickvals":[9131,10957],"categoryorder":"array","categoryarray":["1995","2000"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":"","hoverformat":".2f"},"annotations":[{"text":"Date","x":0.5,"y":0,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"top","annotationType":"axis","yshift":-21.917808219178088},{"text":"Value","x":0.5,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Velocity","x":0.5,"y":0.64269406392694073,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Acceleration","x":0.5,"y":0.30936073059360736,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"}],"yaxis":{"domain":[0.69063926940639275,1],"automargin":true,"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0.69063926940639275,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":23.37899543378996,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0.35730593607305938,"y1":0.64269406392694073},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":23.37899543378996,"yanchor":0.64269406392694073,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":0.30936073059360736},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":23.37899543378996,"yanchor":0.30936073059360736,"ysizemode":"pixel"}],"xaxis2":{"type":"linear","autorange":false,"range":[7443.3000000000002,12430.700000000001],"tickmode":"array","ticktext":["1995","2000"],"tickvals":[9131,10957],"categoryorder":"array","categoryarray":["1995","2000"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y2","title":"","hoverformat":".2f"},"yaxis2":{"type":"linear","autorange":false,"range":[-0.83749999999999969,0.86749999999999905],"tickmode":"array","ticktext":["-0.5","0.0","0.5"],"tickvals":[-0.5,0,0.5],"categoryorder":"array","categoryarray":["-0.5","0.0","0.5"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.35730593607305938,0.64269406392694073],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x2","title":"","hoverformat":".2f"},"xaxis3":{"type":"linear","autorange":false,"range":[7443.3000000000002,12430.700000000001],"tickmode":"array","ticktext":["1995","2000"],"tickvals":[9131,10957],"categoryorder":"array","categoryarray":["1995","2000"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"yaxis3":{"type":"linear","autorange":false,"range":[-1.3449999999999989,1.4049999999999994],"tickmode":"array","ticktext":["-1.0","-0.5","0.0","0.5","1.0"],"tickvals":[-1,-0.50000000000000011,0,0.5,1],"categoryorder":"array","categoryarray":["-1.0","-0.5","0.0","0.5","1.0"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.30936073059360736],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x3","title":"","hoverformat":".2f"},"showlegend":true,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498},"title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"446855691136":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"446855691136","visdat":{"446855691136":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Now we have created the augmented data that gets the first order difference of the time series velocity and then the second order difference which gets us the acceleration. The function then creates a <code>ggplot2</code> plot and a <code>plotly</code> plot of the data. Let’s move on to see the growth rate of this data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the growth rate of the data</span></span>
<span id="cb7-2">df_growth_augment_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_growth_rate_augment</span>(</span>
<span id="cb7-3">  df,</span>
<span id="cb7-4">  value</span>
<span id="cb7-5">)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df_growth_augment_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  date_col   value growth_rate_value
  &lt;date&gt;     &lt;dbl&gt;             &lt;dbl&gt;
1 1991-01-01 10.0             NA    
2 1991-02-01 10.1              0.599
3 1991-03-01 10.3              2.48 
4 1991-04-01  9.75            -5.52 
5 1991-05-01 10.3              5.95 
6 1991-06-01 10.1             -1.94 </code></pre>
</div>
</div>
<p>Let’s now view the data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">plt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_growth_augment_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>date_col) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date_col, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb9-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>,</span>
<span id="cb9-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>,</span>
<span id="cb9-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Growth Rate of Time Series Data"</span>,</span>
<span id="cb9-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Variable"</span></span>
<span id="cb9-12">  )</span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(plt)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-20/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotly</span>(plt)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-f9e545cc7ebab1ea46c8" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-f9e545cc7ebab1ea46c8">{"x":{"data":[{"x":[7670,7701,7729,7760,7790,7821,7851,7882,7913,7943,7974,8004,8035,8066,8095,8126,8156,8187,8217,8248,8279,8309,8340,8370,8401,8432,8460,8491,8521,8552,8582,8613,8644,8674,8705,8735,8766,8797,8825,8856,8886,8917,8947,8978,9009,9039,9070,9100,9131,9162,9190,9221,9251,9282,9312,9343,9374,9404,9435,9465,9496,9527,9556,9587,9617,9648,9678,9709,9740,9770,9801,9831,9862,9893,9921,9952,9982,10013,10043,10074,10105,10135,10166,10196,10227,10258,10286,10317,10347,10378,10408,10439,10470,10500,10531,10561,10592,10623,10651,10682,10712,10743,10773,10804,10835,10865,10896,10926,10957,10988,11017,11048,11078,11109,11139,11170,11201,11231,11262,11292,11323,11354,11382,11413,11443,11474,11504,11535,11566,11596,11627,11657,11688,11719,11747,11778,11808,11839,11869,11900,11931,11961,11992,12022,12053,12084,12112,12143,12173,12204],"y":[null,0.59940059940060131,2.482621648460781,-5.5232558139534866,5.9487179487179409,-1.9361084220716251,2.2704837117472731,-0.38610038610037423,-1.8410852713178216,0.29615004935834577,4.1338582677165281,0.3780718336483746,2.2598870056497189,3.130755064456725,-4.1071428571428541,-1.6759776536312776,-0.7575757575757569,2.767175572519065,5.1996285979572843,-3.2656663724624835,1.8248175182481674,4.8387096774193505,-2.6495726495726402,0.26338893766462146,4.5534150612959623,-5.8626465661641536,3.1138790035587061,-5.4357204486626287,4.014598540145986,-3.3333333333333437,-0.090744101633388752,1.9981834695731227,0.8904719501335645,-4.4130626654898535,0.092336103416434945,2.7675276752767486,-6.822262118491917,5.0096339113680166,1.3761467889908285,0.54298642533936459,-0.90009000900089786,1.9073569482288999,-0.089126559714791664,6.2444246208742227,-1.8471872376154552,-6.5012831479897333,0.54894784995425105,0.18198362147405778,-1.5440508628519534,-0.73800738007380184,0.092936802973975219,1.0213556174559102,-3.5845588235294157,0.095328884652046142,4.7619047619047672,-0.18181818181818299,-3.3697632058287907,-1.2252591894439169,0.47709923664120968,5.1282051282051322,-4.1553748870822087,2.3562676720075393,-4.7882136279926328,4.2553191489361764,0.18552875695734272,-4.3518518518518619,1.0648596321394033,0.57471264367816577,2.3809523809523725,-3.2558139534883734,0,-0.57692307692308598,2.0309477756286443,-0.85308056872037685,3.4416826003824008,0.83179297597042456,-0.36663611365720383,-1.8399264029438811,4.1237113402061709,-2.0702070207020529,3.6764705882352811,-0.088652482269502286,1.5084294587400127,0.69930069930070893,5.0347222222222321,-2.2314049586776852,6.6779374471682029,-1.6640253565768592,0.16116035455278066,2.4135156878519748,2.1995286724273422,-2.0753266717909225,-0.078492935635787742,0.23566378633148588,1.2539184952978122,-2.1671826625386914,1.1867088607594889,2.0328381548084584,-2.7586206896551779,2.5216706067769934,-0.84550345887778322,1.7054263565891459,-4.9542682926829169,0,3.7690457097032892,1.2364760432766575,-1.4503816793893121,3.7180480247869907,-1.9417475728155331,1.5993907083015957,0,-1.4992503748125885,2.6636225266362334,2.8169014084507005,-3.4607065609228438,1.4936519790888614,-2.3546725533480473,3.240391861341374,-3.6496350364963459,0.90909090909092605,-1.276276276276278,1.1406844106463865,-2.7067669172932463,2.7047913446677008,-0.22573363431150906,-1.3574660633484115,1.2232415902140747,0.5287009063444037,1.5777610818933141,-3.6982248520710082,1.7665130568356391,-0.98113207547170234,1.0670731707317138,-1.1312217194570207,1.449275362318847,-1.8045112781954864,1.9908116385911168,-1.6516516516516533,1.2977099236641143,2.7882441597588681,-0.43988269794721369,2.1354933726067671,-2.4513338139870222,-0.88691796008868451,-1.1931394481730084,1.8867924528301883,0.59259259259258901,-0.51546391752577136,1.924500370096216,-2.6870007262164042],"text":["date_col: 1991-01-01<br />value:          NA<br />name: growth_rate_value","date_col: 1991-02-01<br />value:  0.59940060<br />name: growth_rate_value","date_col: 1991-03-01<br />value:  2.48262165<br />name: growth_rate_value","date_col: 1991-04-01<br />value: -5.52325581<br />name: growth_rate_value","date_col: 1991-05-01<br />value:  5.94871795<br />name: growth_rate_value","date_col: 1991-06-01<br />value: -1.93610842<br />name: growth_rate_value","date_col: 1991-07-01<br />value:  2.27048371<br />name: growth_rate_value","date_col: 1991-08-01<br />value: -0.38610039<br />name: growth_rate_value","date_col: 1991-09-01<br />value: -1.84108527<br />name: growth_rate_value","date_col: 1991-10-01<br />value:  0.29615005<br />name: growth_rate_value","date_col: 1991-11-01<br />value:  4.13385827<br />name: growth_rate_value","date_col: 1991-12-01<br />value:  0.37807183<br />name: growth_rate_value","date_col: 1992-01-01<br />value:  2.25988701<br />name: growth_rate_value","date_col: 1992-02-01<br />value:  3.13075506<br />name: growth_rate_value","date_col: 1992-03-01<br />value: -4.10714286<br />name: growth_rate_value","date_col: 1992-04-01<br />value: -1.67597765<br />name: growth_rate_value","date_col: 1992-05-01<br />value: -0.75757576<br />name: growth_rate_value","date_col: 1992-06-01<br />value:  2.76717557<br />name: growth_rate_value","date_col: 1992-07-01<br />value:  5.19962860<br />name: growth_rate_value","date_col: 1992-08-01<br />value: -3.26566637<br />name: growth_rate_value","date_col: 1992-09-01<br />value:  1.82481752<br />name: growth_rate_value","date_col: 1992-10-01<br />value:  4.83870968<br />name: growth_rate_value","date_col: 1992-11-01<br />value: -2.64957265<br />name: growth_rate_value","date_col: 1992-12-01<br />value:  0.26338894<br />name: growth_rate_value","date_col: 1993-01-01<br />value:  4.55341506<br />name: growth_rate_value","date_col: 1993-02-01<br />value: -5.86264657<br />name: growth_rate_value","date_col: 1993-03-01<br />value:  3.11387900<br />name: growth_rate_value","date_col: 1993-04-01<br />value: -5.43572045<br />name: growth_rate_value","date_col: 1993-05-01<br />value:  4.01459854<br />name: growth_rate_value","date_col: 1993-06-01<br />value: -3.33333333<br />name: growth_rate_value","date_col: 1993-07-01<br />value: -0.09074410<br />name: growth_rate_value","date_col: 1993-08-01<br />value:  1.99818347<br />name: growth_rate_value","date_col: 1993-09-01<br />value:  0.89047195<br />name: growth_rate_value","date_col: 1993-10-01<br />value: -4.41306267<br />name: growth_rate_value","date_col: 1993-11-01<br />value:  0.09233610<br />name: growth_rate_value","date_col: 1993-12-01<br />value:  2.76752768<br />name: growth_rate_value","date_col: 1994-01-01<br />value: -6.82226212<br />name: growth_rate_value","date_col: 1994-02-01<br />value:  5.00963391<br />name: growth_rate_value","date_col: 1994-03-01<br />value:  1.37614679<br />name: growth_rate_value","date_col: 1994-04-01<br />value:  0.54298643<br />name: growth_rate_value","date_col: 1994-05-01<br />value: -0.90009001<br />name: growth_rate_value","date_col: 1994-06-01<br />value:  1.90735695<br />name: growth_rate_value","date_col: 1994-07-01<br />value: -0.08912656<br />name: growth_rate_value","date_col: 1994-08-01<br />value:  6.24442462<br />name: growth_rate_value","date_col: 1994-09-01<br />value: -1.84718724<br />name: growth_rate_value","date_col: 1994-10-01<br />value: -6.50128315<br />name: growth_rate_value","date_col: 1994-11-01<br />value:  0.54894785<br />name: growth_rate_value","date_col: 1994-12-01<br />value:  0.18198362<br />name: growth_rate_value","date_col: 1995-01-01<br />value: -1.54405086<br />name: growth_rate_value","date_col: 1995-02-01<br />value: -0.73800738<br />name: growth_rate_value","date_col: 1995-03-01<br />value:  0.09293680<br />name: growth_rate_value","date_col: 1995-04-01<br />value:  1.02135562<br />name: growth_rate_value","date_col: 1995-05-01<br />value: -3.58455882<br />name: growth_rate_value","date_col: 1995-06-01<br />value:  0.09532888<br />name: growth_rate_value","date_col: 1995-07-01<br />value:  4.76190476<br />name: growth_rate_value","date_col: 1995-08-01<br />value: -0.18181818<br />name: growth_rate_value","date_col: 1995-09-01<br />value: -3.36976321<br />name: growth_rate_value","date_col: 1995-10-01<br />value: -1.22525919<br />name: growth_rate_value","date_col: 1995-11-01<br />value:  0.47709924<br />name: growth_rate_value","date_col: 1995-12-01<br />value:  5.12820513<br />name: growth_rate_value","date_col: 1996-01-01<br />value: -4.15537489<br />name: growth_rate_value","date_col: 1996-02-01<br />value:  2.35626767<br />name: growth_rate_value","date_col: 1996-03-01<br />value: -4.78821363<br />name: growth_rate_value","date_col: 1996-04-01<br />value:  4.25531915<br />name: growth_rate_value","date_col: 1996-05-01<br />value:  0.18552876<br />name: growth_rate_value","date_col: 1996-06-01<br />value: -4.35185185<br />name: growth_rate_value","date_col: 1996-07-01<br />value:  1.06485963<br />name: growth_rate_value","date_col: 1996-08-01<br />value:  0.57471264<br />name: growth_rate_value","date_col: 1996-09-01<br />value:  2.38095238<br />name: growth_rate_value","date_col: 1996-10-01<br />value: -3.25581395<br />name: growth_rate_value","date_col: 1996-11-01<br />value:  0.00000000<br />name: growth_rate_value","date_col: 1996-12-01<br />value: -0.57692308<br />name: growth_rate_value","date_col: 1997-01-01<br />value:  2.03094778<br />name: growth_rate_value","date_col: 1997-02-01<br />value: -0.85308057<br />name: growth_rate_value","date_col: 1997-03-01<br />value:  3.44168260<br />name: growth_rate_value","date_col: 1997-04-01<br />value:  0.83179298<br />name: growth_rate_value","date_col: 1997-05-01<br />value: -0.36663611<br />name: growth_rate_value","date_col: 1997-06-01<br />value: -1.83992640<br />name: growth_rate_value","date_col: 1997-07-01<br />value:  4.12371134<br />name: growth_rate_value","date_col: 1997-08-01<br />value: -2.07020702<br />name: growth_rate_value","date_col: 1997-09-01<br />value:  3.67647059<br />name: growth_rate_value","date_col: 1997-10-01<br />value: -0.08865248<br />name: growth_rate_value","date_col: 1997-11-01<br />value:  1.50842946<br />name: growth_rate_value","date_col: 1997-12-01<br />value:  0.69930070<br />name: growth_rate_value","date_col: 1998-01-01<br />value:  5.03472222<br />name: growth_rate_value","date_col: 1998-02-01<br />value: -2.23140496<br />name: growth_rate_value","date_col: 1998-03-01<br />value:  6.67793745<br />name: growth_rate_value","date_col: 1998-04-01<br />value: -1.66402536<br />name: growth_rate_value","date_col: 1998-05-01<br />value:  0.16116035<br />name: growth_rate_value","date_col: 1998-06-01<br />value:  2.41351569<br />name: growth_rate_value","date_col: 1998-07-01<br />value:  2.19952867<br />name: growth_rate_value","date_col: 1998-08-01<br />value: -2.07532667<br />name: growth_rate_value","date_col: 1998-09-01<br />value: -0.07849294<br />name: growth_rate_value","date_col: 1998-10-01<br />value:  0.23566379<br />name: growth_rate_value","date_col: 1998-11-01<br />value:  1.25391850<br />name: growth_rate_value","date_col: 1998-12-01<br />value: -2.16718266<br />name: growth_rate_value","date_col: 1999-01-01<br />value:  1.18670886<br />name: growth_rate_value","date_col: 1999-02-01<br />value:  2.03283815<br />name: growth_rate_value","date_col: 1999-03-01<br />value: -2.75862069<br />name: growth_rate_value","date_col: 1999-04-01<br />value:  2.52167061<br />name: growth_rate_value","date_col: 1999-05-01<br />value: -0.84550346<br />name: growth_rate_value","date_col: 1999-06-01<br />value:  1.70542636<br />name: growth_rate_value","date_col: 1999-07-01<br />value: -4.95426829<br />name: growth_rate_value","date_col: 1999-08-01<br />value:  0.00000000<br />name: growth_rate_value","date_col: 1999-09-01<br />value:  3.76904571<br />name: growth_rate_value","date_col: 1999-10-01<br />value:  1.23647604<br />name: growth_rate_value","date_col: 1999-11-01<br />value: -1.45038168<br />name: growth_rate_value","date_col: 1999-12-01<br />value:  3.71804802<br />name: growth_rate_value","date_col: 2000-01-01<br />value: -1.94174757<br />name: growth_rate_value","date_col: 2000-02-01<br />value:  1.59939071<br />name: growth_rate_value","date_col: 2000-03-01<br />value:  0.00000000<br />name: growth_rate_value","date_col: 2000-04-01<br />value: -1.49925037<br />name: growth_rate_value","date_col: 2000-05-01<br />value:  2.66362253<br />name: growth_rate_value","date_col: 2000-06-01<br />value:  2.81690141<br />name: growth_rate_value","date_col: 2000-07-01<br />value: -3.46070656<br />name: growth_rate_value","date_col: 2000-08-01<br />value:  1.49365198<br />name: growth_rate_value","date_col: 2000-09-01<br />value: -2.35467255<br />name: growth_rate_value","date_col: 2000-10-01<br />value:  3.24039186<br />name: growth_rate_value","date_col: 2000-11-01<br />value: -3.64963504<br />name: growth_rate_value","date_col: 2000-12-01<br />value:  0.90909091<br />name: growth_rate_value","date_col: 2001-01-01<br />value: -1.27627628<br />name: growth_rate_value","date_col: 2001-02-01<br />value:  1.14068441<br />name: growth_rate_value","date_col: 2001-03-01<br />value: -2.70676692<br />name: growth_rate_value","date_col: 2001-04-01<br />value:  2.70479134<br />name: growth_rate_value","date_col: 2001-05-01<br />value: -0.22573363<br />name: growth_rate_value","date_col: 2001-06-01<br />value: -1.35746606<br />name: growth_rate_value","date_col: 2001-07-01<br />value:  1.22324159<br />name: growth_rate_value","date_col: 2001-08-01<br />value:  0.52870091<br />name: growth_rate_value","date_col: 2001-09-01<br />value:  1.57776108<br />name: growth_rate_value","date_col: 2001-10-01<br />value: -3.69822485<br />name: growth_rate_value","date_col: 2001-11-01<br />value:  1.76651306<br />name: growth_rate_value","date_col: 2001-12-01<br />value: -0.98113208<br />name: growth_rate_value","date_col: 2002-01-01<br />value:  1.06707317<br />name: growth_rate_value","date_col: 2002-02-01<br />value: -1.13122172<br />name: growth_rate_value","date_col: 2002-03-01<br />value:  1.44927536<br />name: growth_rate_value","date_col: 2002-04-01<br />value: -1.80451128<br />name: growth_rate_value","date_col: 2002-05-01<br />value:  1.99081164<br />name: growth_rate_value","date_col: 2002-06-01<br />value: -1.65165165<br />name: growth_rate_value","date_col: 2002-07-01<br />value:  1.29770992<br />name: growth_rate_value","date_col: 2002-08-01<br />value:  2.78824416<br />name: growth_rate_value","date_col: 2002-09-01<br />value: -0.43988270<br />name: growth_rate_value","date_col: 2002-10-01<br />value:  2.13549337<br />name: growth_rate_value","date_col: 2002-11-01<br />value: -2.45133381<br />name: growth_rate_value","date_col: 2002-12-01<br />value: -0.88691796<br />name: growth_rate_value","date_col: 2003-01-01<br />value: -1.19313945<br />name: growth_rate_value","date_col: 2003-02-01<br />value:  1.88679245<br />name: growth_rate_value","date_col: 2003-03-01<br />value:  0.59259259<br />name: growth_rate_value","date_col: 2003-04-01<br />value: -0.51546392<br />name: growth_rate_value","date_col: 2003-05-01<br />value:  1.92450037<br />name: growth_rate_value","date_col: 2003-06-01<br />value: -2.68700073<br />name: growth_rate_value"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"growth_rate_value","legendgroup":"growth_rate_value","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[7670,7701,7729,7760,7790,7821,7851,7882,7913,7943,7974,8004,8035,8066,8095,8126,8156,8187,8217,8248,8279,8309,8340,8370,8401,8432,8460,8491,8521,8552,8582,8613,8644,8674,8705,8735,8766,8797,8825,8856,8886,8917,8947,8978,9009,9039,9070,9100,9131,9162,9190,9221,9251,9282,9312,9343,9374,9404,9435,9465,9496,9527,9556,9587,9617,9648,9678,9709,9740,9770,9801,9831,9862,9893,9921,9952,9982,10013,10043,10074,10105,10135,10166,10196,10227,10258,10286,10317,10347,10378,10408,10439,10470,10500,10531,10561,10592,10623,10651,10682,10712,10743,10773,10804,10835,10865,10896,10926,10957,10988,11017,11048,11078,11109,11139,11170,11201,11231,11262,11292,11323,11354,11382,11413,11443,11474,11504,11535,11566,11596,11627,11657,11688,11719,11747,11778,11808,11839,11869,11900,11931,11961,11992,12022,12053,12084,12112,12143,12173,12204],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"text":["date_col: 1991-01-01<br />value: 10.01000000<br />name: value","date_col: 1991-02-01<br />value: 10.07000000<br />name: value","date_col: 1991-03-01<br />value: 10.32000000<br />name: value","date_col: 1991-04-01<br />value:  9.75000000<br />name: value","date_col: 1991-05-01<br />value: 10.33000000<br />name: value","date_col: 1991-06-01<br />value: 10.13000000<br />name: value","date_col: 1991-07-01<br />value: 10.36000000<br />name: value","date_col: 1991-08-01<br />value: 10.32000000<br />name: value","date_col: 1991-09-01<br />value: 10.13000000<br />name: value","date_col: 1991-10-01<br />value: 10.16000000<br />name: value","date_col: 1991-11-01<br />value: 10.58000000<br />name: value","date_col: 1991-12-01<br />value: 10.62000000<br />name: value","date_col: 1992-01-01<br />value: 10.86000000<br />name: value","date_col: 1992-02-01<br />value: 11.20000000<br />name: value","date_col: 1992-03-01<br />value: 10.74000000<br />name: value","date_col: 1992-04-01<br />value: 10.56000000<br />name: value","date_col: 1992-05-01<br />value: 10.48000000<br />name: value","date_col: 1992-06-01<br />value: 10.77000000<br />name: value","date_col: 1992-07-01<br />value: 11.33000000<br />name: value","date_col: 1992-08-01<br />value: 10.96000000<br />name: value","date_col: 1992-09-01<br />value: 11.16000000<br />name: value","date_col: 1992-10-01<br />value: 11.70000000<br />name: value","date_col: 1992-11-01<br />value: 11.39000000<br />name: value","date_col: 1992-12-01<br />value: 11.42000000<br />name: value","date_col: 1993-01-01<br />value: 11.94000000<br />name: value","date_col: 1993-02-01<br />value: 11.24000000<br />name: value","date_col: 1993-03-01<br />value: 11.59000000<br />name: value","date_col: 1993-04-01<br />value: 10.96000000<br />name: value","date_col: 1993-05-01<br />value: 11.40000000<br />name: value","date_col: 1993-06-01<br />value: 11.02000000<br />name: value","date_col: 1993-07-01<br />value: 11.01000000<br />name: value","date_col: 1993-08-01<br />value: 11.23000000<br />name: value","date_col: 1993-09-01<br />value: 11.33000000<br />name: value","date_col: 1993-10-01<br />value: 10.83000000<br />name: value","date_col: 1993-11-01<br />value: 10.84000000<br />name: value","date_col: 1993-12-01<br />value: 11.14000000<br />name: value","date_col: 1994-01-01<br />value: 10.38000000<br />name: value","date_col: 1994-02-01<br />value: 10.90000000<br />name: value","date_col: 1994-03-01<br />value: 11.05000000<br />name: value","date_col: 1994-04-01<br />value: 11.11000000<br />name: value","date_col: 1994-05-01<br />value: 11.01000000<br />name: value","date_col: 1994-06-01<br />value: 11.22000000<br />name: value","date_col: 1994-07-01<br />value: 11.21000000<br />name: value","date_col: 1994-08-01<br />value: 11.91000000<br />name: value","date_col: 1994-09-01<br />value: 11.69000000<br />name: value","date_col: 1994-10-01<br />value: 10.93000000<br />name: value","date_col: 1994-11-01<br />value: 10.99000000<br />name: value","date_col: 1994-12-01<br />value: 11.01000000<br />name: value","date_col: 1995-01-01<br />value: 10.84000000<br />name: value","date_col: 1995-02-01<br />value: 10.76000000<br />name: value","date_col: 1995-03-01<br />value: 10.77000000<br />name: value","date_col: 1995-04-01<br />value: 10.88000000<br />name: value","date_col: 1995-05-01<br />value: 10.49000000<br />name: value","date_col: 1995-06-01<br />value: 10.50000000<br />name: value","date_col: 1995-07-01<br />value: 11.00000000<br />name: value","date_col: 1995-08-01<br />value: 10.98000000<br />name: value","date_col: 1995-09-01<br />value: 10.61000000<br />name: value","date_col: 1995-10-01<br />value: 10.48000000<br />name: value","date_col: 1995-11-01<br />value: 10.53000000<br />name: value","date_col: 1995-12-01<br />value: 11.07000000<br />name: value","date_col: 1996-01-01<br />value: 10.61000000<br />name: value","date_col: 1996-02-01<br />value: 10.86000000<br />name: value","date_col: 1996-03-01<br />value: 10.34000000<br />name: value","date_col: 1996-04-01<br />value: 10.78000000<br />name: value","date_col: 1996-05-01<br />value: 10.80000000<br />name: value","date_col: 1996-06-01<br />value: 10.33000000<br />name: value","date_col: 1996-07-01<br />value: 10.44000000<br />name: value","date_col: 1996-08-01<br />value: 10.50000000<br />name: value","date_col: 1996-09-01<br />value: 10.75000000<br />name: value","date_col: 1996-10-01<br />value: 10.40000000<br />name: value","date_col: 1996-11-01<br />value: 10.40000000<br />name: value","date_col: 1996-12-01<br />value: 10.34000000<br />name: value","date_col: 1997-01-01<br />value: 10.55000000<br />name: value","date_col: 1997-02-01<br />value: 10.46000000<br />name: value","date_col: 1997-03-01<br />value: 10.82000000<br />name: value","date_col: 1997-04-01<br />value: 10.91000000<br />name: value","date_col: 1997-05-01<br />value: 10.87000000<br />name: value","date_col: 1997-06-01<br />value: 10.67000000<br />name: value","date_col: 1997-07-01<br />value: 11.11000000<br />name: value","date_col: 1997-08-01<br />value: 10.88000000<br />name: value","date_col: 1997-09-01<br />value: 11.28000000<br />name: value","date_col: 1997-10-01<br />value: 11.27000000<br />name: value","date_col: 1997-11-01<br />value: 11.44000000<br />name: value","date_col: 1997-12-01<br />value: 11.52000000<br />name: value","date_col: 1998-01-01<br />value: 12.10000000<br />name: value","date_col: 1998-02-01<br />value: 11.83000000<br />name: value","date_col: 1998-03-01<br />value: 12.62000000<br />name: value","date_col: 1998-04-01<br />value: 12.41000000<br />name: value","date_col: 1998-05-01<br />value: 12.43000000<br />name: value","date_col: 1998-06-01<br />value: 12.73000000<br />name: value","date_col: 1998-07-01<br />value: 13.01000000<br />name: value","date_col: 1998-08-01<br />value: 12.74000000<br />name: value","date_col: 1998-09-01<br />value: 12.73000000<br />name: value","date_col: 1998-10-01<br />value: 12.76000000<br />name: value","date_col: 1998-11-01<br />value: 12.92000000<br />name: value","date_col: 1998-12-01<br />value: 12.64000000<br />name: value","date_col: 1999-01-01<br />value: 12.79000000<br />name: value","date_col: 1999-02-01<br />value: 13.05000000<br />name: value","date_col: 1999-03-01<br />value: 12.69000000<br />name: value","date_col: 1999-04-01<br />value: 13.01000000<br />name: value","date_col: 1999-05-01<br />value: 12.90000000<br />name: value","date_col: 1999-06-01<br />value: 13.12000000<br />name: value","date_col: 1999-07-01<br />value: 12.47000000<br />name: value","date_col: 1999-08-01<br />value: 12.47000000<br />name: value","date_col: 1999-09-01<br />value: 12.94000000<br />name: value","date_col: 1999-10-01<br />value: 13.10000000<br />name: value","date_col: 1999-11-01<br />value: 12.91000000<br />name: value","date_col: 1999-12-01<br />value: 13.39000000<br />name: value","date_col: 2000-01-01<br />value: 13.13000000<br />name: value","date_col: 2000-02-01<br />value: 13.34000000<br />name: value","date_col: 2000-03-01<br />value: 13.34000000<br />name: value","date_col: 2000-04-01<br />value: 13.14000000<br />name: value","date_col: 2000-05-01<br />value: 13.49000000<br />name: value","date_col: 2000-06-01<br />value: 13.87000000<br />name: value","date_col: 2000-07-01<br />value: 13.39000000<br />name: value","date_col: 2000-08-01<br />value: 13.59000000<br />name: value","date_col: 2000-09-01<br />value: 13.27000000<br />name: value","date_col: 2000-10-01<br />value: 13.70000000<br />name: value","date_col: 2000-11-01<br />value: 13.20000000<br />name: value","date_col: 2000-12-01<br />value: 13.32000000<br />name: value","date_col: 2001-01-01<br />value: 13.15000000<br />name: value","date_col: 2001-02-01<br />value: 13.30000000<br />name: value","date_col: 2001-03-01<br />value: 12.94000000<br />name: value","date_col: 2001-04-01<br />value: 13.29000000<br />name: value","date_col: 2001-05-01<br />value: 13.26000000<br />name: value","date_col: 2001-06-01<br />value: 13.08000000<br />name: value","date_col: 2001-07-01<br />value: 13.24000000<br />name: value","date_col: 2001-08-01<br />value: 13.31000000<br />name: value","date_col: 2001-09-01<br />value: 13.52000000<br />name: value","date_col: 2001-10-01<br />value: 13.02000000<br />name: value","date_col: 2001-11-01<br />value: 13.25000000<br />name: value","date_col: 2001-12-01<br />value: 13.12000000<br />name: value","date_col: 2002-01-01<br />value: 13.26000000<br />name: value","date_col: 2002-02-01<br />value: 13.11000000<br />name: value","date_col: 2002-03-01<br />value: 13.30000000<br />name: value","date_col: 2002-04-01<br />value: 13.06000000<br />name: value","date_col: 2002-05-01<br />value: 13.32000000<br />name: value","date_col: 2002-06-01<br />value: 13.10000000<br />name: value","date_col: 2002-07-01<br />value: 13.27000000<br />name: value","date_col: 2002-08-01<br />value: 13.64000000<br />name: value","date_col: 2002-09-01<br />value: 13.58000000<br />name: value","date_col: 2002-10-01<br />value: 13.87000000<br />name: value","date_col: 2002-11-01<br />value: 13.53000000<br />name: value","date_col: 2002-12-01<br />value: 13.41000000<br />name: value","date_col: 2003-01-01<br />value: 13.25000000<br />name: value","date_col: 2003-02-01<br />value: 13.50000000<br />name: value","date_col: 2003-03-01<br />value: 13.58000000<br />name: value","date_col: 2003-04-01<br />value: 13.51000000<br />name: value","date_col: 2003-05-01<br />value: 13.77000000<br />name: value","date_col: 2003-06-01<br />value: 13.40000000<br />name: value"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,191,196,1)","dash":"solid"},"hoveron":"points","name":"value","legendgroup":"value","showlegend":true,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":55.452054794520549,"r":7.3059360730593621,"b":40.182648401826491,"l":37.260273972602747},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"title":{"text":"Growth Rate of Time Series Data","font":{"color":"rgba(0,0,0,1)","family":"","size":17.534246575342465},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[7443.3000000000002,12430.700000000001],"tickmode":"array","ticktext":["1995","2000"],"tickvals":[9131,10957],"categoryorder":"array","categoryarray":["1995","2000"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":"","hoverformat":".2f"},"annotations":[{"text":"Date","x":0.5,"y":0,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"top","annotationType":"axis","yshift":-21.917808219178088},{"text":"Value","x":0,"y":0.5,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xref":"paper","yref":"paper","textangle":-90,"xanchor":"right","yanchor":"center","annotationType":"axis","xshift":-21.917808219178081},{"text":"growth_rate_value","x":0.5,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"value","x":0.5,"y":0.47602739726027399,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"}],"yaxis":{"domain":[0.52397260273972601,1],"automargin":true,"type":"linear","autorange":false,"range":[-7.4972720967749229,7.3529474254512088],"tickmode":"array","ticktext":["-4","0","4"],"tickvals":[-4,-8.8817841970012523e-16,4],"categoryorder":"array","categoryarray":["-4","0","4"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0.52397260273972601,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":23.37899543378996,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":0.47602739726027399},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":23.37899543378996,"yanchor":0.47602739726027399,"ysizemode":"pixel"}],"xaxis2":{"type":"linear","autorange":false,"range":[7443.3000000000002,12430.700000000001],"tickmode":"array","ticktext":["1995","2000"],"tickvals":[9131,10957],"categoryorder":"array","categoryarray":["1995","2000"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y2","title":"","hoverformat":".2f"},"yaxis2":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.47602739726027399],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x2","title":"","hoverformat":".2f"},"showlegend":true,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498},"title":{"text":"Variable","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"4468661b6cff":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"4468661b6cff","visdat":{"4468661b6cff":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="stationary" class="level1">
<h1>Stationary?</h1>
<p>Is the data stationary? Meaning does the joint probability of the distribution change when shifted in time? Let’s find out.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_adf_test</span>(df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$test_stat
[1] -1.723664

$p_value
[1] 0.6915227</code></pre>
</div>
</div>
<p>The p-value from this test is 0.692. This means that we can accept the null hypothesis that the data is non-stationary. We can, however, make the data stationary by using a built in function in this package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">auto_stationary_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auto_stationarize</span>(df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The time series is not stationary. Attempting to make it stationary...</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">stationary_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> auto_stationary_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stationary_ts"</span>]]</span>
<span id="cb15-2">ndiffs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> auto_stationary_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ndiffs"</span>]]</span>
<span id="cb15-3">trans_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> auto_stationary_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trans_type"</span>]]</span>
<span id="cb15-4">test_stat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> auto_stationary_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adf_stats"</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_stat"</span>]]</span>
<span id="cb15-5">p_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> auto_stationary_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adf_stats"</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p_value"</span>]]</span></code></pre></div>
</div>
<p>The data is now stationary after 1 differencing. The transformation type used was diff. The test statistic was -4.839 and the p-value was 0.01.</p>
<p>Let’s now add the stationary data to the df_growth_augment_tbl and plot it. First in order to do this we are going to have to pad the data since it is shorter than the original data. We will simply add an NA to the vector then attach.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">stationary_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, ndiffs), stationary_vec)</span>
<span id="cb16-2">df_growth_augment_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_growth_augment_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stationary =</span> stationary_vec)</span>
<span id="cb16-4"></span>
<span id="cb16-5">df_growth_augment_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>date_col) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date_col, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb16-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>,</span>
<span id="cb16-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>,</span>
<span id="cb16-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Growth Rate/Value and Stationary Data of Time Series"</span>,</span>
<span id="cb16-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Variable"</span></span>
<span id="cb16-16">  )</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-06-20/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>It’s close to the growth rate as it is the first order difference of the data.</p>
<p>Now, lets see if there is any lags that are present in the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">output <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_lag_correlation</span>(df_growth_augment_tbl,</span>
<span id="cb17-2">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_col =</span> date_col,</span>
<span id="cb17-3">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_col =</span> value,</span>
<span id="cb17-4">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.lags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>))</span>
<span id="cb17-5"></span>
<span id="cb17-6">output[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plots"</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotly_lag_plot"</span>]]</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-2c4440ba29754a47daec" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-2c4440ba29754a47daec">{"x":{"data":[{"x":[10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77],"text":["value: 10.07<br />lagged_value: 10.01<br />lag: 1","value: 10.32<br />lagged_value: 10.07<br />lag: 1","value:  9.75<br />lagged_value: 10.32<br />lag: 1","value: 10.33<br />lagged_value:  9.75<br />lag: 1","value: 10.13<br />lagged_value: 10.33<br />lag: 1","value: 10.36<br />lagged_value: 10.13<br />lag: 1","value: 10.32<br />lagged_value: 10.36<br />lag: 1","value: 10.13<br />lagged_value: 10.32<br />lag: 1","value: 10.16<br />lagged_value: 10.13<br />lag: 1","value: 10.58<br />lagged_value: 10.16<br />lag: 1","value: 10.62<br />lagged_value: 10.58<br />lag: 1","value: 10.86<br />lagged_value: 10.62<br />lag: 1","value: 11.20<br />lagged_value: 10.86<br />lag: 1","value: 10.74<br />lagged_value: 11.20<br />lag: 1","value: 10.56<br />lagged_value: 10.74<br />lag: 1","value: 10.48<br />lagged_value: 10.56<br />lag: 1","value: 10.77<br />lagged_value: 10.48<br />lag: 1","value: 11.33<br />lagged_value: 10.77<br />lag: 1","value: 10.96<br />lagged_value: 11.33<br />lag: 1","value: 11.16<br />lagged_value: 10.96<br />lag: 1","value: 11.70<br />lagged_value: 11.16<br />lag: 1","value: 11.39<br />lagged_value: 11.70<br />lag: 1","value: 11.42<br />lagged_value: 11.39<br />lag: 1","value: 11.94<br />lagged_value: 11.42<br />lag: 1","value: 11.24<br />lagged_value: 11.94<br />lag: 1","value: 11.59<br />lagged_value: 11.24<br />lag: 1","value: 10.96<br />lagged_value: 11.59<br />lag: 1","value: 11.40<br />lagged_value: 10.96<br />lag: 1","value: 11.02<br />lagged_value: 11.40<br />lag: 1","value: 11.01<br />lagged_value: 11.02<br />lag: 1","value: 11.23<br />lagged_value: 11.01<br />lag: 1","value: 11.33<br />lagged_value: 11.23<br />lag: 1","value: 10.83<br />lagged_value: 11.33<br />lag: 1","value: 10.84<br />lagged_value: 10.83<br />lag: 1","value: 11.14<br />lagged_value: 10.84<br />lag: 1","value: 10.38<br />lagged_value: 11.14<br />lag: 1","value: 10.90<br />lagged_value: 10.38<br />lag: 1","value: 11.05<br />lagged_value: 10.90<br />lag: 1","value: 11.11<br />lagged_value: 11.05<br />lag: 1","value: 11.01<br />lagged_value: 11.11<br />lag: 1","value: 11.22<br />lagged_value: 11.01<br />lag: 1","value: 11.21<br />lagged_value: 11.22<br />lag: 1","value: 11.91<br />lagged_value: 11.21<br />lag: 1","value: 11.69<br />lagged_value: 11.91<br />lag: 1","value: 10.93<br />lagged_value: 11.69<br />lag: 1","value: 10.99<br />lagged_value: 10.93<br />lag: 1","value: 11.01<br />lagged_value: 10.99<br />lag: 1","value: 10.84<br />lagged_value: 11.01<br />lag: 1","value: 10.76<br />lagged_value: 10.84<br />lag: 1","value: 10.77<br />lagged_value: 10.76<br />lag: 1","value: 10.88<br />lagged_value: 10.77<br />lag: 1","value: 10.49<br />lagged_value: 10.88<br />lag: 1","value: 10.50<br />lagged_value: 10.49<br />lag: 1","value: 11.00<br />lagged_value: 10.50<br />lag: 1","value: 10.98<br />lagged_value: 11.00<br />lag: 1","value: 10.61<br />lagged_value: 10.98<br />lag: 1","value: 10.48<br />lagged_value: 10.61<br />lag: 1","value: 10.53<br />lagged_value: 10.48<br />lag: 1","value: 11.07<br />lagged_value: 10.53<br />lag: 1","value: 10.61<br />lagged_value: 11.07<br />lag: 1","value: 10.86<br />lagged_value: 10.61<br />lag: 1","value: 10.34<br />lagged_value: 10.86<br />lag: 1","value: 10.78<br />lagged_value: 10.34<br />lag: 1","value: 10.80<br />lagged_value: 10.78<br />lag: 1","value: 10.33<br />lagged_value: 10.80<br />lag: 1","value: 10.44<br />lagged_value: 10.33<br />lag: 1","value: 10.50<br />lagged_value: 10.44<br />lag: 1","value: 10.75<br />lagged_value: 10.50<br />lag: 1","value: 10.40<br />lagged_value: 10.75<br />lag: 1","value: 10.40<br />lagged_value: 10.40<br />lag: 1","value: 10.34<br />lagged_value: 10.40<br />lag: 1","value: 10.55<br />lagged_value: 10.34<br />lag: 1","value: 10.46<br />lagged_value: 10.55<br />lag: 1","value: 10.82<br />lagged_value: 10.46<br />lag: 1","value: 10.91<br />lagged_value: 10.82<br />lag: 1","value: 10.87<br />lagged_value: 10.91<br />lag: 1","value: 10.67<br />lagged_value: 10.87<br />lag: 1","value: 11.11<br />lagged_value: 10.67<br />lag: 1","value: 10.88<br />lagged_value: 11.11<br />lag: 1","value: 11.28<br />lagged_value: 10.88<br />lag: 1","value: 11.27<br />lagged_value: 11.28<br />lag: 1","value: 11.44<br />lagged_value: 11.27<br />lag: 1","value: 11.52<br />lagged_value: 11.44<br />lag: 1","value: 12.10<br />lagged_value: 11.52<br />lag: 1","value: 11.83<br />lagged_value: 12.10<br />lag: 1","value: 12.62<br />lagged_value: 11.83<br />lag: 1","value: 12.41<br />lagged_value: 12.62<br />lag: 1","value: 12.43<br />lagged_value: 12.41<br />lag: 1","value: 12.73<br />lagged_value: 12.43<br />lag: 1","value: 13.01<br />lagged_value: 12.73<br />lag: 1","value: 12.74<br />lagged_value: 13.01<br />lag: 1","value: 12.73<br />lagged_value: 12.74<br />lag: 1","value: 12.76<br />lagged_value: 12.73<br />lag: 1","value: 12.92<br />lagged_value: 12.76<br />lag: 1","value: 12.64<br />lagged_value: 12.92<br />lag: 1","value: 12.79<br />lagged_value: 12.64<br />lag: 1","value: 13.05<br />lagged_value: 12.79<br />lag: 1","value: 12.69<br />lagged_value: 13.05<br />lag: 1","value: 13.01<br />lagged_value: 12.69<br />lag: 1","value: 12.90<br />lagged_value: 13.01<br />lag: 1","value: 13.12<br />lagged_value: 12.90<br />lag: 1","value: 12.47<br />lagged_value: 13.12<br />lag: 1","value: 12.47<br />lagged_value: 12.47<br />lag: 1","value: 12.94<br />lagged_value: 12.47<br />lag: 1","value: 13.10<br />lagged_value: 12.94<br />lag: 1","value: 12.91<br />lagged_value: 13.10<br />lag: 1","value: 13.39<br />lagged_value: 12.91<br />lag: 1","value: 13.13<br />lagged_value: 13.39<br />lag: 1","value: 13.34<br />lagged_value: 13.13<br />lag: 1","value: 13.34<br />lagged_value: 13.34<br />lag: 1","value: 13.14<br />lagged_value: 13.34<br />lag: 1","value: 13.49<br />lagged_value: 13.14<br />lag: 1","value: 13.87<br />lagged_value: 13.49<br />lag: 1","value: 13.39<br />lagged_value: 13.87<br />lag: 1","value: 13.59<br />lagged_value: 13.39<br />lag: 1","value: 13.27<br />lagged_value: 13.59<br />lag: 1","value: 13.70<br />lagged_value: 13.27<br />lag: 1","value: 13.20<br />lagged_value: 13.70<br />lag: 1","value: 13.32<br />lagged_value: 13.20<br />lag: 1","value: 13.15<br />lagged_value: 13.32<br />lag: 1","value: 13.30<br />lagged_value: 13.15<br />lag: 1","value: 12.94<br />lagged_value: 13.30<br />lag: 1","value: 13.29<br />lagged_value: 12.94<br />lag: 1","value: 13.26<br />lagged_value: 13.29<br />lag: 1","value: 13.08<br />lagged_value: 13.26<br />lag: 1","value: 13.24<br />lagged_value: 13.08<br />lag: 1","value: 13.31<br />lagged_value: 13.24<br />lag: 1","value: 13.52<br />lagged_value: 13.31<br />lag: 1","value: 13.02<br />lagged_value: 13.52<br />lag: 1","value: 13.25<br />lagged_value: 13.02<br />lag: 1","value: 13.12<br />lagged_value: 13.25<br />lag: 1","value: 13.26<br />lagged_value: 13.12<br />lag: 1","value: 13.11<br />lagged_value: 13.26<br />lag: 1","value: 13.30<br />lagged_value: 13.11<br />lag: 1","value: 13.06<br />lagged_value: 13.30<br />lag: 1","value: 13.32<br />lagged_value: 13.06<br />lag: 1","value: 13.10<br />lagged_value: 13.32<br />lag: 1","value: 13.27<br />lagged_value: 13.10<br />lag: 1","value: 13.64<br />lagged_value: 13.27<br />lag: 1","value: 13.58<br />lagged_value: 13.64<br />lag: 1","value: 13.87<br />lagged_value: 13.58<br />lag: 1","value: 13.53<br />lagged_value: 13.87<br />lag: 1","value: 13.41<br />lagged_value: 13.53<br />lag: 1","value: 13.25<br />lagged_value: 13.41<br />lag: 1","value: 13.50<br />lagged_value: 13.25<br />lag: 1","value: 13.58<br />lagged_value: 13.50<br />lag: 1","value: 13.51<br />lagged_value: 13.58<br />lag: 1","value: 13.77<br />lagged_value: 13.51<br />lag: 1","value: 13.40<br />lagged_value: 13.77<br />lag: 1"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"1","legendgroup":"1","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51],"text":["value: 10.32<br />lagged_value: 10.01<br />lag: 2","value:  9.75<br />lagged_value: 10.07<br />lag: 2","value: 10.33<br />lagged_value: 10.32<br />lag: 2","value: 10.13<br />lagged_value:  9.75<br />lag: 2","value: 10.36<br />lagged_value: 10.33<br />lag: 2","value: 10.32<br />lagged_value: 10.13<br />lag: 2","value: 10.13<br />lagged_value: 10.36<br />lag: 2","value: 10.16<br />lagged_value: 10.32<br />lag: 2","value: 10.58<br />lagged_value: 10.13<br />lag: 2","value: 10.62<br />lagged_value: 10.16<br />lag: 2","value: 10.86<br />lagged_value: 10.58<br />lag: 2","value: 11.20<br />lagged_value: 10.62<br />lag: 2","value: 10.74<br />lagged_value: 10.86<br />lag: 2","value: 10.56<br />lagged_value: 11.20<br />lag: 2","value: 10.48<br />lagged_value: 10.74<br />lag: 2","value: 10.77<br />lagged_value: 10.56<br />lag: 2","value: 11.33<br />lagged_value: 10.48<br />lag: 2","value: 10.96<br />lagged_value: 10.77<br />lag: 2","value: 11.16<br />lagged_value: 11.33<br />lag: 2","value: 11.70<br />lagged_value: 10.96<br />lag: 2","value: 11.39<br />lagged_value: 11.16<br />lag: 2","value: 11.42<br />lagged_value: 11.70<br />lag: 2","value: 11.94<br />lagged_value: 11.39<br />lag: 2","value: 11.24<br />lagged_value: 11.42<br />lag: 2","value: 11.59<br />lagged_value: 11.94<br />lag: 2","value: 10.96<br />lagged_value: 11.24<br />lag: 2","value: 11.40<br />lagged_value: 11.59<br />lag: 2","value: 11.02<br />lagged_value: 10.96<br />lag: 2","value: 11.01<br />lagged_value: 11.40<br />lag: 2","value: 11.23<br />lagged_value: 11.02<br />lag: 2","value: 11.33<br />lagged_value: 11.01<br />lag: 2","value: 10.83<br />lagged_value: 11.23<br />lag: 2","value: 10.84<br />lagged_value: 11.33<br />lag: 2","value: 11.14<br />lagged_value: 10.83<br />lag: 2","value: 10.38<br />lagged_value: 10.84<br />lag: 2","value: 10.90<br />lagged_value: 11.14<br />lag: 2","value: 11.05<br />lagged_value: 10.38<br />lag: 2","value: 11.11<br />lagged_value: 10.90<br />lag: 2","value: 11.01<br />lagged_value: 11.05<br />lag: 2","value: 11.22<br />lagged_value: 11.11<br />lag: 2","value: 11.21<br />lagged_value: 11.01<br />lag: 2","value: 11.91<br />lagged_value: 11.22<br />lag: 2","value: 11.69<br />lagged_value: 11.21<br />lag: 2","value: 10.93<br />lagged_value: 11.91<br />lag: 2","value: 10.99<br />lagged_value: 11.69<br />lag: 2","value: 11.01<br />lagged_value: 10.93<br />lag: 2","value: 10.84<br />lagged_value: 10.99<br />lag: 2","value: 10.76<br />lagged_value: 11.01<br />lag: 2","value: 10.77<br />lagged_value: 10.84<br />lag: 2","value: 10.88<br />lagged_value: 10.76<br />lag: 2","value: 10.49<br />lagged_value: 10.77<br />lag: 2","value: 10.50<br />lagged_value: 10.88<br />lag: 2","value: 11.00<br />lagged_value: 10.49<br />lag: 2","value: 10.98<br />lagged_value: 10.50<br />lag: 2","value: 10.61<br />lagged_value: 11.00<br />lag: 2","value: 10.48<br />lagged_value: 10.98<br />lag: 2","value: 10.53<br />lagged_value: 10.61<br />lag: 2","value: 11.07<br />lagged_value: 10.48<br />lag: 2","value: 10.61<br />lagged_value: 10.53<br />lag: 2","value: 10.86<br />lagged_value: 11.07<br />lag: 2","value: 10.34<br />lagged_value: 10.61<br />lag: 2","value: 10.78<br />lagged_value: 10.86<br />lag: 2","value: 10.80<br />lagged_value: 10.34<br />lag: 2","value: 10.33<br />lagged_value: 10.78<br />lag: 2","value: 10.44<br />lagged_value: 10.80<br />lag: 2","value: 10.50<br />lagged_value: 10.33<br />lag: 2","value: 10.75<br />lagged_value: 10.44<br />lag: 2","value: 10.40<br />lagged_value: 10.50<br />lag: 2","value: 10.40<br />lagged_value: 10.75<br />lag: 2","value: 10.34<br />lagged_value: 10.40<br />lag: 2","value: 10.55<br />lagged_value: 10.40<br />lag: 2","value: 10.46<br />lagged_value: 10.34<br />lag: 2","value: 10.82<br />lagged_value: 10.55<br />lag: 2","value: 10.91<br />lagged_value: 10.46<br />lag: 2","value: 10.87<br />lagged_value: 10.82<br />lag: 2","value: 10.67<br />lagged_value: 10.91<br />lag: 2","value: 11.11<br />lagged_value: 10.87<br />lag: 2","value: 10.88<br />lagged_value: 10.67<br />lag: 2","value: 11.28<br />lagged_value: 11.11<br />lag: 2","value: 11.27<br />lagged_value: 10.88<br />lag: 2","value: 11.44<br />lagged_value: 11.28<br />lag: 2","value: 11.52<br />lagged_value: 11.27<br />lag: 2","value: 12.10<br />lagged_value: 11.44<br />lag: 2","value: 11.83<br />lagged_value: 11.52<br />lag: 2","value: 12.62<br />lagged_value: 12.10<br />lag: 2","value: 12.41<br />lagged_value: 11.83<br />lag: 2","value: 12.43<br />lagged_value: 12.62<br />lag: 2","value: 12.73<br />lagged_value: 12.41<br />lag: 2","value: 13.01<br />lagged_value: 12.43<br />lag: 2","value: 12.74<br />lagged_value: 12.73<br />lag: 2","value: 12.73<br />lagged_value: 13.01<br />lag: 2","value: 12.76<br />lagged_value: 12.74<br />lag: 2","value: 12.92<br />lagged_value: 12.73<br />lag: 2","value: 12.64<br />lagged_value: 12.76<br />lag: 2","value: 12.79<br />lagged_value: 12.92<br />lag: 2","value: 13.05<br />lagged_value: 12.64<br />lag: 2","value: 12.69<br />lagged_value: 12.79<br />lag: 2","value: 13.01<br />lagged_value: 13.05<br />lag: 2","value: 12.90<br />lagged_value: 12.69<br />lag: 2","value: 13.12<br />lagged_value: 13.01<br />lag: 2","value: 12.47<br />lagged_value: 12.90<br />lag: 2","value: 12.47<br />lagged_value: 13.12<br />lag: 2","value: 12.94<br />lagged_value: 12.47<br />lag: 2","value: 13.10<br />lagged_value: 12.47<br />lag: 2","value: 12.91<br />lagged_value: 12.94<br />lag: 2","value: 13.39<br />lagged_value: 13.10<br />lag: 2","value: 13.13<br />lagged_value: 12.91<br />lag: 2","value: 13.34<br />lagged_value: 13.39<br />lag: 2","value: 13.34<br />lagged_value: 13.13<br />lag: 2","value: 13.14<br />lagged_value: 13.34<br />lag: 2","value: 13.49<br />lagged_value: 13.34<br />lag: 2","value: 13.87<br />lagged_value: 13.14<br />lag: 2","value: 13.39<br />lagged_value: 13.49<br />lag: 2","value: 13.59<br />lagged_value: 13.87<br />lag: 2","value: 13.27<br />lagged_value: 13.39<br />lag: 2","value: 13.70<br />lagged_value: 13.59<br />lag: 2","value: 13.20<br />lagged_value: 13.27<br />lag: 2","value: 13.32<br />lagged_value: 13.70<br />lag: 2","value: 13.15<br />lagged_value: 13.20<br />lag: 2","value: 13.30<br />lagged_value: 13.32<br />lag: 2","value: 12.94<br />lagged_value: 13.15<br />lag: 2","value: 13.29<br />lagged_value: 13.30<br />lag: 2","value: 13.26<br />lagged_value: 12.94<br />lag: 2","value: 13.08<br />lagged_value: 13.29<br />lag: 2","value: 13.24<br />lagged_value: 13.26<br />lag: 2","value: 13.31<br />lagged_value: 13.08<br />lag: 2","value: 13.52<br />lagged_value: 13.24<br />lag: 2","value: 13.02<br />lagged_value: 13.31<br />lag: 2","value: 13.25<br />lagged_value: 13.52<br />lag: 2","value: 13.12<br />lagged_value: 13.02<br />lag: 2","value: 13.26<br />lagged_value: 13.25<br />lag: 2","value: 13.11<br />lagged_value: 13.12<br />lag: 2","value: 13.30<br />lagged_value: 13.26<br />lag: 2","value: 13.06<br />lagged_value: 13.11<br />lag: 2","value: 13.32<br />lagged_value: 13.30<br />lag: 2","value: 13.10<br />lagged_value: 13.06<br />lag: 2","value: 13.27<br />lagged_value: 13.32<br />lag: 2","value: 13.64<br />lagged_value: 13.10<br />lag: 2","value: 13.58<br />lagged_value: 13.27<br />lag: 2","value: 13.87<br />lagged_value: 13.64<br />lag: 2","value: 13.53<br />lagged_value: 13.58<br />lag: 2","value: 13.41<br />lagged_value: 13.87<br />lag: 2","value: 13.25<br />lagged_value: 13.53<br />lag: 2","value: 13.50<br />lagged_value: 13.41<br />lag: 2","value: 13.58<br />lagged_value: 13.25<br />lag: 2","value: 13.51<br />lagged_value: 13.50<br />lag: 2","value: 13.77<br />lagged_value: 13.58<br />lag: 2","value: 13.40<br />lagged_value: 13.51<br />lag: 2"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(196,154,0,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(196,154,0,1)"}},"hoveron":"points","name":"2","legendgroup":"2","showlegend":true,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58],"text":["value:  9.75<br />lagged_value: 10.01<br />lag: 3","value: 10.33<br />lagged_value: 10.07<br />lag: 3","value: 10.13<br />lagged_value: 10.32<br />lag: 3","value: 10.36<br />lagged_value:  9.75<br />lag: 3","value: 10.32<br />lagged_value: 10.33<br />lag: 3","value: 10.13<br />lagged_value: 10.13<br />lag: 3","value: 10.16<br />lagged_value: 10.36<br />lag: 3","value: 10.58<br />lagged_value: 10.32<br />lag: 3","value: 10.62<br />lagged_value: 10.13<br />lag: 3","value: 10.86<br />lagged_value: 10.16<br />lag: 3","value: 11.20<br />lagged_value: 10.58<br />lag: 3","value: 10.74<br />lagged_value: 10.62<br />lag: 3","value: 10.56<br />lagged_value: 10.86<br />lag: 3","value: 10.48<br />lagged_value: 11.20<br />lag: 3","value: 10.77<br />lagged_value: 10.74<br />lag: 3","value: 11.33<br />lagged_value: 10.56<br />lag: 3","value: 10.96<br />lagged_value: 10.48<br />lag: 3","value: 11.16<br />lagged_value: 10.77<br />lag: 3","value: 11.70<br />lagged_value: 11.33<br />lag: 3","value: 11.39<br />lagged_value: 10.96<br />lag: 3","value: 11.42<br />lagged_value: 11.16<br />lag: 3","value: 11.94<br />lagged_value: 11.70<br />lag: 3","value: 11.24<br />lagged_value: 11.39<br />lag: 3","value: 11.59<br />lagged_value: 11.42<br />lag: 3","value: 10.96<br />lagged_value: 11.94<br />lag: 3","value: 11.40<br />lagged_value: 11.24<br />lag: 3","value: 11.02<br />lagged_value: 11.59<br />lag: 3","value: 11.01<br />lagged_value: 10.96<br />lag: 3","value: 11.23<br />lagged_value: 11.40<br />lag: 3","value: 11.33<br />lagged_value: 11.02<br />lag: 3","value: 10.83<br />lagged_value: 11.01<br />lag: 3","value: 10.84<br />lagged_value: 11.23<br />lag: 3","value: 11.14<br />lagged_value: 11.33<br />lag: 3","value: 10.38<br />lagged_value: 10.83<br />lag: 3","value: 10.90<br />lagged_value: 10.84<br />lag: 3","value: 11.05<br />lagged_value: 11.14<br />lag: 3","value: 11.11<br />lagged_value: 10.38<br />lag: 3","value: 11.01<br />lagged_value: 10.90<br />lag: 3","value: 11.22<br />lagged_value: 11.05<br />lag: 3","value: 11.21<br />lagged_value: 11.11<br />lag: 3","value: 11.91<br />lagged_value: 11.01<br />lag: 3","value: 11.69<br />lagged_value: 11.22<br />lag: 3","value: 10.93<br />lagged_value: 11.21<br />lag: 3","value: 10.99<br />lagged_value: 11.91<br />lag: 3","value: 11.01<br />lagged_value: 11.69<br />lag: 3","value: 10.84<br />lagged_value: 10.93<br />lag: 3","value: 10.76<br />lagged_value: 10.99<br />lag: 3","value: 10.77<br />lagged_value: 11.01<br />lag: 3","value: 10.88<br />lagged_value: 10.84<br />lag: 3","value: 10.49<br />lagged_value: 10.76<br />lag: 3","value: 10.50<br />lagged_value: 10.77<br />lag: 3","value: 11.00<br />lagged_value: 10.88<br />lag: 3","value: 10.98<br />lagged_value: 10.49<br />lag: 3","value: 10.61<br />lagged_value: 10.50<br />lag: 3","value: 10.48<br />lagged_value: 11.00<br />lag: 3","value: 10.53<br />lagged_value: 10.98<br />lag: 3","value: 11.07<br />lagged_value: 10.61<br />lag: 3","value: 10.61<br />lagged_value: 10.48<br />lag: 3","value: 10.86<br />lagged_value: 10.53<br />lag: 3","value: 10.34<br />lagged_value: 11.07<br />lag: 3","value: 10.78<br />lagged_value: 10.61<br />lag: 3","value: 10.80<br />lagged_value: 10.86<br />lag: 3","value: 10.33<br />lagged_value: 10.34<br />lag: 3","value: 10.44<br />lagged_value: 10.78<br />lag: 3","value: 10.50<br />lagged_value: 10.80<br />lag: 3","value: 10.75<br />lagged_value: 10.33<br />lag: 3","value: 10.40<br />lagged_value: 10.44<br />lag: 3","value: 10.40<br />lagged_value: 10.50<br />lag: 3","value: 10.34<br />lagged_value: 10.75<br />lag: 3","value: 10.55<br />lagged_value: 10.40<br />lag: 3","value: 10.46<br />lagged_value: 10.40<br />lag: 3","value: 10.82<br />lagged_value: 10.34<br />lag: 3","value: 10.91<br />lagged_value: 10.55<br />lag: 3","value: 10.87<br />lagged_value: 10.46<br />lag: 3","value: 10.67<br />lagged_value: 10.82<br />lag: 3","value: 11.11<br />lagged_value: 10.91<br />lag: 3","value: 10.88<br />lagged_value: 10.87<br />lag: 3","value: 11.28<br />lagged_value: 10.67<br />lag: 3","value: 11.27<br />lagged_value: 11.11<br />lag: 3","value: 11.44<br />lagged_value: 10.88<br />lag: 3","value: 11.52<br />lagged_value: 11.28<br />lag: 3","value: 12.10<br />lagged_value: 11.27<br />lag: 3","value: 11.83<br />lagged_value: 11.44<br />lag: 3","value: 12.62<br />lagged_value: 11.52<br />lag: 3","value: 12.41<br />lagged_value: 12.10<br />lag: 3","value: 12.43<br />lagged_value: 11.83<br />lag: 3","value: 12.73<br />lagged_value: 12.62<br />lag: 3","value: 13.01<br />lagged_value: 12.41<br />lag: 3","value: 12.74<br />lagged_value: 12.43<br />lag: 3","value: 12.73<br />lagged_value: 12.73<br />lag: 3","value: 12.76<br />lagged_value: 13.01<br />lag: 3","value: 12.92<br />lagged_value: 12.74<br />lag: 3","value: 12.64<br />lagged_value: 12.73<br />lag: 3","value: 12.79<br />lagged_value: 12.76<br />lag: 3","value: 13.05<br />lagged_value: 12.92<br />lag: 3","value: 12.69<br />lagged_value: 12.64<br />lag: 3","value: 13.01<br />lagged_value: 12.79<br />lag: 3","value: 12.90<br />lagged_value: 13.05<br />lag: 3","value: 13.12<br />lagged_value: 12.69<br />lag: 3","value: 12.47<br />lagged_value: 13.01<br />lag: 3","value: 12.47<br />lagged_value: 12.90<br />lag: 3","value: 12.94<br />lagged_value: 13.12<br />lag: 3","value: 13.10<br />lagged_value: 12.47<br />lag: 3","value: 12.91<br />lagged_value: 12.47<br />lag: 3","value: 13.39<br />lagged_value: 12.94<br />lag: 3","value: 13.13<br />lagged_value: 13.10<br />lag: 3","value: 13.34<br />lagged_value: 12.91<br />lag: 3","value: 13.34<br />lagged_value: 13.39<br />lag: 3","value: 13.14<br />lagged_value: 13.13<br />lag: 3","value: 13.49<br />lagged_value: 13.34<br />lag: 3","value: 13.87<br />lagged_value: 13.34<br />lag: 3","value: 13.39<br />lagged_value: 13.14<br />lag: 3","value: 13.59<br />lagged_value: 13.49<br />lag: 3","value: 13.27<br />lagged_value: 13.87<br />lag: 3","value: 13.70<br />lagged_value: 13.39<br />lag: 3","value: 13.20<br />lagged_value: 13.59<br />lag: 3","value: 13.32<br />lagged_value: 13.27<br />lag: 3","value: 13.15<br />lagged_value: 13.70<br />lag: 3","value: 13.30<br />lagged_value: 13.20<br />lag: 3","value: 12.94<br />lagged_value: 13.32<br />lag: 3","value: 13.29<br />lagged_value: 13.15<br />lag: 3","value: 13.26<br />lagged_value: 13.30<br />lag: 3","value: 13.08<br />lagged_value: 12.94<br />lag: 3","value: 13.24<br />lagged_value: 13.29<br />lag: 3","value: 13.31<br />lagged_value: 13.26<br />lag: 3","value: 13.52<br />lagged_value: 13.08<br />lag: 3","value: 13.02<br />lagged_value: 13.24<br />lag: 3","value: 13.25<br />lagged_value: 13.31<br />lag: 3","value: 13.12<br />lagged_value: 13.52<br />lag: 3","value: 13.26<br />lagged_value: 13.02<br />lag: 3","value: 13.11<br />lagged_value: 13.25<br />lag: 3","value: 13.30<br />lagged_value: 13.12<br />lag: 3","value: 13.06<br />lagged_value: 13.26<br />lag: 3","value: 13.32<br />lagged_value: 13.11<br />lag: 3","value: 13.10<br />lagged_value: 13.30<br />lag: 3","value: 13.27<br />lagged_value: 13.06<br />lag: 3","value: 13.64<br />lagged_value: 13.32<br />lag: 3","value: 13.58<br />lagged_value: 13.10<br />lag: 3","value: 13.87<br />lagged_value: 13.27<br />lag: 3","value: 13.53<br />lagged_value: 13.64<br />lag: 3","value: 13.41<br />lagged_value: 13.58<br />lag: 3","value: 13.25<br />lagged_value: 13.87<br />lag: 3","value: 13.50<br />lagged_value: 13.53<br />lag: 3","value: 13.58<br />lagged_value: 13.41<br />lag: 3","value: 13.51<br />lagged_value: 13.25<br />lag: 3","value: 13.77<br />lagged_value: 13.50<br />lag: 3","value: 13.40<br />lagged_value: 13.58<br />lag: 3"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(83,180,0,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(83,180,0,1)"}},"hoveron":"points","name":"3","legendgroup":"3","showlegend":true,"xaxis":"x3","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5],"text":["value: 10.33<br />lagged_value: 10.01<br />lag: 4","value: 10.13<br />lagged_value: 10.07<br />lag: 4","value: 10.36<br />lagged_value: 10.32<br />lag: 4","value: 10.32<br />lagged_value:  9.75<br />lag: 4","value: 10.13<br />lagged_value: 10.33<br />lag: 4","value: 10.16<br />lagged_value: 10.13<br />lag: 4","value: 10.58<br />lagged_value: 10.36<br />lag: 4","value: 10.62<br />lagged_value: 10.32<br />lag: 4","value: 10.86<br />lagged_value: 10.13<br />lag: 4","value: 11.20<br />lagged_value: 10.16<br />lag: 4","value: 10.74<br />lagged_value: 10.58<br />lag: 4","value: 10.56<br />lagged_value: 10.62<br />lag: 4","value: 10.48<br />lagged_value: 10.86<br />lag: 4","value: 10.77<br />lagged_value: 11.20<br />lag: 4","value: 11.33<br />lagged_value: 10.74<br />lag: 4","value: 10.96<br />lagged_value: 10.56<br />lag: 4","value: 11.16<br />lagged_value: 10.48<br />lag: 4","value: 11.70<br />lagged_value: 10.77<br />lag: 4","value: 11.39<br />lagged_value: 11.33<br />lag: 4","value: 11.42<br />lagged_value: 10.96<br />lag: 4","value: 11.94<br />lagged_value: 11.16<br />lag: 4","value: 11.24<br />lagged_value: 11.70<br />lag: 4","value: 11.59<br />lagged_value: 11.39<br />lag: 4","value: 10.96<br />lagged_value: 11.42<br />lag: 4","value: 11.40<br />lagged_value: 11.94<br />lag: 4","value: 11.02<br />lagged_value: 11.24<br />lag: 4","value: 11.01<br />lagged_value: 11.59<br />lag: 4","value: 11.23<br />lagged_value: 10.96<br />lag: 4","value: 11.33<br />lagged_value: 11.40<br />lag: 4","value: 10.83<br />lagged_value: 11.02<br />lag: 4","value: 10.84<br />lagged_value: 11.01<br />lag: 4","value: 11.14<br />lagged_value: 11.23<br />lag: 4","value: 10.38<br />lagged_value: 11.33<br />lag: 4","value: 10.90<br />lagged_value: 10.83<br />lag: 4","value: 11.05<br />lagged_value: 10.84<br />lag: 4","value: 11.11<br />lagged_value: 11.14<br />lag: 4","value: 11.01<br />lagged_value: 10.38<br />lag: 4","value: 11.22<br />lagged_value: 10.90<br />lag: 4","value: 11.21<br />lagged_value: 11.05<br />lag: 4","value: 11.91<br />lagged_value: 11.11<br />lag: 4","value: 11.69<br />lagged_value: 11.01<br />lag: 4","value: 10.93<br />lagged_value: 11.22<br />lag: 4","value: 10.99<br />lagged_value: 11.21<br />lag: 4","value: 11.01<br />lagged_value: 11.91<br />lag: 4","value: 10.84<br />lagged_value: 11.69<br />lag: 4","value: 10.76<br />lagged_value: 10.93<br />lag: 4","value: 10.77<br />lagged_value: 10.99<br />lag: 4","value: 10.88<br />lagged_value: 11.01<br />lag: 4","value: 10.49<br />lagged_value: 10.84<br />lag: 4","value: 10.50<br />lagged_value: 10.76<br />lag: 4","value: 11.00<br />lagged_value: 10.77<br />lag: 4","value: 10.98<br />lagged_value: 10.88<br />lag: 4","value: 10.61<br />lagged_value: 10.49<br />lag: 4","value: 10.48<br />lagged_value: 10.50<br />lag: 4","value: 10.53<br />lagged_value: 11.00<br />lag: 4","value: 11.07<br />lagged_value: 10.98<br />lag: 4","value: 10.61<br />lagged_value: 10.61<br />lag: 4","value: 10.86<br />lagged_value: 10.48<br />lag: 4","value: 10.34<br />lagged_value: 10.53<br />lag: 4","value: 10.78<br />lagged_value: 11.07<br />lag: 4","value: 10.80<br />lagged_value: 10.61<br />lag: 4","value: 10.33<br />lagged_value: 10.86<br />lag: 4","value: 10.44<br />lagged_value: 10.34<br />lag: 4","value: 10.50<br />lagged_value: 10.78<br />lag: 4","value: 10.75<br />lagged_value: 10.80<br />lag: 4","value: 10.40<br />lagged_value: 10.33<br />lag: 4","value: 10.40<br />lagged_value: 10.44<br />lag: 4","value: 10.34<br />lagged_value: 10.50<br />lag: 4","value: 10.55<br />lagged_value: 10.75<br />lag: 4","value: 10.46<br />lagged_value: 10.40<br />lag: 4","value: 10.82<br />lagged_value: 10.40<br />lag: 4","value: 10.91<br />lagged_value: 10.34<br />lag: 4","value: 10.87<br />lagged_value: 10.55<br />lag: 4","value: 10.67<br />lagged_value: 10.46<br />lag: 4","value: 11.11<br />lagged_value: 10.82<br />lag: 4","value: 10.88<br />lagged_value: 10.91<br />lag: 4","value: 11.28<br />lagged_value: 10.87<br />lag: 4","value: 11.27<br />lagged_value: 10.67<br />lag: 4","value: 11.44<br />lagged_value: 11.11<br />lag: 4","value: 11.52<br />lagged_value: 10.88<br />lag: 4","value: 12.10<br />lagged_value: 11.28<br />lag: 4","value: 11.83<br />lagged_value: 11.27<br />lag: 4","value: 12.62<br />lagged_value: 11.44<br />lag: 4","value: 12.41<br />lagged_value: 11.52<br />lag: 4","value: 12.43<br />lagged_value: 12.10<br />lag: 4","value: 12.73<br />lagged_value: 11.83<br />lag: 4","value: 13.01<br />lagged_value: 12.62<br />lag: 4","value: 12.74<br />lagged_value: 12.41<br />lag: 4","value: 12.73<br />lagged_value: 12.43<br />lag: 4","value: 12.76<br />lagged_value: 12.73<br />lag: 4","value: 12.92<br />lagged_value: 13.01<br />lag: 4","value: 12.64<br />lagged_value: 12.74<br />lag: 4","value: 12.79<br />lagged_value: 12.73<br />lag: 4","value: 13.05<br />lagged_value: 12.76<br />lag: 4","value: 12.69<br />lagged_value: 12.92<br />lag: 4","value: 13.01<br />lagged_value: 12.64<br />lag: 4","value: 12.90<br />lagged_value: 12.79<br />lag: 4","value: 13.12<br />lagged_value: 13.05<br />lag: 4","value: 12.47<br />lagged_value: 12.69<br />lag: 4","value: 12.47<br />lagged_value: 13.01<br />lag: 4","value: 12.94<br />lagged_value: 12.90<br />lag: 4","value: 13.10<br />lagged_value: 13.12<br />lag: 4","value: 12.91<br />lagged_value: 12.47<br />lag: 4","value: 13.39<br />lagged_value: 12.47<br />lag: 4","value: 13.13<br />lagged_value: 12.94<br />lag: 4","value: 13.34<br />lagged_value: 13.10<br />lag: 4","value: 13.34<br />lagged_value: 12.91<br />lag: 4","value: 13.14<br />lagged_value: 13.39<br />lag: 4","value: 13.49<br />lagged_value: 13.13<br />lag: 4","value: 13.87<br />lagged_value: 13.34<br />lag: 4","value: 13.39<br />lagged_value: 13.34<br />lag: 4","value: 13.59<br />lagged_value: 13.14<br />lag: 4","value: 13.27<br />lagged_value: 13.49<br />lag: 4","value: 13.70<br />lagged_value: 13.87<br />lag: 4","value: 13.20<br />lagged_value: 13.39<br />lag: 4","value: 13.32<br />lagged_value: 13.59<br />lag: 4","value: 13.15<br />lagged_value: 13.27<br />lag: 4","value: 13.30<br />lagged_value: 13.70<br />lag: 4","value: 12.94<br />lagged_value: 13.20<br />lag: 4","value: 13.29<br />lagged_value: 13.32<br />lag: 4","value: 13.26<br />lagged_value: 13.15<br />lag: 4","value: 13.08<br />lagged_value: 13.30<br />lag: 4","value: 13.24<br />lagged_value: 12.94<br />lag: 4","value: 13.31<br />lagged_value: 13.29<br />lag: 4","value: 13.52<br />lagged_value: 13.26<br />lag: 4","value: 13.02<br />lagged_value: 13.08<br />lag: 4","value: 13.25<br />lagged_value: 13.24<br />lag: 4","value: 13.12<br />lagged_value: 13.31<br />lag: 4","value: 13.26<br />lagged_value: 13.52<br />lag: 4","value: 13.11<br />lagged_value: 13.02<br />lag: 4","value: 13.30<br />lagged_value: 13.25<br />lag: 4","value: 13.06<br />lagged_value: 13.12<br />lag: 4","value: 13.32<br />lagged_value: 13.26<br />lag: 4","value: 13.10<br />lagged_value: 13.11<br />lag: 4","value: 13.27<br />lagged_value: 13.30<br />lag: 4","value: 13.64<br />lagged_value: 13.06<br />lag: 4","value: 13.58<br />lagged_value: 13.32<br />lag: 4","value: 13.87<br />lagged_value: 13.10<br />lag: 4","value: 13.53<br />lagged_value: 13.27<br />lag: 4","value: 13.41<br />lagged_value: 13.64<br />lag: 4","value: 13.25<br />lagged_value: 13.58<br />lag: 4","value: 13.50<br />lagged_value: 13.87<br />lag: 4","value: 13.58<br />lagged_value: 13.53<br />lag: 4","value: 13.51<br />lagged_value: 13.41<br />lag: 4","value: 13.77<br />lagged_value: 13.25<br />lag: 4","value: 13.40<br />lagged_value: 13.50<br />lag: 4"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,192,148,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(0,192,148,1)"}},"hoveron":"points","name":"4","legendgroup":"4","showlegend":true,"xaxis":"x4","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41],"text":["value: 10.36<br />lagged_value: 10.01<br />lag: 6","value: 10.32<br />lagged_value: 10.07<br />lag: 6","value: 10.13<br />lagged_value: 10.32<br />lag: 6","value: 10.16<br />lagged_value:  9.75<br />lag: 6","value: 10.58<br />lagged_value: 10.33<br />lag: 6","value: 10.62<br />lagged_value: 10.13<br />lag: 6","value: 10.86<br />lagged_value: 10.36<br />lag: 6","value: 11.20<br />lagged_value: 10.32<br />lag: 6","value: 10.74<br />lagged_value: 10.13<br />lag: 6","value: 10.56<br />lagged_value: 10.16<br />lag: 6","value: 10.48<br />lagged_value: 10.58<br />lag: 6","value: 10.77<br />lagged_value: 10.62<br />lag: 6","value: 11.33<br />lagged_value: 10.86<br />lag: 6","value: 10.96<br />lagged_value: 11.20<br />lag: 6","value: 11.16<br />lagged_value: 10.74<br />lag: 6","value: 11.70<br />lagged_value: 10.56<br />lag: 6","value: 11.39<br />lagged_value: 10.48<br />lag: 6","value: 11.42<br />lagged_value: 10.77<br />lag: 6","value: 11.94<br />lagged_value: 11.33<br />lag: 6","value: 11.24<br />lagged_value: 10.96<br />lag: 6","value: 11.59<br />lagged_value: 11.16<br />lag: 6","value: 10.96<br />lagged_value: 11.70<br />lag: 6","value: 11.40<br />lagged_value: 11.39<br />lag: 6","value: 11.02<br />lagged_value: 11.42<br />lag: 6","value: 11.01<br />lagged_value: 11.94<br />lag: 6","value: 11.23<br />lagged_value: 11.24<br />lag: 6","value: 11.33<br />lagged_value: 11.59<br />lag: 6","value: 10.83<br />lagged_value: 10.96<br />lag: 6","value: 10.84<br />lagged_value: 11.40<br />lag: 6","value: 11.14<br />lagged_value: 11.02<br />lag: 6","value: 10.38<br />lagged_value: 11.01<br />lag: 6","value: 10.90<br />lagged_value: 11.23<br />lag: 6","value: 11.05<br />lagged_value: 11.33<br />lag: 6","value: 11.11<br />lagged_value: 10.83<br />lag: 6","value: 11.01<br />lagged_value: 10.84<br />lag: 6","value: 11.22<br />lagged_value: 11.14<br />lag: 6","value: 11.21<br />lagged_value: 10.38<br />lag: 6","value: 11.91<br />lagged_value: 10.90<br />lag: 6","value: 11.69<br />lagged_value: 11.05<br />lag: 6","value: 10.93<br />lagged_value: 11.11<br />lag: 6","value: 10.99<br />lagged_value: 11.01<br />lag: 6","value: 11.01<br />lagged_value: 11.22<br />lag: 6","value: 10.84<br />lagged_value: 11.21<br />lag: 6","value: 10.76<br />lagged_value: 11.91<br />lag: 6","value: 10.77<br />lagged_value: 11.69<br />lag: 6","value: 10.88<br />lagged_value: 10.93<br />lag: 6","value: 10.49<br />lagged_value: 10.99<br />lag: 6","value: 10.50<br />lagged_value: 11.01<br />lag: 6","value: 11.00<br />lagged_value: 10.84<br />lag: 6","value: 10.98<br />lagged_value: 10.76<br />lag: 6","value: 10.61<br />lagged_value: 10.77<br />lag: 6","value: 10.48<br />lagged_value: 10.88<br />lag: 6","value: 10.53<br />lagged_value: 10.49<br />lag: 6","value: 11.07<br />lagged_value: 10.50<br />lag: 6","value: 10.61<br />lagged_value: 11.00<br />lag: 6","value: 10.86<br />lagged_value: 10.98<br />lag: 6","value: 10.34<br />lagged_value: 10.61<br />lag: 6","value: 10.78<br />lagged_value: 10.48<br />lag: 6","value: 10.80<br />lagged_value: 10.53<br />lag: 6","value: 10.33<br />lagged_value: 11.07<br />lag: 6","value: 10.44<br />lagged_value: 10.61<br />lag: 6","value: 10.50<br />lagged_value: 10.86<br />lag: 6","value: 10.75<br />lagged_value: 10.34<br />lag: 6","value: 10.40<br />lagged_value: 10.78<br />lag: 6","value: 10.40<br />lagged_value: 10.80<br />lag: 6","value: 10.34<br />lagged_value: 10.33<br />lag: 6","value: 10.55<br />lagged_value: 10.44<br />lag: 6","value: 10.46<br />lagged_value: 10.50<br />lag: 6","value: 10.82<br />lagged_value: 10.75<br />lag: 6","value: 10.91<br />lagged_value: 10.40<br />lag: 6","value: 10.87<br />lagged_value: 10.40<br />lag: 6","value: 10.67<br />lagged_value: 10.34<br />lag: 6","value: 11.11<br />lagged_value: 10.55<br />lag: 6","value: 10.88<br />lagged_value: 10.46<br />lag: 6","value: 11.28<br />lagged_value: 10.82<br />lag: 6","value: 11.27<br />lagged_value: 10.91<br />lag: 6","value: 11.44<br />lagged_value: 10.87<br />lag: 6","value: 11.52<br />lagged_value: 10.67<br />lag: 6","value: 12.10<br />lagged_value: 11.11<br />lag: 6","value: 11.83<br />lagged_value: 10.88<br />lag: 6","value: 12.62<br />lagged_value: 11.28<br />lag: 6","value: 12.41<br />lagged_value: 11.27<br />lag: 6","value: 12.43<br />lagged_value: 11.44<br />lag: 6","value: 12.73<br />lagged_value: 11.52<br />lag: 6","value: 13.01<br />lagged_value: 12.10<br />lag: 6","value: 12.74<br />lagged_value: 11.83<br />lag: 6","value: 12.73<br />lagged_value: 12.62<br />lag: 6","value: 12.76<br />lagged_value: 12.41<br />lag: 6","value: 12.92<br />lagged_value: 12.43<br />lag: 6","value: 12.64<br />lagged_value: 12.73<br />lag: 6","value: 12.79<br />lagged_value: 13.01<br />lag: 6","value: 13.05<br />lagged_value: 12.74<br />lag: 6","value: 12.69<br />lagged_value: 12.73<br />lag: 6","value: 13.01<br />lagged_value: 12.76<br />lag: 6","value: 12.90<br />lagged_value: 12.92<br />lag: 6","value: 13.12<br />lagged_value: 12.64<br />lag: 6","value: 12.47<br />lagged_value: 12.79<br />lag: 6","value: 12.47<br />lagged_value: 13.05<br />lag: 6","value: 12.94<br />lagged_value: 12.69<br />lag: 6","value: 13.10<br />lagged_value: 13.01<br />lag: 6","value: 12.91<br />lagged_value: 12.90<br />lag: 6","value: 13.39<br />lagged_value: 13.12<br />lag: 6","value: 13.13<br />lagged_value: 12.47<br />lag: 6","value: 13.34<br />lagged_value: 12.47<br />lag: 6","value: 13.34<br />lagged_value: 12.94<br />lag: 6","value: 13.14<br />lagged_value: 13.10<br />lag: 6","value: 13.49<br />lagged_value: 12.91<br />lag: 6","value: 13.87<br />lagged_value: 13.39<br />lag: 6","value: 13.39<br />lagged_value: 13.13<br />lag: 6","value: 13.59<br />lagged_value: 13.34<br />lag: 6","value: 13.27<br />lagged_value: 13.34<br />lag: 6","value: 13.70<br />lagged_value: 13.14<br />lag: 6","value: 13.20<br />lagged_value: 13.49<br />lag: 6","value: 13.32<br />lagged_value: 13.87<br />lag: 6","value: 13.15<br />lagged_value: 13.39<br />lag: 6","value: 13.30<br />lagged_value: 13.59<br />lag: 6","value: 12.94<br />lagged_value: 13.27<br />lag: 6","value: 13.29<br />lagged_value: 13.70<br />lag: 6","value: 13.26<br />lagged_value: 13.20<br />lag: 6","value: 13.08<br />lagged_value: 13.32<br />lag: 6","value: 13.24<br />lagged_value: 13.15<br />lag: 6","value: 13.31<br />lagged_value: 13.30<br />lag: 6","value: 13.52<br />lagged_value: 12.94<br />lag: 6","value: 13.02<br />lagged_value: 13.29<br />lag: 6","value: 13.25<br />lagged_value: 13.26<br />lag: 6","value: 13.12<br />lagged_value: 13.08<br />lag: 6","value: 13.26<br />lagged_value: 13.24<br />lag: 6","value: 13.11<br />lagged_value: 13.31<br />lag: 6","value: 13.30<br />lagged_value: 13.52<br />lag: 6","value: 13.06<br />lagged_value: 13.02<br />lag: 6","value: 13.32<br />lagged_value: 13.25<br />lag: 6","value: 13.10<br />lagged_value: 13.12<br />lag: 6","value: 13.27<br />lagged_value: 13.26<br />lag: 6","value: 13.64<br />lagged_value: 13.11<br />lag: 6","value: 13.58<br />lagged_value: 13.30<br />lag: 6","value: 13.87<br />lagged_value: 13.06<br />lag: 6","value: 13.53<br />lagged_value: 13.32<br />lag: 6","value: 13.41<br />lagged_value: 13.10<br />lag: 6","value: 13.25<br />lagged_value: 13.27<br />lag: 6","value: 13.50<br />lagged_value: 13.64<br />lag: 6","value: 13.58<br />lagged_value: 13.58<br />lag: 6","value: 13.51<br />lagged_value: 13.87<br />lag: 6","value: 13.77<br />lagged_value: 13.53<br />lag: 6","value: 13.40<br />lagged_value: 13.41<br />lag: 6"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,182,235,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(0,182,235,1)"}},"hoveron":"points","name":"6","legendgroup":"6","showlegend":true,"xaxis":"x5","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1],"text":["value: 10.86<br />lagged_value: 10.01<br />lag: 12","value: 11.20<br />lagged_value: 10.07<br />lag: 12","value: 10.74<br />lagged_value: 10.32<br />lag: 12","value: 10.56<br />lagged_value:  9.75<br />lag: 12","value: 10.48<br />lagged_value: 10.33<br />lag: 12","value: 10.77<br />lagged_value: 10.13<br />lag: 12","value: 11.33<br />lagged_value: 10.36<br />lag: 12","value: 10.96<br />lagged_value: 10.32<br />lag: 12","value: 11.16<br />lagged_value: 10.13<br />lag: 12","value: 11.70<br />lagged_value: 10.16<br />lag: 12","value: 11.39<br />lagged_value: 10.58<br />lag: 12","value: 11.42<br />lagged_value: 10.62<br />lag: 12","value: 11.94<br />lagged_value: 10.86<br />lag: 12","value: 11.24<br />lagged_value: 11.20<br />lag: 12","value: 11.59<br />lagged_value: 10.74<br />lag: 12","value: 10.96<br />lagged_value: 10.56<br />lag: 12","value: 11.40<br />lagged_value: 10.48<br />lag: 12","value: 11.02<br />lagged_value: 10.77<br />lag: 12","value: 11.01<br />lagged_value: 11.33<br />lag: 12","value: 11.23<br />lagged_value: 10.96<br />lag: 12","value: 11.33<br />lagged_value: 11.16<br />lag: 12","value: 10.83<br />lagged_value: 11.70<br />lag: 12","value: 10.84<br />lagged_value: 11.39<br />lag: 12","value: 11.14<br />lagged_value: 11.42<br />lag: 12","value: 10.38<br />lagged_value: 11.94<br />lag: 12","value: 10.90<br />lagged_value: 11.24<br />lag: 12","value: 11.05<br />lagged_value: 11.59<br />lag: 12","value: 11.11<br />lagged_value: 10.96<br />lag: 12","value: 11.01<br />lagged_value: 11.40<br />lag: 12","value: 11.22<br />lagged_value: 11.02<br />lag: 12","value: 11.21<br />lagged_value: 11.01<br />lag: 12","value: 11.91<br />lagged_value: 11.23<br />lag: 12","value: 11.69<br />lagged_value: 11.33<br />lag: 12","value: 10.93<br />lagged_value: 10.83<br />lag: 12","value: 10.99<br />lagged_value: 10.84<br />lag: 12","value: 11.01<br />lagged_value: 11.14<br />lag: 12","value: 10.84<br />lagged_value: 10.38<br />lag: 12","value: 10.76<br />lagged_value: 10.90<br />lag: 12","value: 10.77<br />lagged_value: 11.05<br />lag: 12","value: 10.88<br />lagged_value: 11.11<br />lag: 12","value: 10.49<br />lagged_value: 11.01<br />lag: 12","value: 10.50<br />lagged_value: 11.22<br />lag: 12","value: 11.00<br />lagged_value: 11.21<br />lag: 12","value: 10.98<br />lagged_value: 11.91<br />lag: 12","value: 10.61<br />lagged_value: 11.69<br />lag: 12","value: 10.48<br />lagged_value: 10.93<br />lag: 12","value: 10.53<br />lagged_value: 10.99<br />lag: 12","value: 11.07<br />lagged_value: 11.01<br />lag: 12","value: 10.61<br />lagged_value: 10.84<br />lag: 12","value: 10.86<br />lagged_value: 10.76<br />lag: 12","value: 10.34<br />lagged_value: 10.77<br />lag: 12","value: 10.78<br />lagged_value: 10.88<br />lag: 12","value: 10.80<br />lagged_value: 10.49<br />lag: 12","value: 10.33<br />lagged_value: 10.50<br />lag: 12","value: 10.44<br />lagged_value: 11.00<br />lag: 12","value: 10.50<br />lagged_value: 10.98<br />lag: 12","value: 10.75<br />lagged_value: 10.61<br />lag: 12","value: 10.40<br />lagged_value: 10.48<br />lag: 12","value: 10.40<br />lagged_value: 10.53<br />lag: 12","value: 10.34<br />lagged_value: 11.07<br />lag: 12","value: 10.55<br />lagged_value: 10.61<br />lag: 12","value: 10.46<br />lagged_value: 10.86<br />lag: 12","value: 10.82<br />lagged_value: 10.34<br />lag: 12","value: 10.91<br />lagged_value: 10.78<br />lag: 12","value: 10.87<br />lagged_value: 10.80<br />lag: 12","value: 10.67<br />lagged_value: 10.33<br />lag: 12","value: 11.11<br />lagged_value: 10.44<br />lag: 12","value: 10.88<br />lagged_value: 10.50<br />lag: 12","value: 11.28<br />lagged_value: 10.75<br />lag: 12","value: 11.27<br />lagged_value: 10.40<br />lag: 12","value: 11.44<br />lagged_value: 10.40<br />lag: 12","value: 11.52<br />lagged_value: 10.34<br />lag: 12","value: 12.10<br />lagged_value: 10.55<br />lag: 12","value: 11.83<br />lagged_value: 10.46<br />lag: 12","value: 12.62<br />lagged_value: 10.82<br />lag: 12","value: 12.41<br />lagged_value: 10.91<br />lag: 12","value: 12.43<br />lagged_value: 10.87<br />lag: 12","value: 12.73<br />lagged_value: 10.67<br />lag: 12","value: 13.01<br />lagged_value: 11.11<br />lag: 12","value: 12.74<br />lagged_value: 10.88<br />lag: 12","value: 12.73<br />lagged_value: 11.28<br />lag: 12","value: 12.76<br />lagged_value: 11.27<br />lag: 12","value: 12.92<br />lagged_value: 11.44<br />lag: 12","value: 12.64<br />lagged_value: 11.52<br />lag: 12","value: 12.79<br />lagged_value: 12.10<br />lag: 12","value: 13.05<br />lagged_value: 11.83<br />lag: 12","value: 12.69<br />lagged_value: 12.62<br />lag: 12","value: 13.01<br />lagged_value: 12.41<br />lag: 12","value: 12.90<br />lagged_value: 12.43<br />lag: 12","value: 13.12<br />lagged_value: 12.73<br />lag: 12","value: 12.47<br />lagged_value: 13.01<br />lag: 12","value: 12.47<br />lagged_value: 12.74<br />lag: 12","value: 12.94<br />lagged_value: 12.73<br />lag: 12","value: 13.10<br />lagged_value: 12.76<br />lag: 12","value: 12.91<br />lagged_value: 12.92<br />lag: 12","value: 13.39<br />lagged_value: 12.64<br />lag: 12","value: 13.13<br />lagged_value: 12.79<br />lag: 12","value: 13.34<br />lagged_value: 13.05<br />lag: 12","value: 13.34<br />lagged_value: 12.69<br />lag: 12","value: 13.14<br />lagged_value: 13.01<br />lag: 12","value: 13.49<br />lagged_value: 12.90<br />lag: 12","value: 13.87<br />lagged_value: 13.12<br />lag: 12","value: 13.39<br />lagged_value: 12.47<br />lag: 12","value: 13.59<br />lagged_value: 12.47<br />lag: 12","value: 13.27<br />lagged_value: 12.94<br />lag: 12","value: 13.70<br />lagged_value: 13.10<br />lag: 12","value: 13.20<br />lagged_value: 12.91<br />lag: 12","value: 13.32<br />lagged_value: 13.39<br />lag: 12","value: 13.15<br />lagged_value: 13.13<br />lag: 12","value: 13.30<br />lagged_value: 13.34<br />lag: 12","value: 12.94<br />lagged_value: 13.34<br />lag: 12","value: 13.29<br />lagged_value: 13.14<br />lag: 12","value: 13.26<br />lagged_value: 13.49<br />lag: 12","value: 13.08<br />lagged_value: 13.87<br />lag: 12","value: 13.24<br />lagged_value: 13.39<br />lag: 12","value: 13.31<br />lagged_value: 13.59<br />lag: 12","value: 13.52<br />lagged_value: 13.27<br />lag: 12","value: 13.02<br />lagged_value: 13.70<br />lag: 12","value: 13.25<br />lagged_value: 13.20<br />lag: 12","value: 13.12<br />lagged_value: 13.32<br />lag: 12","value: 13.26<br />lagged_value: 13.15<br />lag: 12","value: 13.11<br />lagged_value: 13.30<br />lag: 12","value: 13.30<br />lagged_value: 12.94<br />lag: 12","value: 13.06<br />lagged_value: 13.29<br />lag: 12","value: 13.32<br />lagged_value: 13.26<br />lag: 12","value: 13.10<br />lagged_value: 13.08<br />lag: 12","value: 13.27<br />lagged_value: 13.24<br />lag: 12","value: 13.64<br />lagged_value: 13.31<br />lag: 12","value: 13.58<br />lagged_value: 13.52<br />lag: 12","value: 13.87<br />lagged_value: 13.02<br />lag: 12","value: 13.53<br />lagged_value: 13.25<br />lag: 12","value: 13.41<br />lagged_value: 13.12<br />lag: 12","value: 13.25<br />lagged_value: 13.26<br />lag: 12","value: 13.50<br />lagged_value: 13.11<br />lag: 12","value: 13.58<br />lagged_value: 13.30<br />lag: 12","value: 13.51<br />lagged_value: 13.06<br />lag: 12","value: 13.77<br />lagged_value: 13.32<br />lag: 12","value: 13.40<br />lagged_value: 13.10<br />lag: 12"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(165,138,255,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(165,138,255,1)"}},"hoveron":"points","name":"12","legendgroup":"12","showlegend":true,"xaxis":"x6","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08],"text":["value: 11.94<br />lagged_value: 10.01<br />lag: 24","value: 11.24<br />lagged_value: 10.07<br />lag: 24","value: 11.59<br />lagged_value: 10.32<br />lag: 24","value: 10.96<br />lagged_value:  9.75<br />lag: 24","value: 11.40<br />lagged_value: 10.33<br />lag: 24","value: 11.02<br />lagged_value: 10.13<br />lag: 24","value: 11.01<br />lagged_value: 10.36<br />lag: 24","value: 11.23<br />lagged_value: 10.32<br />lag: 24","value: 11.33<br />lagged_value: 10.13<br />lag: 24","value: 10.83<br />lagged_value: 10.16<br />lag: 24","value: 10.84<br />lagged_value: 10.58<br />lag: 24","value: 11.14<br />lagged_value: 10.62<br />lag: 24","value: 10.38<br />lagged_value: 10.86<br />lag: 24","value: 10.90<br />lagged_value: 11.20<br />lag: 24","value: 11.05<br />lagged_value: 10.74<br />lag: 24","value: 11.11<br />lagged_value: 10.56<br />lag: 24","value: 11.01<br />lagged_value: 10.48<br />lag: 24","value: 11.22<br />lagged_value: 10.77<br />lag: 24","value: 11.21<br />lagged_value: 11.33<br />lag: 24","value: 11.91<br />lagged_value: 10.96<br />lag: 24","value: 11.69<br />lagged_value: 11.16<br />lag: 24","value: 10.93<br />lagged_value: 11.70<br />lag: 24","value: 10.99<br />lagged_value: 11.39<br />lag: 24","value: 11.01<br />lagged_value: 11.42<br />lag: 24","value: 10.84<br />lagged_value: 11.94<br />lag: 24","value: 10.76<br />lagged_value: 11.24<br />lag: 24","value: 10.77<br />lagged_value: 11.59<br />lag: 24","value: 10.88<br />lagged_value: 10.96<br />lag: 24","value: 10.49<br />lagged_value: 11.40<br />lag: 24","value: 10.50<br />lagged_value: 11.02<br />lag: 24","value: 11.00<br />lagged_value: 11.01<br />lag: 24","value: 10.98<br />lagged_value: 11.23<br />lag: 24","value: 10.61<br />lagged_value: 11.33<br />lag: 24","value: 10.48<br />lagged_value: 10.83<br />lag: 24","value: 10.53<br />lagged_value: 10.84<br />lag: 24","value: 11.07<br />lagged_value: 11.14<br />lag: 24","value: 10.61<br />lagged_value: 10.38<br />lag: 24","value: 10.86<br />lagged_value: 10.90<br />lag: 24","value: 10.34<br />lagged_value: 11.05<br />lag: 24","value: 10.78<br />lagged_value: 11.11<br />lag: 24","value: 10.80<br />lagged_value: 11.01<br />lag: 24","value: 10.33<br />lagged_value: 11.22<br />lag: 24","value: 10.44<br />lagged_value: 11.21<br />lag: 24","value: 10.50<br />lagged_value: 11.91<br />lag: 24","value: 10.75<br />lagged_value: 11.69<br />lag: 24","value: 10.40<br />lagged_value: 10.93<br />lag: 24","value: 10.40<br />lagged_value: 10.99<br />lag: 24","value: 10.34<br />lagged_value: 11.01<br />lag: 24","value: 10.55<br />lagged_value: 10.84<br />lag: 24","value: 10.46<br />lagged_value: 10.76<br />lag: 24","value: 10.82<br />lagged_value: 10.77<br />lag: 24","value: 10.91<br />lagged_value: 10.88<br />lag: 24","value: 10.87<br />lagged_value: 10.49<br />lag: 24","value: 10.67<br />lagged_value: 10.50<br />lag: 24","value: 11.11<br />lagged_value: 11.00<br />lag: 24","value: 10.88<br />lagged_value: 10.98<br />lag: 24","value: 11.28<br />lagged_value: 10.61<br />lag: 24","value: 11.27<br />lagged_value: 10.48<br />lag: 24","value: 11.44<br />lagged_value: 10.53<br />lag: 24","value: 11.52<br />lagged_value: 11.07<br />lag: 24","value: 12.10<br />lagged_value: 10.61<br />lag: 24","value: 11.83<br />lagged_value: 10.86<br />lag: 24","value: 12.62<br />lagged_value: 10.34<br />lag: 24","value: 12.41<br />lagged_value: 10.78<br />lag: 24","value: 12.43<br />lagged_value: 10.80<br />lag: 24","value: 12.73<br />lagged_value: 10.33<br />lag: 24","value: 13.01<br />lagged_value: 10.44<br />lag: 24","value: 12.74<br />lagged_value: 10.50<br />lag: 24","value: 12.73<br />lagged_value: 10.75<br />lag: 24","value: 12.76<br />lagged_value: 10.40<br />lag: 24","value: 12.92<br />lagged_value: 10.40<br />lag: 24","value: 12.64<br />lagged_value: 10.34<br />lag: 24","value: 12.79<br />lagged_value: 10.55<br />lag: 24","value: 13.05<br />lagged_value: 10.46<br />lag: 24","value: 12.69<br />lagged_value: 10.82<br />lag: 24","value: 13.01<br />lagged_value: 10.91<br />lag: 24","value: 12.90<br />lagged_value: 10.87<br />lag: 24","value: 13.12<br />lagged_value: 10.67<br />lag: 24","value: 12.47<br />lagged_value: 11.11<br />lag: 24","value: 12.47<br />lagged_value: 10.88<br />lag: 24","value: 12.94<br />lagged_value: 11.28<br />lag: 24","value: 13.10<br />lagged_value: 11.27<br />lag: 24","value: 12.91<br />lagged_value: 11.44<br />lag: 24","value: 13.39<br />lagged_value: 11.52<br />lag: 24","value: 13.13<br />lagged_value: 12.10<br />lag: 24","value: 13.34<br />lagged_value: 11.83<br />lag: 24","value: 13.34<br />lagged_value: 12.62<br />lag: 24","value: 13.14<br />lagged_value: 12.41<br />lag: 24","value: 13.49<br />lagged_value: 12.43<br />lag: 24","value: 13.87<br />lagged_value: 12.73<br />lag: 24","value: 13.39<br />lagged_value: 13.01<br />lag: 24","value: 13.59<br />lagged_value: 12.74<br />lag: 24","value: 13.27<br />lagged_value: 12.73<br />lag: 24","value: 13.70<br />lagged_value: 12.76<br />lag: 24","value: 13.20<br />lagged_value: 12.92<br />lag: 24","value: 13.32<br />lagged_value: 12.64<br />lag: 24","value: 13.15<br />lagged_value: 12.79<br />lag: 24","value: 13.30<br />lagged_value: 13.05<br />lag: 24","value: 12.94<br />lagged_value: 12.69<br />lag: 24","value: 13.29<br />lagged_value: 13.01<br />lag: 24","value: 13.26<br />lagged_value: 12.90<br />lag: 24","value: 13.08<br />lagged_value: 13.12<br />lag: 24","value: 13.24<br />lagged_value: 12.47<br />lag: 24","value: 13.31<br />lagged_value: 12.47<br />lag: 24","value: 13.52<br />lagged_value: 12.94<br />lag: 24","value: 13.02<br />lagged_value: 13.10<br />lag: 24","value: 13.25<br />lagged_value: 12.91<br />lag: 24","value: 13.12<br />lagged_value: 13.39<br />lag: 24","value: 13.26<br />lagged_value: 13.13<br />lag: 24","value: 13.11<br />lagged_value: 13.34<br />lag: 24","value: 13.30<br />lagged_value: 13.34<br />lag: 24","value: 13.06<br />lagged_value: 13.14<br />lag: 24","value: 13.32<br />lagged_value: 13.49<br />lag: 24","value: 13.10<br />lagged_value: 13.87<br />lag: 24","value: 13.27<br />lagged_value: 13.39<br />lag: 24","value: 13.64<br />lagged_value: 13.59<br />lag: 24","value: 13.58<br />lagged_value: 13.27<br />lag: 24","value: 13.87<br />lagged_value: 13.70<br />lag: 24","value: 13.53<br />lagged_value: 13.20<br />lag: 24","value: 13.41<br />lagged_value: 13.32<br />lag: 24","value: 13.25<br />lagged_value: 13.15<br />lag: 24","value: 13.50<br />lagged_value: 13.30<br />lag: 24","value: 13.58<br />lagged_value: 12.94<br />lag: 24","value: 13.51<br />lagged_value: 13.29<br />lag: 24","value: 13.77<br />lagged_value: 13.26<br />lag: 24","value: 13.40<br />lagged_value: 13.08<br />lag: 24"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(251,97,215,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(251,97,215,1)"}},"hoveron":"points","name":"24","legendgroup":"24","showlegend":true,"xaxis":"x7","yaxis":"y7","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":37.917808219178085,"r":7.3059360730593621,"b":40.182648401826491,"l":37.260273972602747},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xaxis":{"domain":[0,0.32273320287018914],"automargin":true,"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":"","hoverformat":".2f"},"annotations":[{"text":"Original Value","x":0.5,"y":0,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"top","annotationType":"axis","yshift":-21.917808219178088},{"text":"Lagged Value","x":0,"y":0.5,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xref":"paper","yref":"paper","textangle":-90,"xanchor":"right","yanchor":"center","annotationType":"axis","xshift":-21.917808219178081},{"text":"Lag: 1","x":0.16136660143509457,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 2","x":0.5,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 3","x":0.83863339856490537,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 4","x":0.16136660143509457,"y":0.64269406392694073,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 6","x":0.5,"y":0.64269406392694073,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 12","x":0.83863339856490537,"y":0.64269406392694073,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 24","x":0.16136660143509457,"y":0.30936073059360736,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.68949771689498},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"}],"yaxis":{"domain":[0.69063926940639275,1],"automargin":true,"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.32273320287018914,"y0":0.69063926940639275,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.32273320287018914,"y0":0,"y1":23.37899543378996,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.34393346379647749,"x1":0.65606653620352251,"y0":0.69063926940639275,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.34393346379647749,"x1":0.65606653620352251,"y0":0,"y1":23.37899543378996,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.67726679712981075,"x1":1,"y0":0.69063926940639275,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.67726679712981075,"x1":1,"y0":0,"y1":23.37899543378996,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.32273320287018914,"y0":0.35730593607305938,"y1":0.64269406392694073},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.32273320287018914,"y0":0,"y1":23.37899543378996,"yanchor":0.64269406392694073,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.34393346379647749,"x1":0.65606653620352251,"y0":0.35730593607305938,"y1":0.64269406392694073},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.34393346379647749,"x1":0.65606653620352251,"y0":0,"y1":23.37899543378996,"yanchor":0.64269406392694073,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.67726679712981075,"x1":1,"y0":0.35730593607305938,"y1":0.64269406392694073},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.67726679712981075,"x1":1,"y0":0,"y1":23.37899543378996,"yanchor":0.64269406392694073,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.32273320287018914,"y0":0,"y1":0.30936073059360736},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.32273320287018914,"y0":0,"y1":23.37899543378996,"yanchor":0.30936073059360736,"ysizemode":"pixel"}],"xaxis2":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.34393346379647749,0.65606653620352251],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y2","title":"","hoverformat":".2f"},"yaxis2":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.69063926940639275,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x2","title":"","hoverformat":".2f"},"xaxis3":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.67726679712981075,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"yaxis3":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.69063926940639275,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x3","title":"","hoverformat":".2f"},"xaxis4":{"type":"linear","autorange":false,"range":[9.9430000000000014,14.056999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.32273320287018914],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y4","title":"","hoverformat":".2f"},"yaxis4":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.35730593607305938,0.64269406392694073],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x4","title":"","hoverformat":".2f"},"xaxis5":{"type":"linear","autorange":false,"range":[9.9430000000000014,14.056999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.34393346379647749,0.65606653620352251],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y5","title":"","hoverformat":".2f"},"yaxis5":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.35730593607305938,0.64269406392694073],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x5","title":"","hoverformat":".2f"},"xaxis6":{"type":"linear","autorange":false,"range":[10.153,14.046999999999999],"tickmode":"array","ticktext":["11","12","13","14"],"tickvals":[11,12,13,14],"categoryorder":"array","categoryarray":["11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.67726679712981075,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y6","title":"","hoverformat":".2f"},"yaxis6":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.35730593607305938,0.64269406392694073],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x6","title":"","hoverformat":".2f"},"xaxis7":{"type":"linear","autorange":false,"range":[10.153,14.046999999999999],"tickmode":"array","ticktext":["11","12","13","14"],"tickvals":[11,12,13,14],"categoryorder":"array","categoryarray":["11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.32273320287018914],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y7","title":"","hoverformat":".2f"},"yaxis7":{"type":"linear","autorange":false,"range":[9.5440000000000005,14.075999999999999],"tickmode":"array","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.30936073059360736],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x7","title":"","hoverformat":".2f"},"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"44684d786632":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"44684d786632","visdat":{"44684d786632":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">output[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plots"</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotly_heatmap"</span>]]</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-35501a59b53e5e7bdbb1" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-35501a59b53e5e7bdbb1">{"x":{"data":[{"x":[1,2,3,4,5,6,7,8],"y":[1,2,3,4,5,6,7,8],"z":[[1,0.88966174925287733,0.88285203073749552,0.84848593080632662,0.83604229583993783,0.75306959148107222,0.50335792642374289,0],[0.88966174925287733,1,0.88980956631710717,0.88104251021938684,0.84725285131765138,0.77911614121849426,0.55532926521138071,0.038818708549495921],[0.88285203073749552,0.88980956631710717,1,0.88784519663140016,0.8793214784128468,0.83342434116462349,0.56548316952715805,0.069901554398295526],[0.84848593080632662,0.88104251021938684,0.88784519663140016,1,0.88409986502556681,0.84231765302357597,0.59569411775343462,0.09004776231142092],[0.83604229583993783,0.84725285131765138,0.8793214784128468,0.88409986502556681,1,0.87273377575934485,0.64894188568088551,0.14169444856076277],[0.75306959148107222,0.77911614121849426,0.83342434116462349,0.84231765302357597,0.87273377575934485,1,0.71973001846497353,0.18239046999941669],[0.50335792642374289,0.55532926521138071,0.56548316952715805,0.59569411775343462,0.64894188568088551,0.71973001846497353,1,0.42286623285778441],[0,0.038818708549495921,0.069901554398295526,0.09004776231142092,0.14169444856076277,0.18239046999941669,0.42286623285778441,1]],"text":[["name: value<br />data_names: value<br />value: 1.0000000","name: value_lag1<br />data_names: value<br />value: 0.9638430","name: value_lag2<br />data_names: value<br />value: 0.9616115","name: value_lag3<br />data_names: value<br />value: 0.9503500","name: value_lag4<br />data_names: value<br />value: 0.9462723","name: value_lag6<br />data_names: value<br />value: 0.9190827","name: value_lag12<br />data_names: value<br />value: 0.8372540","name: value_lag24<br />data_names: value<br />value: 0.6723074"],["name: value<br />data_names: value_lag1<br />value: 0.9638430","name: value_lag1<br />data_names: value_lag1<br />value: 1.0000000","name: value_lag2<br />data_names: value_lag1<br />value: 0.9638914","name: value_lag3<br />data_names: value_lag1<br />value: 0.9610185","name: value_lag4<br />data_names: value_lag1<br />value: 0.9499459","name: value_lag6<br />data_names: value_lag1<br />value: 0.9276180","name: value_lag12<br />data_names: value_lag1<br />value: 0.8542847","name: value_lag24<br />data_names: value_lag1<br />value: 0.6850280"],["name: value<br />data_names: value_lag2<br />value: 0.9616115","name: value_lag1<br />data_names: value_lag2<br />value: 0.9638914","name: value_lag2<br />data_names: value_lag2<br />value: 1.0000000","name: value_lag3<br />data_names: value_lag2<br />value: 0.9632477","name: value_lag4<br />data_names: value_lag2<br />value: 0.9604545","name: value_lag6<br />data_names: value_lag2<br />value: 0.9454144","name: value_lag12<br />data_names: value_lag2<br />value: 0.8576120","name: value_lag24<br />data_names: value_lag2<br />value: 0.6952136"],["name: value<br />data_names: value_lag3<br />value: 0.9503500","name: value_lag1<br />data_names: value_lag3<br />value: 0.9610185","name: value_lag2<br />data_names: value_lag3<br />value: 0.9632477","name: value_lag3<br />data_names: value_lag3<br />value: 1.0000000","name: value_lag4<br />data_names: value_lag3<br />value: 0.9620204","name: value_lag6<br />data_names: value_lag3<br />value: 0.9483287","name: value_lag12<br />data_names: value_lag3<br />value: 0.8675119","name: value_lag24<br />data_names: value_lag3<br />value: 0.7018153"],["name: value<br />data_names: value_lag4<br />value: 0.9462723","name: value_lag1<br />data_names: value_lag4<br />value: 0.9499459","name: value_lag2<br />data_names: value_lag4<br />value: 0.9604545","name: value_lag3<br />data_names: value_lag4<br />value: 0.9620204","name: value_lag4<br />data_names: value_lag4<br />value: 1.0000000","name: value_lag6<br />data_names: value_lag4<br />value: 0.9582958","name: value_lag12<br />data_names: value_lag4<br />value: 0.8849608","name: value_lag24<br />data_names: value_lag4<br />value: 0.7187396"],["name: value<br />data_names: value_lag6<br />value: 0.9190827","name: value_lag1<br />data_names: value_lag6<br />value: 0.9276180","name: value_lag2<br />data_names: value_lag6<br />value: 0.9454144","name: value_lag3<br />data_names: value_lag6<br />value: 0.9483287","name: value_lag4<br />data_names: value_lag6<br />value: 0.9582958","name: value_lag6<br />data_names: value_lag6<br />value: 1.0000000","name: value_lag12<br />data_names: value_lag6<br />value: 0.9081576","name: value_lag24<br />data_names: value_lag6<br />value: 0.7320754"],["name: value<br />data_names: value_lag12<br />value: 0.8372540","name: value_lag1<br />data_names: value_lag12<br />value: 0.8542847","name: value_lag2<br />data_names: value_lag12<br />value: 0.8576120","name: value_lag3<br />data_names: value_lag12<br />value: 0.8675119","name: value_lag4<br />data_names: value_lag12<br />value: 0.8849608","name: value_lag6<br />data_names: value_lag12<br />value: 0.9081576","name: value_lag12<br />data_names: value_lag12<br />value: 1.0000000","name: value_lag24<br />data_names: value_lag12<br />value: 0.8108775"],["name: value<br />data_names: value_lag24<br />value: 0.6723074","name: value_lag1<br />data_names: value_lag24<br />value: 0.6850280","name: value_lag2<br />data_names: value_lag24<br />value: 0.6952136","name: value_lag3<br />data_names: value_lag24<br />value: 0.7018153","name: value_lag4<br />data_names: value_lag24<br />value: 0.7187396","name: value_lag6<br />data_names: value_lag24<br />value: 0.7320754","name: value_lag12<br />data_names: value_lag24<br />value: 0.8108775","name: value_lag24<br />data_names: value_lag24<br />value: 1.0000000"]],"colorscale":[[0,"#FFFFFF"],[0.038818708549495921,"#F8FAFC"],[0.069901554398295526,"#F3F6FA"],[0.09004776231142092,"#EFF3F8"],[0.14169444856076277,"#E6ECF4"],[0.18239046999941669,"#DFE7F1"],[0.42286623285778441,"#B5C8DF"],[0.50335792642374289,"#A7BED9"],[0.55532926521138071,"#9DB7D5"],[0.56548316952715805,"#9CB6D4"],[0.59569411775343462,"#96B2D2"],[0.64894188568088551,"#8CACCE"],[0.71973001846497353,"#7FA3C9"],[0.75306959148107222,"#799FC6"],[0.77911614121849426,"#749CC4"],[0.83342434116462349,"#6A96C0"],[0.83604229583993783,"#6995C0"],[0.84231765302357597,"#6895C0"],[0.84725285131765138,"#6794BF"],[0.84848593080632662,"#6794BF"],[0.87273377575934485,"#6291BD"],[0.8793214784128468,"#6090BD"],[0.88104251021938684,"#6090BD"],[0.88285203073749552,"#6090BD"],[0.88409986502556681,"#6090BD"],[0.88784519663140016,"#5F8FBC"],[0.88966174925287733,"#5E8FBC"],[0.88980956631710717,"#5E8FBC"],[1,"#4682B4"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1],"y":[1],"name":"fb88052227babcfed2cdf665ba5ceac0","type":"scatter","mode":"markers","opacity":0,"hoverinfo":"skip","showlegend":false,"marker":{"color":[0,1],"colorscale":[[0,"#FFFFFF"],[0.0033444816053510356,"#FEFFFF"],[0.0066889632107024104,"#FEFEFE"],[0.010033444816053446,"#FDFEFE"],[0.013377926421404821,"#FDFDFE"],[0.016722408026755856,"#FCFDFE"],[0.020066889632106892,"#FBFCFD"],[0.023411371237458265,"#FBFCFD"],[0.026755852842809302,"#FAFBFD"],[0.030100334448160678,"#FAFBFD"],[0.033444816053511711,"#F9FBFC"],[0.036789297658862748,"#F9FAFC"],[0.040133779264214124,"#F8FAFC"],[0.043478260869565161,"#F7F9FC"],[0.04682274247491653,"#F7F9FB"],[0.050167224080267567,"#F6F8FB"],[0.053511705685618603,"#F6F8FB"],[0.05685618729096998,"#F5F7FB"],[0.060200668896321016,"#F4F7FA"],[0.063545150501672393,"#F4F7FA"],[0.066889632107023422,"#F3F6FA"],[0.070234113712374466,"#F3F6FA"],[0.073578595317725828,"#F2F5F9"],[0.076923076923076872,"#F2F5F9"],[0.080267558528428248,"#F1F4F9"],[0.083612040133779278,"#F0F4F9"],[0.086956521739130321,"#F0F4F8"],[0.090301003344481698,"#EFF3F8"],[0.093645484949832727,"#EFF3F8"],[0.096989966555184104,"#EEF2F8"],[0.10033444816053513,"#EDF2F7"],[0.10367892976588618,"#EDF1F7"],[0.10702341137123755,"#ECF1F7"],[0.11036789297658858,"#ECF0F7"],[0.11371237458193996,"#EBF0F6"],[0.11705685618729099,"#EAF0F6"],[0.12040133779264203,"#EAEFF6"],[0.12374581939799341,"#E9EFF6"],[0.12709030100334445,"#E9EEF5"],[0.13043478260869582,"#E8EEF5"],[0.13377926421404684,"#E8EDF5"],[0.13712374581939787,"#E7EDF5"],[0.14046822742474926,"#E6ECF4"],[0.14381270903010029,"#E6ECF4"],[0.14715719063545132,"#E5ECF4"],[0.15050167224080271,"#E5EBF4"],[0.15384615384615374,"#E4EBF3"],[0.15719063545150511,"#E3EAF3"],[0.16053511705685616,"#E3EAF3"],[0.16387959866220719,"#E2E9F3"],[0.16722408026755856,"#E2E9F2"],[0.17056856187290959,"#E1E9F2"],[0.17391304347826098,"#E1E8F2"],[0.17725752508361201,"#E0E8F2"],[0.18060200668896303,"#DFE7F1"],[0.18394648829431443,"#DFE7F1"],[0.18729096989966545,"#DEE6F1"],[0.19063545150501682,"#DEE6F1"],[0.19397993311036787,"#DDE5F0"],[0.1973244147157189,"#DCE5F0"],[0.20066889632107027,"#DCE5F0"],[0.20401337792642132,"#DBE4F0"],[0.20735785953177269,"#DBE4EF"],[0.21070234113712372,"#DAE3EF"],[0.21404682274247475,"#D9E3EF"],[0.21739130434782614,"#D9E2EF"],[0.22073578595317717,"#D8E2EE"],[0.22408026755852853,"#D8E2EE"],[0.22742474916387959,"#D7E1EE"],[0.23076923076923062,"#D7E1EE"],[0.23411371237458198,"#D6E0ED"],[0.23745819397993304,"#D5E0ED"],[0.2408026755852844,"#D5DFED"],[0.24414715719063543,"#D4DFED"],[0.24749163879598646,"#D4DFEC"],[0.25083612040133785,"#D3DEEC"],[0.2541806020066889,"#D2DEEC"],[0.25752508361204024,"#D2DDEC"],[0.2608695652173913,"#D1DDEB"],[0.2642140468227423,"#D1DCEB"],[0.26755852842809369,"#D0DCEB"],[0.27090301003344475,"#D0DCEB"],[0.27424749163879614,"#CFDBEA"],[0.27759197324414714,"#CEDBEA"],[0.2809364548494982,"#CEDAEA"],[0.28428093645484953,"#CDDAEA"],[0.28762541806020059,"#CDD9E9"],[0.29096989966555198,"#CCD9E9"],[0.29431438127090298,"#CBD9E9"],[0.29765886287625404,"#CBD8E9"],[0.30100334448160543,"#CAD8E8"],[0.30434782608695643,"#CAD7E8"],[0.30769230769230782,"#C9D7E8"],[0.31103678929765888,"#C8D6E8"],[0.31438127090300988,"#C8D6E7"],[0.31772575250836127,"#C7D6E7"],[0.32107023411371233,"#C7D5E7"],[0.32441471571906366,"#C6D5E7"],[0.32775919732441472,"#C6D4E6"],[0.33110367892976578,"#C5D4E6"],[0.33444816053511711,"#C4D3E6"],[0.33779264214046817,"#C4D3E6"],[0.34113712374581956,"#C3D3E5"],[0.34448160535117056,"#C3D2E5"],[0.34782608695652162,"#C2D2E5"],[0.35117056856187301,"#C1D1E5"],[0.35451505016722401,"#C1D1E4"],[0.3578595317725754,"#C0D0E4"],[0.3612040133779264,"#C0D0E4"],[0.36454849498327746,"#BFD0E4"],[0.36789297658862885,"#BFCFE3"],[0.37123745819397985,"#BECFE3"],[0.37458193979933124,"#BDCEE3"],[0.3779264214046823,"#BDCEE3"],[0.3812709030100333,"#BCCDE2"],[0.38461538461538469,"#BCCDE2"],[0.38795986622073575,"#BBCDE2"],[0.39130434782608708,"#BACCE2"],[0.39464882943143814,"#BACCE1"],[0.3979933110367892,"#B9CBE1"],[0.40133779264214053,"#B9CBE1"],[0.40468227424749159,"#B8CAE0"],[0.40802675585284298,"#B7CAE0"],[0.41137123745819398,"#B7CAE0"],[0.41471571906354504,"#B6C9E0"],[0.41806020066889643,"#B6C9DF"],[0.42140468227424743,"#B5C8DF"],[0.42474916387959882,"#B5C8DF"],[0.42809364548494983,"#B4C7DF"],[0.43143812709030088,"#B3C7DE"],[0.43478260869565227,"#B3C7DE"],[0.43812709030100327,"#B2C6DE"],[0.44147157190635467,"#B2C6DE"],[0.44481605351170572,"#B1C5DD"],[0.44816053511705672,"#B0C5DD"],[0.45150501672240811,"#B0C5DD"],[0.45484949832775917,"#AFC4DD"],[0.45819397993311051,"#AFC4DC"],[0.46153846153846156,"#AEC3DC"],[0.46488294314381262,"#ADC3DC"],[0.46822742474916396,"#ADC2DC"],[0.47157190635451501,"#ACC2DB"],[0.4749163879598664,"#ACC2DB"],[0.47826086956521741,"#ABC1DB"],[0.48160535117056846,"#AAC1DB"],[0.48494983277591985,"#AAC0DA"],[0.48829431438127086,"#A9C0DA"],[0.49163879598662225,"#A9BFDA"],[0.4949832775919733,"#A8BFDA"],[0.4983277591973243,"#A7BFD9"],[0.5016722408026757,"#A7BED9"],[0.50501672240802675,"#A6BED9"],[0.50836120401337814,"#A6BDD9"],[0.51170568561872909,"#A5BDD8"],[0.51505016722408015,"#A5BDD8"],[0.51839464882943154,"#A4BCD8"],[0.52173913043478259,"#A3BCD8"],[0.52508361204013398,"#A3BBD7"],[0.52842809364548504,"#A2BBD7"],[0.53177257525083599,"#A2BAD7"],[0.53511705685618738,"#A1BAD7"],[0.53846153846153844,"#A0BAD6"],[0.54180602006688983,"#A0B9D6"],[0.54515050167224088,"#9FB9D6"],[0.54849498327759183,"#9FB8D6"],[0.55183946488294322,"#9EB8D5"],[0.55518394648829428,"#9DB8D5"],[0.55852842809364567,"#9DB7D5"],[0.56187290969899673,"#9CB7D5"],[0.56521739130434778,"#9CB6D4"],[0.56856187290969906,"#9BB6D4"],[0.57190635451505012,"#9AB5D4"],[0.57525083612040151,"#9AB5D4"],[0.57859531772575257,"#99B5D3"],[0.58193979933110362,"#99B4D3"],[0.58528428093645501,"#98B4D3"],[0.58862876254180596,"#97B3D3"],[0.59197324414715735,"#97B3D2"],[0.59531772575250841,"#96B3D2"],[0.59866220735785947,"#96B2D2"],[0.60200668896321086,"#95B2D2"],[0.60535117056856191,"#94B1D1"],[0.60869565217391319,"#94B1D1"],[0.61204013377926425,"#93B0D1"],[0.61538461538461531,"#93B0D1"],[0.6187290969899667,"#92B0D0"],[0.62207357859531776,"#91AFD0"],[0.62541806020066915,"#91AFD0"],[0.62876254180602009,"#90AED0"],[0.63210702341137115,"#90AECF"],[0.63545150501672254,"#8FAECF"],[0.6387959866220736,"#8EADCF"],[0.64214046822742499,"#8EADCF"],[0.64548494983277593,"#8DACCE"],[0.64882943143812699,"#8CACCE"],[0.65217391304347838,"#8CACCE"],[0.65551839464882944,"#8BABCE"],[0.65886287625418083,"#8BABCD"],[0.66220735785953189,"#8AAACD"],[0.66555183946488283,"#89AACD"],[0.66889632107023422,"#89A9CD"],[0.67224080267558528,"#88A9CC"],[0.67558528428093667,"#88A9CC"],[0.67892976588628773,"#87A8CC"],[0.68227424749163879,"#86A8CC"],[0.68561872909699006,"#86A7CB"],[0.68896321070234112,"#85A7CB"],[0.69230769230769251,"#84A7CB"],[0.69565217391304357,"#84A6CB"],[0.69899665551839463,"#83A6CA"],[0.70234113712374602,"#83A5CA"],[0.70568561872909696,"#82A5CA"],[0.70903010033444835,"#81A5CA"],[0.71237458193979941,"#81A4C9"],[0.71571906354515047,"#80A4C9"],[0.71906354515050186,"#80A3C9"],[0.72240802675585281,"#7FA3C9"],[0.7257525083612042,"#7EA3C8"],[0.72909698996655525,"#7EA2C8"],[0.73244147157190631,"#7DA2C8"],[0.7357859531772577,"#7CA1C8"],[0.73913043478260876,"#7CA1C7"],[0.74247491638796004,"#7BA1C7"],[0.7458193979933111,"#7BA0C7"],[0.74916387959866215,"#7AA0C7"],[0.75250836120401354,"#799FC6"],[0.7558528428093646,"#799FC6"],[0.75919732441471599,"#789FC6"],[0.76254180602006694,"#779EC6"],[0.76588628762541799,"#779EC5"],[0.76923076923076905,"#769DC5"],[0.77257525083612044,"#759DC5"],[0.77591973244147183,"#759CC5"],[0.77926421404682278,"#749CC4"],[0.78260869565217384,"#749CC4"],[0.78595317725752489,"#739BC4"],[0.78929765886287628,"#729BC4"],[0.79264214046822767,"#729AC3"],[0.79598662207357873,"#719AC3"],[0.79933110367892968,"#709AC3"],[0.80267558528428073,"#7099C3"],[0.80602006688963213,"#6F99C2"],[0.80936454849498352,"#6E98C2"],[0.81270903010033457,"#6E98C2"],[0.81605351170568563,"#6D98C2"],[0.81939799331103658,"#6C97C1"],[0.82274247491638797,"#6C97C1"],[0.82608695652173936,"#6B96C1"],[0.82943143812709041,"#6A96C1"],[0.83277591973244147,"#6A96C0"],[0.83612040133779242,"#6995C0"],[0.83946488294314381,"#6895C0"],[0.8428093645484952,"#6894C0"],[0.84615384615384626,"#6794BF"],[0.84949832775919731,"#6794BF"],[0.85284280936454837,"#6693BF"],[0.85618729096989965,"#6593BF"],[0.85953177257525104,"#6492BE"],[0.8628762541806021,"#6492BE"],[0.86622073578595316,"#6392BE"],[0.86956521739130421,"#6291BE"],[0.8729096989966556,"#6291BD"],[0.87625418060200688,"#6191BD"],[0.87959866220735794,"#6090BD"],[0.882943143812709,"#6090BD"],[0.88628762541806005,"#5F8FBC"],[0.88963210702341144,"#5E8FBC"],[0.89297658862876284,"#5E8FBC"],[0.89632107023411378,"#5D8EBC"],[0.89966555183946484,"#5C8EBB"],[0.9030100334448159,"#5C8DBB"],[0.90635451505016729,"#5B8DBB"],[0.90969899665551868,"#5A8DBB"],[0.91304347826086973,"#598CBA"],[0.91638795986622068,"#598CBA"],[0.91973244147157174,"#588BBA"],[0.92307692307692313,"#578BBA"],[0.92642140468227452,"#578BB9"],[0.92976588628762558,"#568AB9"],[0.93311036789297652,"#558AB9"],[0.93645484949832758,"#5489B9"],[0.93979933110367897,"#5489B8"],[0.94314381270903036,"#5389B8"],[0.94648829431438142,"#5288B8"],[0.94983277591973247,"#5288B8"],[0.95317725752508342,"#5187B7"],[0.95652173913043481,"#5087B7"],[0.9598662207357862,"#4F87B7"],[0.96321070234113726,"#4F86B7"],[0.96655518394648832,"#4E86B6"],[0.96989966555183937,"#4D85B6"],[0.97324414715719065,"#4C85B6"],[0.97658862876254204,"#4C85B6"],[0.9799331103678931,"#4B84B5"],[0.98327759197324416,"#4A84B5"],[0.98662207357859522,"#4984B5"],[0.98996655518394661,"#4883B5"],[0.99331103678929789,"#4883B4"],[0.99665551839464894,"#4782B4"],[1,"#4682B4"]],"colorbar":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"thickness":23.039999999999996,"title":"Correlation","titlefont":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"tickmode":"array","ticktext":["0.7","0.8","0.9","1.0"],"tickvals":[0.085892949426396123,0.39003974406204178,0.69418653869768798,0.99833333333333329],"tickfont":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498},"ticklen":2,"len":0.5}},"xaxis":"x","yaxis":"y","frame":null}],"layout":{"margin":{"t":26.228310502283104,"r":7.3059360730593621,"b":25.570776255707766,"l":75.251141552511427},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.40000000000000002,8.5999999999999996],"tickmode":"array","ticktext":["value","value_lag1","value_lag2","value_lag3","value_lag4","value_lag6","value_lag12","value_lag24"],"tickvals":[1,2,3,4,5,6,7,8],"categoryorder":"array","categoryarray":["value","value_lag1","value_lag2","value_lag3","value_lag4","value_lag6","value_lag12","value_lag24"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.40000000000000002,8.5999999999999996],"tickmode":"array","ticktext":["value","value_lag1","value_lag2","value_lag3","value_lag4","value_lag6","value_lag12","value_lag24"],"tickvals":[1,2,3,4,5,6,7,8],"categoryorder":"array","categoryarray":["value","value_lag1","value_lag2","value_lag3","value_lag4","value_lag6","value_lag12","value_lag24"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498},"title":{"text":"Correlation","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"446826362555":{"x":{},"y":{},"fill":{},"type":"heatmap"}},"cur_data":"446826362555","visdat":{"446826362555":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>We can tell from the data, and from the automatic stationarization that the data is highly correlated at lag 1. So lags 2, 3, …, etc are not necessary. We can see the linear correlation fall apart the further the lags</p>
<p>Let’s go ahead and model it and see what happens.</p>
</section>
<section id="model-the-data" class="level1">
<h1>Model the data</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">splits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">time_series_split</span>(</span>
<span id="cb19-2">  df_growth_augment_tbl, </span>
<span id="cb19-3">  date_col, </span>
<span id="cb19-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assess=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, </span>
<span id="cb19-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb19-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cumulative =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb19-7">  )</span>
<span id="cb19-8"></span>
<span id="cb19-9">ts_aa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_auto_arima</span>(</span>
<span id="cb19-10">  df_growth_augment_tbl,</span>
<span id="cb19-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb19-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_col =</span> date_col,</span>
<span id="cb19-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_col =</span> value,</span>
<span id="cb19-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.rsamp_obj =</span> splits,</span>
<span id="cb19-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.formula =</span> value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .,</span>
<span id="cb19-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.grid_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb19-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.cv_slice_limit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb19-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.tune =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb19-19">)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>frequency = 12 observations per 1 year</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">ts_aa[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recipe_info"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$recipe_call
recipe(.data = df_growth_augment_tbl, .date_col = date_col, .value_col = value, 
    .formula = value ~ ., .rsamp_obj = splits, .tune = FALSE, 
    .grid_size = 10, .num_cores = 2, .cv_slice_limit = 12)

$recipe_syntax
[1] "ts_arima_recipe &lt;-"                                                                                                                                                                                              
[2] "\n  recipe(.data = df_growth_augment_tbl, .date_col = date_col, .value_col = value, \n    .formula = value ~ ., .rsamp_obj = splits, .tune = FALSE, .grid_size = 10, \n    .num_cores = 2, .cv_slice_limit = 12)"

$rec_obj</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Recipe ──────────────────────────────────────────────────────────────────────</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Inputs </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Number of variables by role</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>outcome:   1
predictor: 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">ts_aa[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_info"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$model_spec
ARIMA Regression Model Specification (regression)

Computational engine: auto_arima 


$wflw
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: arima_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
ARIMA Regression Model Specification (regression)

Computational engine: auto_arima 


$fitted_wflw
══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: arima_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Series: outcome 
Regression with ARIMA(0,1,2) errors 

Coefficients:
         ma1      ma2   drift  growth_rate_value  stationary
      0.4626  -0.4013  0.0233            -0.0021      0.5168
s.e.  0.0794   0.0849  0.0131             0.0098      0.0831

sigma^2 = 0.02124:  log likelihood = 70.34
AIC=-128.69   AICc=-128.04   BIC=-111.21

$was_tuned
[1] "not_tuned"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">ts_aa[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_calibration"</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>]]</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-00e044b6303f46715b2a" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-00e044b6303f46715b2a">{"x":{"data":[{"x":["1991-01-01","1991-02-01","1991-03-01","1991-04-01","1991-05-01","1991-06-01","1991-07-01","1991-08-01","1991-09-01","1991-10-01","1991-11-01","1991-12-01","1992-01-01","1992-02-01","1992-03-01","1992-04-01","1992-05-01","1992-06-01","1992-07-01","1992-08-01","1992-09-01","1992-10-01","1992-11-01","1992-12-01","1993-01-01","1993-02-01","1993-03-01","1993-04-01","1993-05-01","1993-06-01","1993-07-01","1993-08-01","1993-09-01","1993-10-01","1993-11-01","1993-12-01","1994-01-01","1994-02-01","1994-03-01","1994-04-01","1994-05-01","1994-06-01","1994-07-01","1994-08-01","1994-09-01","1994-10-01","1994-11-01","1994-12-01","1995-01-01","1995-02-01","1995-03-01","1995-04-01","1995-05-01","1995-06-01","1995-07-01","1995-08-01","1995-09-01","1995-10-01","1995-11-01","1995-12-01","1996-01-01","1996-02-01","1996-03-01","1996-04-01","1996-05-01","1996-06-01","1996-07-01","1996-08-01","1996-09-01","1996-10-01","1996-11-01","1996-12-01","1997-01-01","1997-02-01","1997-03-01","1997-04-01","1997-05-01","1997-06-01","1997-07-01","1997-08-01","1997-09-01","1997-10-01","1997-11-01","1997-12-01","1998-01-01","1998-02-01","1998-03-01","1998-04-01","1998-05-01","1998-06-01","1998-07-01","1998-08-01","1998-09-01","1998-10-01","1998-11-01","1998-12-01","1999-01-01","1999-02-01","1999-03-01","1999-04-01","1999-05-01","1999-06-01","1999-07-01","1999-08-01","1999-09-01","1999-10-01","1999-11-01","1999-12-01","2000-01-01","2000-02-01","2000-03-01","2000-04-01","2000-05-01","2000-06-01","2000-07-01","2000-08-01","2000-09-01","2000-10-01","2000-11-01","2000-12-01","2001-01-01","2001-02-01","2001-03-01","2001-04-01","2001-05-01","2001-06-01","2001-07-01","2001-08-01","2001-09-01","2001-10-01","2001-11-01","2001-12-01","2002-01-01","2002-02-01","2002-03-01","2002-04-01","2002-05-01","2002-06-01","2002-07-01","2002-08-01","2002-09-01","2002-10-01","2002-11-01","2002-12-01","2003-01-01","2003-02-01","2003-03-01","2003-04-01","2003-05-01","2003-06-01"],"y":[10.01,10.07,10.32,9.75,10.33,10.130000000000001,10.359999999999999,10.32,10.130000000000001,10.16,10.58,10.619999999999999,10.859999999999999,11.199999999999999,10.74,10.56,10.48,10.77,11.33,10.960000000000001,11.16,11.699999999999999,11.390000000000001,11.42,11.94,11.24,11.59,10.960000000000001,11.4,11.02,11.01,11.23,11.33,10.83,10.84,11.140000000000001,10.380000000000001,10.9,11.050000000000001,11.109999999999999,11.01,11.220000000000001,11.210000000000001,11.91,11.69,10.93,10.99,11.01,10.84,10.76,10.77,10.880000000000001,10.49,10.5,11,10.98,10.609999999999999,10.48,10.529999999999999,11.07,10.609999999999999,10.859999999999999,10.34,10.779999999999999,10.800000000000001,10.33,10.44,10.5,10.75,10.4,10.4,10.34,10.550000000000001,10.460000000000001,10.82,10.91,10.869999999999999,10.67,11.109999999999999,10.880000000000001,11.279999999999999,11.27,11.44,11.52,12.1,11.83,12.619999999999999,12.41,12.43,12.73,13.01,12.74,12.73,12.76,12.92,12.640000000000001,12.789999999999999,13.050000000000001,12.69,13.01,12.9,13.119999999999999,12.470000000000001,12.470000000000001,12.94,13.1,12.91,13.390000000000001,13.130000000000001,13.34,13.34,13.140000000000001,13.49,13.869999999999999,13.390000000000001,13.59,13.27,13.699999999999999,13.199999999999999,13.32,13.15,13.300000000000001,12.94,13.289999999999999,13.26,13.08,13.24,13.31,13.52,13.02,13.25,13.119999999999999,13.26,13.109999999999999,13.300000000000001,13.06,13.32,13.1,13.27,13.640000000000001,13.58,13.869999999999999,13.529999999999999,13.41,13.25,13.5,13.58,13.51,13.77,13.4],"text":[".index: 1991-01-01<br />.value: 10.01000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-02-01<br />.value: 10.07000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-03-01<br />.value: 10.32000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-04-01<br />.value:  9.75000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-05-01<br />.value: 10.33000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-06-01<br />.value: 10.13000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-07-01<br />.value: 10.36000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-08-01<br />.value: 10.32000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-09-01<br />.value: 10.13000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-10-01<br />.value: 10.16000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-11-01<br />.value: 10.58000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1991-12-01<br />.value: 10.62000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-01-01<br />.value: 10.86000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-02-01<br />.value: 11.20000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-03-01<br />.value: 10.74000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-04-01<br />.value: 10.56000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-05-01<br />.value: 10.48000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-06-01<br />.value: 10.77000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-07-01<br />.value: 11.33000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-08-01<br />.value: 10.96000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-09-01<br />.value: 11.16000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-10-01<br />.value: 11.70000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-11-01<br />.value: 11.39000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1992-12-01<br />.value: 11.42000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-01-01<br />.value: 11.94000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-02-01<br />.value: 11.24000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-03-01<br />.value: 11.59000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-04-01<br />.value: 10.96000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-05-01<br />.value: 11.40000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-06-01<br />.value: 11.02000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-07-01<br />.value: 11.01000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-08-01<br />.value: 11.23000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-09-01<br />.value: 11.33000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-10-01<br />.value: 10.83000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-11-01<br />.value: 10.84000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1993-12-01<br />.value: 11.14000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-01-01<br />.value: 10.38000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-02-01<br />.value: 10.90000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-03-01<br />.value: 11.05000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-04-01<br />.value: 11.11000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-05-01<br />.value: 11.01000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-06-01<br />.value: 11.22000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-07-01<br />.value: 11.21000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-08-01<br />.value: 11.91000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-09-01<br />.value: 11.69000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-10-01<br />.value: 10.93000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-11-01<br />.value: 10.99000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1994-12-01<br />.value: 11.01000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-01-01<br />.value: 10.84000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-02-01<br />.value: 10.76000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-03-01<br />.value: 10.77000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-04-01<br />.value: 10.88000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-05-01<br />.value: 10.49000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-06-01<br />.value: 10.50000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-07-01<br />.value: 11.00000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-08-01<br />.value: 10.98000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-09-01<br />.value: 10.61000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-10-01<br />.value: 10.48000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-11-01<br />.value: 10.53000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1995-12-01<br />.value: 11.07000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-01-01<br />.value: 10.61000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-02-01<br />.value: 10.86000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-03-01<br />.value: 10.34000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-04-01<br />.value: 10.78000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-05-01<br />.value: 10.80000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-06-01<br />.value: 10.33000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-07-01<br />.value: 10.44000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-08-01<br />.value: 10.50000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-09-01<br />.value: 10.75000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-10-01<br />.value: 10.40000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-11-01<br />.value: 10.40000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1996-12-01<br />.value: 10.34000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-01-01<br />.value: 10.55000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-02-01<br />.value: 10.46000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-03-01<br />.value: 10.82000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-04-01<br />.value: 10.91000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-05-01<br />.value: 10.87000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-06-01<br />.value: 10.67000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-07-01<br />.value: 11.11000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-08-01<br />.value: 10.88000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-09-01<br />.value: 11.28000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-10-01<br />.value: 11.27000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-11-01<br />.value: 11.44000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1997-12-01<br />.value: 11.52000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-01-01<br />.value: 12.10000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-02-01<br />.value: 11.83000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-03-01<br />.value: 12.62000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-04-01<br />.value: 12.41000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-05-01<br />.value: 12.43000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-06-01<br />.value: 12.73000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-07-01<br />.value: 13.01000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-08-01<br />.value: 12.74000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-09-01<br />.value: 12.73000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-10-01<br />.value: 12.76000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-11-01<br />.value: 12.92000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1998-12-01<br />.value: 12.64000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-01-01<br />.value: 12.79000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-02-01<br />.value: 13.05000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-03-01<br />.value: 12.69000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-04-01<br />.value: 13.01000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-05-01<br />.value: 12.90000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-06-01<br />.value: 13.12000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-07-01<br />.value: 12.47000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-08-01<br />.value: 12.47000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-09-01<br />.value: 12.94000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-10-01<br />.value: 13.10000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-11-01<br />.value: 12.91000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1999-12-01<br />.value: 13.39000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-01-01<br />.value: 13.13000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-02-01<br />.value: 13.34000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-03-01<br />.value: 13.34000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-04-01<br />.value: 13.14000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-05-01<br />.value: 13.49000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-06-01<br />.value: 13.87000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-07-01<br />.value: 13.39000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-08-01<br />.value: 13.59000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-09-01<br />.value: 13.27000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-10-01<br />.value: 13.70000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-11-01<br />.value: 13.20000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2000-12-01<br />.value: 13.32000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-01-01<br />.value: 13.15000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-02-01<br />.value: 13.30000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-03-01<br />.value: 12.94000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-04-01<br />.value: 13.29000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-05-01<br />.value: 13.26000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-06-01<br />.value: 13.08000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-07-01<br />.value: 13.24000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-08-01<br />.value: 13.31000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-09-01<br />.value: 13.52000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-10-01<br />.value: 13.02000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-11-01<br />.value: 13.25000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2001-12-01<br />.value: 13.12000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-01-01<br />.value: 13.26000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-02-01<br />.value: 13.11000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-03-01<br />.value: 13.30000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-04-01<br />.value: 13.06000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-05-01<br />.value: 13.32000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-06-01<br />.value: 13.10000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-07-01<br />.value: 13.27000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-08-01<br />.value: 13.64000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-09-01<br />.value: 13.58000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-10-01<br />.value: 13.87000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-11-01<br />.value: 13.53000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2002-12-01<br />.value: 13.41000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2003-01-01<br />.value: 13.25000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2003-02-01<br />.value: 13.50000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2003-03-01<br />.value: 13.58000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2003-04-01<br />.value: 13.51000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2003-05-01<br />.value: 13.77000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 2003-06-01<br />.value: 13.40000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(44,62,80,1)","dash":"solid"},"hoveron":"points","name":"ACTUAL","legendgroup":"ACTUAL","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":["2002-07-01","2002-08-01","2002-09-01","2002-10-01","2002-11-01","2002-12-01","2003-01-01","2003-02-01","2003-03-01","2003-04-01","2003-05-01","2003-06-01"],"y":[13.27294431882347,13.420833780760379,13.228607590339724,13.427448892827172,13.134680540599621,13.268434621128904,13.271700359726681,13.500503157590177,13.43863398908989,13.386714724422124,13.575500859903839,13.282783703690459],"text":[".index: 2002-07-01<br />.value: 13.27294<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2002-08-01<br />.value: 13.42083<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2002-09-01<br />.value: 13.22861<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2002-10-01<br />.value: 13.42745<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2002-11-01<br />.value: 13.13468<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2002-12-01<br />.value: 13.26843<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2003-01-01<br />.value: 13.27170<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2003-02-01<br />.value: 13.50050<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2003-03-01<br />.value: 13.43863<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2003-04-01<br />.value: 13.38671<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2003-05-01<br />.value: 13.57550<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS",".index: 2003-06-01<br />.value: 13.28278<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS<br />.color_mod: 1_REGRESSION WITH ARIMA(0,1,2) ERRORS"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(227,26,28,1)","dash":"solid"},"hoveron":"points","name":"1_REGRESSION WITH ARIMA(0,1,2) ERRORS","legendgroup":"1_REGRESSION WITH ARIMA(0,1,2) ERRORS","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.762557077625573,"r":7.3059360730593621,"b":25.570776255707766,"l":22.648401826484022},"plot_bgcolor":"rgba(255,255,255,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724},"title":{"text":"Forecast Plot","font":{"color":"rgba(44,62,80,1)","family":"","size":17.534246575342465},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"date","autorange":true,"range":["1990-05-19","2004-01-13"],"tickmode":"auto","ticktext":["1995","2000"],"tickvals":[9131,10957],"categoryorder":"array","categoryarray":["1995","2000"],"nticks":null,"ticks":"outside","tickcolor":"rgba(204,204,204,1)","ticklen":3.6529680365296811,"tickwidth":0.22139200221392005,"showticklabels":true,"tickfont":{"color":"rgba(44,62,80,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(204,204,204,1)","gridwidth":0.22139200221392005,"zeroline":false,"anchor":"y","title":{"text":"","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":true,"range":[9.5440000000000005,14.075999999999999],"tickmode":"auto","ticktext":["10","11","12","13","14"],"tickvals":[10,11,12,13,14],"categoryorder":"array","categoryarray":["10","11","12","13","14"],"nticks":null,"ticks":"outside","tickcolor":"rgba(204,204,204,1)","ticklen":3.6529680365296811,"tickwidth":0.22139200221392005,"showticklabels":true,"tickfont":{"color":"rgba(44,62,80,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(204,204,204,1)","gridwidth":0.22139200221392005,"zeroline":false,"anchor":"x","title":{"text":"","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":"transparent","line":{"color":"rgba(44,62,80,1)","width":0.33208800332088001,"linetype":"solid"},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.8897637795275593,"font":{"color":"rgba(44,62,80,1)","family":"","size":11.68949771689498},"title":{"text":"Legend","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"446869134a3f":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"446869134a3f","visdat":{"446869134a3f":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">ts_aa[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_calibration"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$plot

$calibration_tbl
# Modeltime Table
# A tibble: 1 × 5
  .model_id .model     .model_desc                       .type .calibration_data
      &lt;int&gt; &lt;list&gt;     &lt;chr&gt;                             &lt;chr&gt; &lt;list&gt;           
1         1 &lt;workflow&gt; REGRESSION WITH ARIMA(0,1,2) ERR… Test  &lt;tibble [12 × 4]&gt;

$model_accuracy
# A tibble: 1 × 9
  .model_id .model_desc                .type   mae  mape  mase smape  rmse   rsq
      &lt;int&gt; &lt;chr&gt;                      &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;
1         1 REGRESSION WITH ARIMA(0,1… Test  0.179  1.32 0.832  1.33 0.229 0.307</code></pre>
</div>
</div>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>This in short is a very simple practical example of how to use the <code>healthyR.ts</code> package. This post was not meant to be a comprehensive guide to time series analysis, but rather a simple example of how to use the package. The package is still in development and will be updated with more features and functions in the future.</p>
<p>Happy Coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-20/</guid>
  <pubDate>Thu, 20 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Extracting Data from Another Workbook Using VBA and Executing It from R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-19/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When working with Excel files, you may need to extract data from one workbook and use it in another. This can be done manually by copying and pasting the data, but it can be time-consuming and error-prone, especially when dealing with large datasets. One way to automate this process is by using Visual Basic for Applications (VBA) to extract the data from one workbook and execute the VBA code from R.</p>
<p>In this blog post, I’ll walk you through the process of extracting data from another workbook using VBA and how to execute this from R. We’ll use the data in <code>Sheet1</code> from an example workbook.</p>
</section>
<section id="extracting-data-from-another-workbook-using-vba" class="level1">
<h1>Extracting Data from Another Workbook Using VBA</h1>
<section id="step-1-setting-up-the-vba-code" class="level2">
<h2 class="anchored" data-anchor-id="step-1-setting-up-the-vba-code">Step 1: Setting Up the VBA Code</h2>
<p>First, we need to write a VBA script that will open another workbook, extract data from <code>Sheet1</code>, and return this data. Here’s a simple VBA code to accomplish this:</p>
<ol type="1">
<li>Open the VBA editor by pressing <code>Alt + F11</code>.</li>
<li>Insert a new module by right-clicking on any existing module or the workbook name, then selecting <code>Insert &gt; Module</code>.</li>
<li>Copy and paste the following VBA code into the module:</li>
</ol>
<pre class="vba"><code>Sub ExtractData()
    Dim sourceWorkbook As Workbook
    Dim targetWorkbook As Workbook
    Dim sourceSheet As Worksheet
    Dim targetSheet As Worksheet
    Dim sourceRange As Range
    Dim targetRange As Range

    ' Define the path to the source workbook
    Dim sourceFilePath As String
    sourceFilePath = "C:\Users\ssanders\Documents\GitHub\steveondata\posts\2024-06-19\random_data.xlsx" ' Change this to your actual file path

    ' Open the source workbook
    Set sourceWorkbook = Workbooks.Open(sourceFilePath)
    Set sourceSheet = sourceWorkbook.Sheets("Sheet1")
    Set sourceRange = sourceSheet.Range("A1:B30") ' Adjust the range as needed

    ' Open the target workbook
    Set targetWorkbook = ThisWorkbook
    Set targetSheet = targetWorkbook.Sheets("Sheet1")
    Set targetRange = targetSheet.Range("A1:B30") ' Adjust the range as needed

    ' Clear the target range before pasting
    targetRange.Clear

    ' Copy the data from source to target
    sourceRange.Copy Destination:=targetRange

    ' Close the source workbook without saving
    sourceWorkbook.Close SaveChanges:=False

    ' Save and close the target workbook
    targetWorkbook.Save
    targetWorkbook.Close SaveChanges:=True
    
    ' Quit Excel
    Application.Quit
End Sub</code></pre>
<p>This script opens another workbook, copies the data from <code>Sheet1</code>, and pastes it into the current workbook’s <code>Sheet1</code>. Modify the <code>sourceFilePath</code> to the location of your source workbook and adjust the ranges as necessary. The data was already in a workbook and thus we knew the dimensions of the data.</p>
</section>
<section id="step-2-executing-the-vba-code-from-r" class="level2">
<h2 class="anchored" data-anchor-id="step-2-executing-the-vba-code-from-r">Step 2: Executing the VBA Code from R</h2>
<p>Now that we have the VBA code ready, let’s write some R code to execute this VBA macro. We’ll use the <code>RDCOMClient</code> package to interact with Excel from R.</p>
<ol type="1">
<li>Install the <code>RDCOMClient</code> package if you haven’t already:</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RDCOMClient"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repos =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://www.omegahat.net/R"</span>)</span></code></pre></div>
</div>
<ol start="2" type="1">
<li>Load the package and write the R code to run the VBA macro:</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RDCOMClient)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path to your Excel workbook containing the VBA macro</span></span>
<span id="cb3-4">excelFilePath <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/Users/ssanders/Documents/GitHub/steveondata/posts/2024-06-19/get_data_from_another_workbook.xlsm"</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a COM object to interact with Excel</span></span>
<span id="cb3-7">excelApp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">COMCreate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excel.Application"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the workbook</span></span>
<span id="cb3-10">workbook <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> excelApp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Workbooks</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Open</span>(excelFilePath)</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make Excel visible (optional)</span></span>
<span id="cb3-13">excelApp[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Visible"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the VBA macro</span></span>
<span id="cb3-16">excelApp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Run</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ExtractData"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Close the workbook without saving</span></span>
<span id="cb5-2">workbook<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Close</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quit Excel</span></span>
<span id="cb7-2">excelApp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Quit</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Release COM object</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(excelApp, workbook)</span></code></pre></div>
</div>
<p>This R script creates a COM object to interact with Excel, opens the workbook containing our VBA macro, runs the macro, and then quits Excel. Make sure to modify the <code>excelFilePath</code> to point to your actual workbook.</p>
<p>Now let’s see if it actually worked:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readxl)</span>
<span id="cb10-2"></span>
<span id="cb10-3">f_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C:/Users/ssanders/Documents/GitHub/steveondata/posts/2024-06-19/random_data.xlsx"</span></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(f_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sheet =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sheet1"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col_names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) </span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>New names:
• `` -&gt; `...1`</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 30 × 1
     ...1
    &lt;dbl&gt;
 1 -0.371
 2 -1.00 
 3  0.226
 4 -0.323
 5 -0.142
 6  1.19 
 7 -0.827
 8  0.715
 9 -0.105
10 -1.06 
# ℹ 20 more rows</code></pre>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this post, we’ve covered how to set up a VBA macro to extract data from another workbook and how to execute this macro from R using the <code>RDCOMClient</code> package. This approach allows you to leverage the power of VBA for Excel automation while controlling the process from R, providing a seamless integration between the two environments.</p>
<p>Feel free to adjust the VBA code and R script to suit your specific needs. Happy coding!</p>
<hr>
<p>For more information on integrating R with other tools, check out my other posts at www.spsanderson.com/steveondata/.</p>
<p>If you have any questions or run into issues, don’t hesitate to reach out on LinkedIn or Mastodon. Let’s keep the conversation going!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>vba</category>
  <category>excel</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-19/</guid>
  <pubDate>Wed, 19 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Add Leading Zeros to Numbers in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-06-18/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hello! Today, we’re going to discuss a common yet essential task in data manipulation: adding leading zeros to numbers. This might come in handy when dealing with IDs, ZIP codes, or any situation where a fixed-width numeric format is needed. We’ll be exploring this using base R, keeping things simple and straightforward.</p>
</section>
<section id="why-add-leading-zeros" class="level1">
<h1>Why Add Leading Zeros?</h1>
<p>Sometimes, we need our numbers to have a specific format, especially when we’re working with identifiers. For instance, ZIP codes in the US are typically five digits long. If you have a ZIP code like “123”, you might want it to be displayed as “00123”. Adding leading zeros ensures consistency in data presentation.</p>
</section>
<section id="the-base-r-way" class="level1">
<h1>The Base R Way</h1>
<p>Let’s break down the process step-by-step.</p>
<section id="step-1-converting-numbers-to-strings" class="level2">
<h2 class="anchored" data-anchor-id="step-1-converting-numbers-to-strings">Step 1: Converting Numbers to Strings</h2>
<p>First, we need to convert our numbers to character strings. This is because leading zeros don’t hold any significance in numeric form but are essential in string form.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">number <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb1-2">str_number <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(number)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(str_number)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "123"</code></pre>
</div>
</div>
</section>
<section id="step-2-adding-leading-zeros" class="level2">
<h2 class="anchored" data-anchor-id="step-2-adding-leading-zeros">Step 2: Adding Leading Zeros</h2>
<p>We can use the <code>sprintf()</code> function in base R to add leading zeros. The <code>sprintf()</code> function is powerful and versatile for string formatting.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">number <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb3-2">formatted_number <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%05d"</span>, number)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(formatted_number)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "00123"</code></pre>
</div>
</div>
<p>Here’s what’s happening:</p>
<ul>
<li><code>"%05d"</code> is the format specifier.</li>
<li><code>%d</code> tells <code>sprintf()</code> that we’re dealing with an integer.</li>
<li><code>05</code> indicates that the output should be 5 characters wide, with leading zeros added if necessary.</li>
</ul>
</section>
<section id="step-3-applying-to-a-vector" class="level2">
<h2 class="anchored" data-anchor-id="step-3-applying-to-a-vector">Step 3: Applying to a Vector</h2>
<p>Often, you’ll be working with a vector of numbers. Let’s see how to apply this to each element in a vector.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">numbers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">456</span>)</span>
<span id="cb5-2">formatted_numbers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%05d"</span>, numbers)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(formatted_numbers)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "00001" "00023" "00456"</code></pre>
</div>
</div>
</section>
<section id="step-4-dealing-with-non-numeric-input" class="level2">
<h2 class="anchored" data-anchor-id="step-4-dealing-with-non-numeric-input">Step 4: Dealing with Non-Numeric Input</h2>
<p>It’s important to handle non-numeric input gracefully. You can use a combination of <code>ifelse()</code> and <code>is.na()</code> to manage this.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">mixed_input <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abc"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">345</span>)</span>
<span id="cb7-2">formatted_mixed_input <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(</span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(mixed_input)), </span>
<span id="cb7-4">  mixed_input, </span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%05d"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(mixed_input))</span>
<span id="cb7-6">  )</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in ifelse(is.na(as.numeric(mixed_input)), mixed_input, sprintf("%05d",
: NAs introduced by coercion</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in sprintf("%05d", as.numeric(mixed_input)): NAs introduced by coercion</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(formatted_mixed_input)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "00012" "abc"   "00345"</code></pre>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Adding leading zeros to numbers in R is simple with <code>sprintf()</code>. This method ensures your data looks consistent and meets the required format. Give it a try with your own data and see how it works for you.</p>
<hr>
<p>I hope you found this post helpful. Don’t forget to experiment with the examples and see how they can be adapted to your specific needs. Until next time, keep coding and exploring the wonderful world of R!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>operations</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-06-18/</guid>
  <pubDate>Tue, 18 Jun 2024 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
