<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steve&#39;s Data Tips and Tricks</title>
<link>https://www.spsanderson.com/steveondata/index.html</link>
<atom:link href="https://www.spsanderson.com/steveondata/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Mon, 20 Nov 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Mastering Exponential Regression in R: A Step-by-Step Guide</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-20/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hey folks, welcome back to another exciting R programming journey! Today, we’re diving into the fascinating world of exponential regression using base R. Exponential regression is a powerful tool, especially in the realm of data science, and we’ll walk through the process step by step. So, grab your coding hats, and let’s get started!</p>
</section>
<section id="understanding-exponential-regression" class="level1">
<h1>Understanding Exponential Regression</h1>
<p>Before we jump into the code, let’s quickly grasp the concept of exponential regression. In simple terms, it’s a statistical method used to model relationships where the rate of change of a variable is proportional to its current state. Think of scenarios like population growth, viral spread, or even financial investments.</p>
<section id="step-1-your-data" class="level2">
<h2 class="anchored" data-anchor-id="step-1-your-data">Step 1: Your Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">Year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2001</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2002</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2003</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2004</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2005</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2006</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2007</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2008</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2009</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2011</span>, </span>
<span id="cb1-2">          <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2012</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2013</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2014</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2015</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2016</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2017</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2018</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>)</span>
<span id="cb1-3">Population <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">550</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">610</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">680</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">760</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">850</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">950</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1060</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1180</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1320</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1470</span>, </span>
<span id="cb1-4">                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1830</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2040</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2280</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2540</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2830</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3140</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3480</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3850</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(Year, Population)</span></code></pre></div>
</div>
<p>Make sure to replace “your_data.csv” with the actual file name and path of your dataset. This is the foundation of our analysis, so choose a dataset that suits your exponential regression exploration.</p>
</section>
<section id="step-2-explore-your-data" class="level2">
<h2 class="anchored" data-anchor-id="step-2-explore-your-data">Step 2: Explore Your Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take a sneak peek at your data</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Year Population
1 2001        500
2 2002        550
3 2003        610
4 2004        680
5 2005        760
6 2006        850</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      Year        Population    
 Min.   :2001   Min.   : 500.0  
 1st Qu.:2006   1st Qu.: 827.5  
 Median :2010   Median :1395.0  
 Mean   :2010   Mean   :1678.0  
 3rd Qu.:2015   3rd Qu.:2345.0  
 Max.   :2020   Max.   :3850.0  </code></pre>
</div>
</div>
<p>Understanding your data is crucial. The ‘head()’ function displays the first few rows, and ‘summary()’ gives you a statistical summary. Look for patterns that might indicate exponential growth or decay.</p>
</section>
<section id="step-3-plot-your-data" class="level2">
<h2 class="anchored" data-anchor-id="step-3-plot-your-data">Step 3: Plot Your Data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb6-3">  Year, </span>
<span id="cb6-4">  Population, </span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exponential Regression"</span>, </span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Independent Variable"</span>, </span>
<span id="cb6-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dependent Variable"</span></span>
<span id="cb6-8">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-20/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Visualizing your data helps in identifying trends. A scatter plot is an excellent choice to see if there’s a potential exponential relationship.</p>
</section>
<section id="step-4-fit-exponential-model" class="level2">
<h2 class="anchored" data-anchor-id="step-4-fit-exponential-model">Step 4: Fit Exponential Model</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit exponential regression model</span></span>
<span id="cb7-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(Population) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = log(Population) ~ Year, data = df)

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0134745 -0.0032271  0.0008587  0.0037029  0.0108613 

Coefficients:
              Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) -2.113e+02  4.637e-01  -455.7   &lt;2e-16 ***
Year         1.087e-01  2.307e-04   471.3   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.005948 on 18 degrees of freedom
Multiple R-squared:  0.9999,    Adjusted R-squared:  0.9999 
F-statistic: 2.221e+05 on 1 and 18 DF,  p-value: &lt; 2.2e-16</code></pre>
</div>
</div>
<p>Here, we take the logarithm of the dependent variable ‘y’ to linearize the relationship. This facilitates using linear regression to model the data.</p>
</section>
<section id="step-5-make-predictions" class="level2">
<h2 class="anchored" data-anchor-id="step-5-make-predictions">Step 5: Make Predictions</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions</span></span>
<span id="cb9-2">predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(</span>
<span id="cb9-3">  model, </span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Population =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">510</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">540</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">700</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">760</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">850</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">950</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1050</span>,</span>
<span id="cb9-5">                                     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1350</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1650</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2050</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2300</span>,</span>
<span id="cb9-6">                                     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2850</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3850</span>),</span>
<span id="cb9-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prediction"</span>)</span>
<span id="cb9-8">  ))</span></code></pre></div>
</div>
<p>Replace ‘new_x’ with the values for which you want to predict ‘y’. The ‘exp()’ function is used to reverse the logarithmic transformation.</p>
</section>
<section id="step-6-visualize-results" class="level2">
<h2 class="anchored" data-anchor-id="step-6-visualize-results">Step 6: Visualize Results</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the original data and the regression line</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Year, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Population, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exponential Regression"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, </span>
<span id="cb10-3">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>)</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(predictions), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exponential Regression"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-20/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This code adds the exponential regression line to your scatter plot. It’s a visual confirmation of how well your model fits the data.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>There you have it, a step-by-step guide to performing exponential regression in R using base functions. Remember, the real fun begins when you apply this to your own datasets. Play around, tweak the parameters, and see how well you can predict those future values.</p>
<p>Coding is all about exploration and experimentation, so don’t hesitate to get your hands dirty. Happy coding, and may your data always reveal its secrets in the most exponential way possible!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>regression</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-20/index.html</guid>
  <pubDate>Mon, 20 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Quadratic Regression in R: Unveiling Non-Linear Relationships</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-17/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In the realm of data analysis, quadratic regression emerges as a powerful tool for uncovering the hidden patterns within datasets that exhibit non-linear relationships. Unlike its linear counterpart, quadratic regression ventures beyond straight lines, gracefully capturing curved relationships between variables. This makes it an essential technique for understanding a wide range of phenomena, from predicting stock prices to modeling population growth.</p>
<p>Embark on a journey into the world of quadratic regression using the versatile R programming language. We’ll explore the steps involved in fitting a quadratic model, interpreting its parameters, and visualizing the results. Along the way, you’ll gain hands-on experience with this valuable technique, enabling you to tackle your own data analysis challenges with confidence.</p>
</section>
<section id="setting-the-stage-data-preparation" class="level1">
<h1>Setting the Stage: Data Preparation</h1>
<p>Before embarking on our quadratic regression adventure, let’s assemble our data. Suppose we’re investigating the relationship between study hours and exam scores. We’ve gathered data from a group of students, recording their study hours and corresponding exam scores.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a data frame to store the data</span></span>
<span id="cb1-2">study_hours <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb1-3">exam_scores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">89</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">94</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>)</span>
<span id="cb1-4">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(study_hours, exam_scores)</span>
<span id="cb1-5">data</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   study_hours exam_scores
1            6          14
2            9          28
3           12          50
4           14          70
5           30          89
6           35          94
7           40          90
8           47          75
9           51          59
10          55          44
11          60          27</code></pre>
</div>
</div>
</section>
<section id="visualizing-the-relationship-a-scatterplots-revelation" class="level1">
<h1>Visualizing the Relationship: A Scatterplot’s Revelation</h1>
<p>To gain an initial impression of the relationship between study hours and exam scores, let’s create a scatterplot. This simple yet powerful visualization will reveal the underlying pattern in our data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatterplot of exam scores versus study hours</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb3-3">  data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>study_hours, </span>
<span id="cb3-4">  data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>exam_scores, </span>
<span id="cb3-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exam Scores vs. Study Hours"</span>, </span>
<span id="cb3-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Study Hours"</span>, </span>
<span id="cb3-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exam Scores"</span></span>
<span id="cb3-8">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-17/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Upon examining the scatterplot, a hint of a non-linear relationship emerges. The data points don’t fall along a straight line, suggesting a more complex association between study hours and exam scores. This is where quadratic regression steps in.</p>
</section>
<section id="fitting-the-quadratic-model-capturing-the-curve" class="level1">
<h1>Fitting the Quadratic Model: Capturing the Curve</h1>
<p>To capture the curvature evident in our data, we’ll employ the <code>lm()</code> function in R to fit a quadratic regression model. This model incorporates a second-degree term, allowing it to represent curved relationships between variables.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a quadratic regression model to the data</span></span>
<span id="cb4-2">quadratic_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(exam_scores <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> study_hours <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(study_hours<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)</span></code></pre></div>
</div>
<p>The <code>I()</code> function in the model formula ensures that the square of study hours is treated as a separate variable, enabling the model to capture the non-linearity.</p>
</section>
<section id="interpreting-the-model-unraveling-the-parameters" class="level1">
<h1>Interpreting the Model: Unraveling the Parameters</h1>
<p>Now that we’ve fitted the quadratic model, let’s delve into its parameters and understand their significance.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summarize the quadratic regression model</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(quadratic_model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = exam_scores ~ study_hours + I(study_hours^2), data = data)

Residuals:
    Min      1Q  Median      3Q     Max 
-6.2484 -3.7429 -0.1812  1.1464 13.6678 

Coefficients:
                  Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)      -18.25364    6.18507  -2.951   0.0184 *  
study_hours        6.74436    0.48551  13.891 6.98e-07 ***
I(study_hours^2)  -0.10120    0.00746 -13.565 8.38e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 6.218 on 8 degrees of freedom
Multiple R-squared:  0.9602,    Adjusted R-squared:  0.9502 
F-statistic: 96.49 on 2 and 8 DF,  p-value: 2.51e-06</code></pre>
</div>
</div>
<p>The output of the summary function provides valuable insights into the model’s performance and the significance of its parameters. It indicates the intercept, representing the predicted exam score when study hours are zero, and the coefficients for the linear and quadratic terms.</p>
</section>
<section id="visualizing-the-model-bringing-the-curve-to-life" class="level1">
<h1>Visualizing the Model: Bringing the Curve to Life</h1>
<p>To fully appreciate the quadratic model’s ability to capture the non-linear relationship between study hours and exam scores, let’s visualize the model alongside the data points.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the predicted exam scores for a range of study hours</span></span>
<span id="cb7-2">predicted_scores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(</span>
<span id="cb7-3">  quadratic_model, </span>
<span id="cb7-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb7-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">study_hours =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(study_hours), </span>
<span id="cb7-6">                      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(study_hours), </span>
<span id="cb7-7">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb7-8">                      )</span>
<span id="cb7-9">    )</span>
<span id="cb7-10">  )</span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the data points and the predicted scores</span></span>
<span id="cb7-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb7-14">  data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>study_hours, </span>
<span id="cb7-15">  data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>exam_scores, </span>
<span id="cb7-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exam Scores vs. Study Hours"</span>, </span>
<span id="cb7-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Study Hours"</span>, </span>
<span id="cb7-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exam Scores"</span></span>
<span id="cb7-19">  )</span>
<span id="cb7-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(study_hours), </span>
<span id="cb7-21">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(study_hours), </span>
<span id="cb7-22">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), </span>
<span id="cb7-23">      predicted_scores, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span></span>
<span id="cb7-24">      )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-17/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The resulting plot reveals the graceful curve of the quadratic model, fitting the data points closely. This visualization reinforces the model’s ability to capture the non-linear relationship between study hours and exam scores.</p>
</section>
<section id="your-turn-embarking-on-your-own-quadratic-regression-adventure" class="level1">
<h1>Your Turn: Embarking on Your Own Quadratic Regression Adventure</h1>
<p>Armed with the knowledge and skills gained from this tutorial, you’re now ready to embark on your own quadratic regression adventures. Gather your data, fit the model, interpret the parameters, and visualize the results.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>regression</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-17/index.html</guid>
  <pubDate>Fri, 17 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>{healthyR.ts} New Features: Unlocking More Power</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2011-11-16/index.html</link>
  <description><![CDATA[ 




<section id="new-features-unlocking-more-power" class="level1">
<h1>New Features: Unlocking More Power</h1>
<p>My R package <code>{healthyR.ts}</code> has been updated to version 0.3.0; you can install it from either CRAN, r-universe or GitHub. Let’s go over some of the changes and improvements.</p>
</section>
<section id="news" class="level1">
<h1>News</h1>
<section id="util_log_ts---logging-time-series-data" class="level2">
<h2 class="anchored" data-anchor-id="util_log_ts---logging-time-series-data">1. <code>util_log_ts()</code> - Logging Time Series Data</h2>
<p>One of the standout additions is the introduction of <code>util_log_ts()</code>. This function seems like a game-changer, providing a streamlined way to log time series data. This is incredibly useful, especially when dealing with extensive datasets, making the whole process more efficient and user-friendly. This is a helper function for <code>auto_stationarize()</code>.</p>
</section>
<section id="util_singlediff_ts---single-differences-for-time-series" class="level2">
<h2 class="anchored" data-anchor-id="util_singlediff_ts---single-differences-for-time-series">2. <code>util_singlediff_ts()</code> - Single Differences for Time Series</h2>
<p>The addition of <code>util_singlediff_ts()</code> expands the toolkit, offering a function dedicated to handling single differences in time series data. This is valuable for various applications, such as identifying trends or preparing data for further analysis. This is a helper function for <code>auto_stationarize()</code>.</p>
</section>
<section id="util_doublediff_ts---double-differences-for-time-series" class="level2">
<h2 class="anchored" data-anchor-id="util_doublediff_ts---double-differences-for-time-series">3. <code>util_doublediff_ts()</code> - Double Differences for Time Series</h2>
<p>Building on the concept of differencing, <code>util_doublediff_ts()</code> seems to provide a higher level of sophistication, allowing users to perform double differences on time series data. This could be pivotal in cases where a more refined analysis is required. This is a helper function for <code>auto_stationarize()</code>.</p>
</section>
<section id="util_difflog_ts---combining-differences-and-log-transformation" class="level2">
<h2 class="anchored" data-anchor-id="util_difflog_ts---combining-differences-and-log-transformation">4. <code>util_difflog_ts()</code> - Combining Differences and Log Transformation</h2>
<p>The fusion of differencing and log transformation in <code>util_difflog_ts()</code> is a remarkable addition. This could be particularly beneficial in scenarios where both operations are needed to unlock deeper insights from the time series data. This is a helper function for <code>auto_stationarize()</code>.</p>
</section>
<section id="util_doubledifflog_ts---double-differences-with-log-transformation" class="level2">
<h2 class="anchored" data-anchor-id="util_doubledifflog_ts---double-differences-with-log-transformation">5. <code>util_doubledifflog_ts()</code> - Double Differences with Log Transformation</h2>
<p>The introduction of <code>util_doubledifflog_ts()</code> appears to take things a step further by combining double differences and log transformation. This function seems poised to provide a comprehensive solution for users dealing with complex time series data. This is a helper function for <code>auto_stationarize()</code>.</p>
</section>
</section>
<section id="minor-fixes-and-improvements-polishing-the-experience" class="level1">
<h1>Minor Fixes and Improvements: Polishing the Experience</h1>
<section id="attributes-enhancement-in-ts_growth_rate_vec" class="level2">
<h2 class="anchored" data-anchor-id="attributes-enhancement-in-ts_growth_rate_vec">1. Attributes Enhancement in <code>ts_growth_rate_vec()</code></h2>
<p>The attention to detail is evident with the addition of attributes to the output of <code>ts_growth_rate_vec()</code>. This enhancement not only improves the clarity of results but also contributes to a more informative and user-friendly experience.</p>
</section>
<section id="refinement-of-auto_stationarize-in-response-to-user-feedback" class="level2">
<h2 class="anchored" data-anchor-id="refinement-of-auto_stationarize-in-response-to-user-feedback">2. Refinement of <code>auto_stationarize()</code> in Response to User Feedback</h2>
<p>Updates to <code>auto_stationarize()</code> based on user feedback (Fix #481 #483) demonstrate a commitment to refining existing features. This responsiveness to the community’s needs is commendable and ensures that the package evolves in sync with user expectations. It has taken all of the <code>util_</code> transforms mentioned above in order to improve it’s functionality.</p>
</section>
<section id="integration-with-auto_arima-engine-in-ts_auto_arima" class="level2">
<h2 class="anchored" data-anchor-id="integration-with-auto_arima-engine-in-ts_auto_arima">3. Integration with <code>auto_arima</code> Engine in <code>ts_auto_arima()</code></h2>
<p>The integration of <code>ts_auto_arima()</code> with the parsnip engine of <code>auto_arima</code> is a notable improvement. This update, triggered when <code>.tune</code> is set to <code>FALSE</code>, aligns the package with cutting-edge tools, potentially enhancing the efficiency and accuracy of time series modeling.</p>
<p>In conclusion, the release of healthyR.ts version 0.3.0 is an exciting leap forward. The new features introduce powerful capabilities, while the minor fixes and improvements showcase a commitment to providing a robust and user-friendly package. Users can look forward to a more versatile and refined experience in time series analysis. Great job on this release, and I’m sure the community is eager to explore these enhancements!</p>
</section>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s see how the main functions now behave.</p>
<section id="auto_stationarize" class="level2">
<h2 class="anchored" data-anchor-id="auto_stationarize"><code>auto_stationarize()</code></h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.ts)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auto_stationarize</span>(AirPassengers)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The time series is already stationary via ts_adf_test().</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
1949 112 118 132 129 121 135 148 148 136 119 104 118
1950 115 126 141 135 125 149 170 170 158 133 114 140
1951 145 150 178 163 172 178 199 199 184 162 146 166
1952 171 180 193 181 183 218 230 242 209 191 172 194
1953 196 196 236 235 229 243 264 272 237 211 180 201
1954 204 188 235 227 234 264 302 293 259 229 203 229
1955 242 233 267 269 270 315 364 347 312 274 237 278
1956 284 277 317 313 318 374 413 405 355 306 271 306
1957 315 301 356 348 355 422 465 467 404 347 305 336
1958 340 318 362 348 363 435 491 505 404 359 310 337
1959 360 342 406 396 420 472 548 559 463 407 362 405
1960 417 391 419 461 472 535 622 606 508 461 390 432</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auto_stationarize</span>(BJsales)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The time series is not stationary. Attempting to make it stationary...</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>$stationary_ts
Time Series:
Start = 3 
End = 150 
Frequency = 1 
  [1]  0.5 -0.4  0.6  1.1 -2.8  3.0 -1.1  0.6 -0.5 -0.5  0.1  2.0 -0.6  0.8  1.2
 [16] -3.4 -0.7 -0.3  1.7  3.0 -3.2  0.9  2.2 -2.5 -0.4  2.6 -4.3  2.0 -3.1  2.7
 [31] -2.1  0.1  2.1 -0.2 -2.2  0.6  1.0 -2.6  3.0  0.3  0.2 -0.8  1.0  0.0  3.2
 [46] -2.2 -4.7  1.2  0.8 -0.6 -0.4  0.6  1.0 -1.6 -0.1  3.4 -0.9 -1.7 -0.5  0.8
 [61]  2.4 -1.9  0.6 -2.2  2.6 -0.1 -2.7  1.7 -0.3  1.9 -2.7  1.1 -0.6  0.9  0.0
 [76]  1.8 -0.5 -0.4 -1.2  2.6 -1.8  1.7 -0.9  0.6 -0.4  3.0 -2.8  3.1 -2.3 -1.1
 [91]  2.1 -0.3 -1.7 -0.8 -0.4  1.1 -1.5  0.3  1.4 -2.0  1.3 -0.3  0.4 -3.5  1.1
[106]  2.6  0.4 -1.3  2.0 -1.6  0.6 -0.1 -1.4  1.6  1.6 -3.4  1.7 -2.2  2.1 -2.0
[121] -0.2  0.2  0.7 -1.4  1.8 -0.1 -0.7  0.4  0.4  1.0 -2.4  1.0 -0.4  0.8 -1.0
[136]  1.4 -1.2  1.1 -0.9  0.5  1.9 -0.6  0.3 -1.4 -0.9 -0.5  1.4  0.1

$ndiffs
[1] 1

$adf_stats
$adf_stats$test_stat
[1] -6.562008

$adf_stats$p_value
[1] 0.01


$trans_type
[1] "double_diff"

$ret
[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot.ts</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auto_stationarize</span>(BJsales)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stationary_ts)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The time series is not stationary. Attempting to make it stationary...</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2011-11-16/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auto_stationarize</span>(BJsales.lead)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The time series is not stationary. Attempting to make it stationary...</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>$stationary_ts
Time Series:
Start = 2 
End = 150 
Frequency = 1 
  [1]  0.06  0.25 -0.57  0.58 -0.20  0.23 -0.04 -0.19  0.03  0.42  0.04  0.24
 [13]  0.34 -0.46 -0.18 -0.08  0.29  0.56 -0.37  0.20  0.54 -0.31  0.03  0.52
 [25] -0.70  0.35 -0.63  0.44 -0.38 -0.01  0.22  0.10 -0.50  0.01  0.30 -0.76
 [37]  0.52  0.15  0.06 -0.10  0.21 -0.01  0.70 -0.22 -0.76  0.06  0.02 -0.17
 [49] -0.08  0.01  0.11 -0.39  0.01  0.50 -0.02 -0.37 -0.13  0.05  0.54 -0.46
 [61]  0.25 -0.52  0.44  0.02 -0.47  0.11  0.06  0.25 -0.35  0.00 -0.06  0.21
 [73] -0.09  0.36  0.09 -0.04 -0.20  0.44 -0.23  0.40 -0.01  0.17  0.08  0.58
 [85] -0.27  0.79 -0.21  0.02  0.30  0.28 -0.27 -0.01  0.03  0.16 -0.28  0.15
 [97]  0.26 -0.36  0.32 -0.11  0.22 -0.65  0.00  0.47  0.16 -0.19  0.48 -0.26
[109]  0.21  0.00 -0.20  0.35  0.38 -0.48  0.20 -0.32  0.43 -0.50  0.12 -0.17
[121]  0.15 -0.36  0.35 -0.03 -0.18  0.16  0.07  0.21 -0.50  0.23 -0.13  0.14
[133] -0.15  0.19 -0.24  0.26 -0.22  0.17  0.37 -0.06  0.29 -0.34 -0.12 -0.16
[145]  0.25  0.08 -0.07  0.26 -0.37

$ndiffs
[1] 1

$adf_stats
$adf_stats$test_stat
[1] -4.838625

$adf_stats$p_value
[1] 0.01


$trans_type
[1] "diff"

$ret
[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot.ts</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auto_stationarize</span>(BJsales.lead)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stationary_ts)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The time series is not stationary. Attempting to make it stationary...</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2011-11-16/index_files/figure-html/unnamed-chunk-1-2.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="ts_auto_arima" class="level2">
<h2 class="anchored" data-anchor-id="ts_auto_arima"><code>ts_auto_arima()</code></h2>
<p>This use to only use the Arima engine if the <code>.tune</code> parameter was set to FALSE, thus it would many times give a simple straight line forecast. This was changed to make the engine auto_arima if <code>.tune</code> is set to FALSE.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(timetk)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(modeltime)</span>
<span id="cb14-4"></span>
<span id="cb14-5">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> AirPassengers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_to_tbl</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>index)</span>
<span id="cb14-8"></span>
<span id="cb14-9">splits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">time_series_split</span>(</span>
<span id="cb14-10">  data</span>
<span id="cb14-11">  , date_col</span>
<span id="cb14-12">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assess =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb14-13">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb14-14">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cumulative =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb14-15">)</span>
<span id="cb14-16"></span>
<span id="cb14-17">ts_aa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_auto_arima</span>(</span>
<span id="cb14-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> data,</span>
<span id="cb14-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb14-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_col =</span> date_col,</span>
<span id="cb14-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value_col =</span> value,</span>
<span id="cb14-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.rsamp_obj =</span> splits,</span>
<span id="cb14-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.formula =</span> value <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .,</span>
<span id="cb14-24">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.grid_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb14-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.cv_slice_limit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb14-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.tune =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb14-27">)</span>
<span id="cb14-28"></span>
<span id="cb14-29">ts_aa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>recipe_info</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$recipe_call
recipe(.data = data, .date_col = date_col, .value_col = value, 
    .formula = value ~ ., .rsamp_obj = splits, .tune = FALSE, 
    .grid_size = 5, .num_cores = 2, .cv_slice_limit = 2)

$recipe_syntax
[1] "ts_arima_recipe &lt;-"                                                                                                                                                                           
[2] "\n  recipe(.data = data, .date_col = date_col, .value_col = value, .formula = value ~ \n    ., .rsamp_obj = splits, .tune = FALSE, .grid_size = 5, .num_cores = 2, \n    .cv_slice_limit = 2)"

$rec_obj</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">ts_aa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>model_info</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$model_spec
ARIMA Regression Model Specification (regression)

Computational engine: auto_arima 


$wflw
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: arima_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
ARIMA Regression Model Specification (regression)

Computational engine: auto_arima 


$fitted_wflw
══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: arima_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Series: outcome 
ARIMA(1,1,0)(0,1,0)[12] 

Coefficients:
          ar1
      -0.2431
s.e.   0.0894

sigma^2 = 109.8:  log likelihood = -447.95
AIC=899.9   AICc=900.01   BIC=905.46

$was_tuned
[1] "not_tuned"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">ts_aa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>model_calibration</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$plot

$calibration_tbl
# Modeltime Table
# A tibble: 1 × 5
  .model_id .model     .model_desc             .type .calibration_data
      &lt;int&gt; &lt;list&gt;     &lt;chr&gt;                   &lt;chr&gt; &lt;list&gt;           
1         1 &lt;workflow&gt; ARIMA(1,1,0)(0,1,0)[12] Test  &lt;tibble [12 × 4]&gt;

$model_accuracy
# A tibble: 1 × 9
  .model_id .model_desc             .type   mae  mape  mase smape  rmse   rsq
      &lt;int&gt; &lt;chr&gt;                   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;
1         1 ARIMA(1,1,0)(0,1,0)[12] Test   18.5  4.18 0.384  4.03  23.9 0.955</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">ts_aa<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>model_calibration<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-94848f83edf3e048e91e" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-94848f83edf3e048e91e">{"x":{"data":[{"x":["1949-01-01","1949-02-01","1949-03-01","1949-04-01","1949-05-01","1949-06-01","1949-07-01","1949-08-01","1949-09-01","1949-10-01","1949-11-01","1949-12-01","1950-01-01","1950-02-01","1950-03-01","1950-04-01","1950-05-01","1950-06-01","1950-07-01","1950-08-01","1950-09-01","1950-10-01","1950-11-01","1950-12-01","1951-01-01","1951-02-01","1951-03-01","1951-04-01","1951-05-01","1951-06-01","1951-07-01","1951-08-01","1951-09-01","1951-10-01","1951-11-01","1951-12-01","1952-01-01","1952-02-01","1952-03-01","1952-04-01","1952-05-01","1952-06-01","1952-07-01","1952-08-01","1952-09-01","1952-10-01","1952-11-01","1952-12-01","1953-01-01","1953-02-01","1953-03-01","1953-04-01","1953-05-01","1953-06-01","1953-07-01","1953-08-01","1953-09-01","1953-10-01","1953-11-01","1953-12-01","1954-01-01","1954-02-01","1954-03-01","1954-04-01","1954-05-01","1954-06-01","1954-07-01","1954-08-01","1954-09-01","1954-10-01","1954-11-01","1954-12-01","1955-01-01","1955-02-01","1955-03-01","1955-04-01","1955-05-01","1955-06-01","1955-07-01","1955-08-01","1955-09-01","1955-10-01","1955-11-01","1955-12-01","1956-01-01","1956-02-01","1956-03-01","1956-04-01","1956-05-01","1956-06-01","1956-07-01","1956-08-01","1956-09-01","1956-10-01","1956-11-01","1956-12-01","1957-01-01","1957-02-01","1957-03-01","1957-04-01","1957-05-01","1957-06-01","1957-07-01","1957-08-01","1957-09-01","1957-10-01","1957-11-01","1957-12-01","1958-01-01","1958-02-01","1958-03-01","1958-04-01","1958-05-01","1958-06-01","1958-07-01","1958-08-01","1958-09-01","1958-10-01","1958-11-01","1958-12-01","1959-01-01","1959-02-01","1959-03-01","1959-04-01","1959-05-01","1959-06-01","1959-07-01","1959-08-01","1959-09-01","1959-10-01","1959-11-01","1959-12-01","1960-01-01","1960-02-01","1960-03-01","1960-04-01","1960-05-01","1960-06-01","1960-07-01","1960-08-01","1960-09-01","1960-10-01","1960-11-01","1960-12-01"],"y":[112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432],"text":[".index: 1949-01-01<br />.value: 112.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-02-01<br />.value: 118.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-03-01<br />.value: 132.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-04-01<br />.value: 129.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-05-01<br />.value: 121.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-06-01<br />.value: 135.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-07-01<br />.value: 148.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-08-01<br />.value: 148.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-09-01<br />.value: 136.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-10-01<br />.value: 119.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-11-01<br />.value: 104.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1949-12-01<br />.value: 118.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-01-01<br />.value: 115.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-02-01<br />.value: 126.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-03-01<br />.value: 141.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-04-01<br />.value: 135.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-05-01<br />.value: 125.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-06-01<br />.value: 149.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-07-01<br />.value: 170.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-08-01<br />.value: 170.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-09-01<br />.value: 158.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-10-01<br />.value: 133.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-11-01<br />.value: 114.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1950-12-01<br />.value: 140.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-01-01<br />.value: 145.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-02-01<br />.value: 150.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-03-01<br />.value: 178.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-04-01<br />.value: 163.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-05-01<br />.value: 172.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-06-01<br />.value: 178.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-07-01<br />.value: 199.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-08-01<br />.value: 199.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-09-01<br />.value: 184.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-10-01<br />.value: 162.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-11-01<br />.value: 146.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1951-12-01<br />.value: 166.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-01-01<br />.value: 171.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-02-01<br />.value: 180.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-03-01<br />.value: 193.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-04-01<br />.value: 181.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-05-01<br />.value: 183.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-06-01<br />.value: 218.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-07-01<br />.value: 230.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-08-01<br />.value: 242.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-09-01<br />.value: 209.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-10-01<br />.value: 191.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-11-01<br />.value: 172.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1952-12-01<br />.value: 194.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-01-01<br />.value: 196.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-02-01<br />.value: 196.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-03-01<br />.value: 236.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-04-01<br />.value: 235.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-05-01<br />.value: 229.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-06-01<br />.value: 243.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-07-01<br />.value: 264.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-08-01<br />.value: 272.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-09-01<br />.value: 237.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-10-01<br />.value: 211.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-11-01<br />.value: 180.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1953-12-01<br />.value: 201.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-01-01<br />.value: 204.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-02-01<br />.value: 188.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-03-01<br />.value: 235.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-04-01<br />.value: 227.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-05-01<br />.value: 234.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-06-01<br />.value: 264.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-07-01<br />.value: 302.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-08-01<br />.value: 293.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-09-01<br />.value: 259.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-10-01<br />.value: 229.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-11-01<br />.value: 203.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1954-12-01<br />.value: 229.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-01-01<br />.value: 242.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-02-01<br />.value: 233.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-03-01<br />.value: 267.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-04-01<br />.value: 269.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-05-01<br />.value: 270.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-06-01<br />.value: 315.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-07-01<br />.value: 364.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-08-01<br />.value: 347.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-09-01<br />.value: 312.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-10-01<br />.value: 274.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-11-01<br />.value: 237.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1955-12-01<br />.value: 278.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-01-01<br />.value: 284.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-02-01<br />.value: 277.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-03-01<br />.value: 317.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-04-01<br />.value: 313.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-05-01<br />.value: 318.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-06-01<br />.value: 374.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-07-01<br />.value: 413.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-08-01<br />.value: 405.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-09-01<br />.value: 355.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-10-01<br />.value: 306.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-11-01<br />.value: 271.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1956-12-01<br />.value: 306.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-01-01<br />.value: 315.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-02-01<br />.value: 301.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-03-01<br />.value: 356.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-04-01<br />.value: 348.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-05-01<br />.value: 355.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-06-01<br />.value: 422.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-07-01<br />.value: 465.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-08-01<br />.value: 467.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-09-01<br />.value: 404.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-10-01<br />.value: 347.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-11-01<br />.value: 305.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1957-12-01<br />.value: 336.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-01-01<br />.value: 340.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-02-01<br />.value: 318.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-03-01<br />.value: 362.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-04-01<br />.value: 348.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-05-01<br />.value: 363.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-06-01<br />.value: 435.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-07-01<br />.value: 491.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-08-01<br />.value: 505.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-09-01<br />.value: 404.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-10-01<br />.value: 359.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-11-01<br />.value: 310.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1958-12-01<br />.value: 337.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-01-01<br />.value: 360.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-02-01<br />.value: 342.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-03-01<br />.value: 406.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-04-01<br />.value: 396.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-05-01<br />.value: 420.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-06-01<br />.value: 472.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-07-01<br />.value: 548.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-08-01<br />.value: 559.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-09-01<br />.value: 463.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-10-01<br />.value: 407.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-11-01<br />.value: 362.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1959-12-01<br />.value: 405.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-01-01<br />.value: 417.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-02-01<br />.value: 391.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-03-01<br />.value: 419.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-04-01<br />.value: 461.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-05-01<br />.value: 472.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-06-01<br />.value: 535.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-07-01<br />.value: 622.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-08-01<br />.value: 606.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-09-01<br />.value: 508.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-10-01<br />.value: 461.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-11-01<br />.value: 390.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL",".index: 1960-12-01<br />.value: 432.0000<br />.color_mod: ACTUAL<br />.color_mod: ACTUAL"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(44,62,80,1)","dash":"solid"},"hoveron":"points","name":"ACTUAL","legendgroup":"ACTUAL","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":["1960-01-01","1960-02-01","1960-03-01","1960-04-01","1960-05-01","1960-06-01","1960-07-01","1960-08-01","1960-09-01","1960-10-01","1960-11-01","1960-12-01"],"y":[424.10989389354904,407.05570173851447,470.8257459339377,460.88165546391258,484.86806208866483,536.87136706816841,612.87056352310901,623.87075889033031,527.87071139037903,471.87072293911967,426.87072013125544,469.87072081393603],"text":[".index: 1960-01-01<br />.value: 424.1099<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-02-01<br />.value: 407.0557<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-03-01<br />.value: 470.8257<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-04-01<br />.value: 460.8817<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-05-01<br />.value: 484.8681<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-06-01<br />.value: 536.8714<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-07-01<br />.value: 612.8706<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-08-01<br />.value: 623.8708<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-09-01<br />.value: 527.8707<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-10-01<br />.value: 471.8707<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-11-01<br />.value: 426.8707<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]",".index: 1960-12-01<br />.value: 469.8707<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]<br />.color_mod: 1_ARIMA(1,1,0)(0,1,0)[12]"],"type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(227,26,28,1)","dash":"solid"},"hoveron":"points","name":"1_ARIMA(1,1,0)(0,1,0)[12]","legendgroup":"1_ARIMA(1,1,0)(0,1,0)[12]","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.762557077625573,"r":7.3059360730593621,"b":25.570776255707766,"l":28.493150684931514},"plot_bgcolor":"rgba(255,255,255,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724},"title":{"text":"Forecast Plot","font":{"color":"rgba(44,62,80,1)","family":"","size":17.534246575342465},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"date","autorange":true,"range":["1948-05-28","1961-07-06"],"tickmode":"auto","ticktext":["1950","1955","1960"],"tickvals":[-7305,-5479,-3653],"categoryorder":"array","categoryarray":["1950","1955","1960"],"nticks":null,"ticks":"outside","tickcolor":"rgba(204,204,204,1)","ticklen":3.6529680365296811,"tickwidth":0.22139200221392005,"showticklabels":true,"tickfont":{"color":"rgba(44,62,80,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(204,204,204,1)","gridwidth":0.22139200221392005,"zeroline":false,"anchor":"y","title":{"text":"","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":true,"range":[78.006462055483482,649.86429683484687],"tickmode":"auto","ticktext":["200","400","600"],"tickvals":[200,400,600],"categoryorder":"array","categoryarray":["200","400","600"],"nticks":null,"ticks":"outside","tickcolor":"rgba(204,204,204,1)","ticklen":3.6529680365296811,"tickwidth":0.22139200221392005,"showticklabels":true,"tickfont":{"color":"rgba(44,62,80,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(204,204,204,1)","gridwidth":0.22139200221392005,"zeroline":false,"anchor":"x","title":{"text":"","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":"transparent","line":{"color":"rgba(44,62,80,1)","width":0.33208800332088001,"linetype":"solid"},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.8897637795275593,"font":{"color":"rgba(44,62,80,1)","family":"","size":11.68949771689498},"title":{"text":"Legend","font":{"color":"rgba(44,62,80,1)","family":"","size":14.611872146118724}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"349421d7648":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"349421d7648","visdat":{"349421d7648":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Finally enhancement to add attributes to <code>ts_growth_rate_vec()</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_growth_rate_vec</span>(AirPassengers)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  [1]          NA   5.3571429  11.8644068  -2.2727273  -6.2015504  11.5702479
  [7]   9.6296296   0.0000000  -8.1081081 -12.5000000 -12.6050420  13.4615385
 [13]  -2.5423729   9.5652174  11.9047619  -4.2553191  -7.4074074  19.2000000
 [19]  14.0939597   0.0000000  -7.0588235 -15.8227848 -14.2857143  22.8070175
 [25]   3.5714286   3.4482759  18.6666667  -8.4269663   5.5214724   3.4883721
 [31]  11.7977528   0.0000000  -7.5376884 -11.9565217  -9.8765432  13.6986301
 [37]   3.0120482   5.2631579   7.2222222  -6.2176166   1.1049724  19.1256831
 [43]   5.5045872   5.2173913 -13.6363636  -8.6124402  -9.9476440  12.7906977
 [49]   1.0309278   0.0000000  20.4081633  -0.4237288  -2.5531915   6.1135371
 [55]   8.6419753   3.0303030 -12.8676471 -10.9704641 -14.6919431  11.6666667
 [61]   1.4925373  -7.8431373  25.0000000  -3.4042553   3.0837004  12.8205128
 [67]  14.3939394  -2.9801325 -11.6040956 -11.5830116 -11.3537118  12.8078818
 [73]   5.6768559  -3.7190083  14.5922747   0.7490637   0.3717472  16.6666667
 [79]  15.5555556  -4.6703297 -10.0864553 -12.1794872 -13.5036496  17.2995781
 [85]   2.1582734  -2.4647887  14.4404332  -1.2618297   1.5974441  17.6100629
 [91]  10.4278075  -1.9370460 -12.3456790 -13.8028169 -11.4379085  12.9151292
 [97]   2.9411765  -4.4444444  18.2724252  -2.2471910   2.0114943  18.8732394
[103]  10.1895735   0.4301075 -13.4903640 -14.1089109 -12.1037464  10.1639344
[109]   1.1904762  -6.4705882  13.8364780  -3.8674033   4.3103448  19.8347107
[115]  12.8735632   2.8513238 -20.0000000 -11.1386139 -13.6490251   8.7096774
[121]   6.8249258  -5.0000000  18.7134503  -2.4630542   6.0606061  12.3809524
[127]  16.1016949   2.0072993 -17.1735242 -12.0950324 -11.0565111  11.8784530
[133]   2.9629630  -6.2350120   7.1611253  10.0238663   2.3861171  13.3474576
[139]  16.2616822  -2.5723473 -16.1716172  -9.2519685 -15.4013015  10.7692308
attr(,"vector_attributes")
attr(,"vector_attributes")$tsp
[1] 1949.000 1960.917   12.000

attr(,"vector_attributes")$class
[1] "ts"

attr(,"name")
[1] "AirPassengers"</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>healthyrts</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2011-11-16/index.html</guid>
  <pubDate>Thu, 16 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Perform Multiple Linear Regression in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-15/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Multiple linear regression is a powerful statistical method that allows us to examine the relationship between a dependent variable and multiple independent variables.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<section id="step-1-load-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="step-1-load-the-dataset">Step 1: Load the dataset</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the mtcars dataset</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(mtcars)</span></code></pre></div>
</section>
<section id="step-2-build-the-model" class="level2">
<h2 class="anchored" data-anchor-id="step-2-build-the-model">Step 2: Build the model</h2>
<p>Now, let’s create the multiple linear regression model using the specified variables: disp, hp, and drat.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build the multiple linear regression model</span></span>
<span id="cb2-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> disp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> hp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> drat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span></code></pre></div>
</div>
</section>
<section id="step-3-examine-the-data" class="level2">
<h2 class="anchored" data-anchor-id="step-3-examine-the-data">Step 3: Examine the data</h2>
<p>It’s always a good idea to take a look at the relationships between variables before diving into the model. The <code>pairs()</code> function helps us with that.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examine relationships between variables</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pairs</span>(mtcars[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mpg"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"disp"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hp"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drat"</span>)])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-15/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="step-4-check-for-multicollinearity" class="level2">
<h2 class="anchored" data-anchor-id="step-4-check-for-multicollinearity">Step 4: Check for multicollinearity</h2>
<p>Multicollinearity is when independent variables in a regression model are highly correlated. It can affect the stability and reliability of our model. Keep an eye on the scatterplots in the pairs plot to get a sense of this.</p>
</section>
<section id="step-5-plot-the-residuals" class="level2">
<h2 class="anchored" data-anchor-id="step-5-plot-the-residuals">Step 5: Plot the residuals</h2>
<p>Now, let’s check the model’s residuals using a scatterplot. Residuals are the differences between observed and predicted values. They should ideally show no pattern.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the residuals</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb4-3">  model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>residuals, </span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals vs Fitted Values"</span>, </span>
<span id="cb4-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fitted Values"</span>, </span>
<span id="cb4-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals"</span></span>
<span id="cb4-7">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-15/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="step-6-evaluate-the-model" class="level2">
<h2 class="anchored" data-anchor-id="step-6-evaluate-the-model">Step 6: Evaluate the model</h2>
<p>By examining the residuals vs.&nbsp;fitted values plot, we can identify patterns that may suggest non-linearity or heteroscedasticity. Ideally, residuals should be randomly scattered.</p>
</section>
<section id="step-7-encourage-readers-to-try-it-themselves" class="level2">
<h2 class="anchored" data-anchor-id="step-7-encourage-readers-to-try-it-themselves">Step 7: Encourage readers to try it themselves</h2>
<p>I’d encourage readers to take the code snippets, run them in their R environment, and explore. Maybe try different variables, tweak the model, or even use another dataset. Hands-on experience is the best teacher!</p>
<p>Remember, understanding the data and interpreting the results is as important as running the code. It’s a fascinating journey into uncovering patterns and relationships within your data.</p>
<p>Feel free to reach out if you have any questions or if there’s anything specific you’d like to explore further. Happy coding!</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>regression</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-15/index.html</guid>
  <pubDate>Wed, 15 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Predict a Single Value Using a Regression Model in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-14/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Regression models are a powerful tool for predicting future values based on historical data. They are used in a wide range of industries, including finance, healthcare, and marketing. In this blog post, we will learn how to predict a single value using a regression model in R. We will use the <code>mtcars</code> dataset, which contains information about cars, including their weight, horsepower, and fuel efficiency.</p>
</section>
<section id="building-a-linear-regression-model" class="level1">
<h1>Building a Linear Regression Model</h1>
<p>The first step in predicting a single value is to build a regression model. We can do this using the <code>lm()</code> function in R. The <code>lm()</code> function takes two arguments: a formula and a data frame. The formula specifies the relationship between the dependent variable (the variable we want to predict) and the independent variables (the variables we use to predict the dependent variable). The data frame contains the values of the dependent and independent variables.</p>
<p>To build a linear regression model to predict the fuel efficiency of a car based on its weight and horsepower, we would use the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a linear regression model</span></span>
<span id="cb1-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> wt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> hp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span></code></pre></div>
</div>
<p>The <code>model</code> object now contains the fitted regression model. We can inspect the model by using the <code>summary()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = mpg ~ wt + hp, data = mtcars)

Residuals:
   Min     1Q Median     3Q    Max 
-3.941 -1.600 -0.182  1.050  5.854 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 37.22727    1.59879  23.285  &lt; 2e-16 ***
wt          -3.87783    0.63273  -6.129 1.12e-06 ***
hp          -0.03177    0.00903  -3.519  0.00145 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.593 on 29 degrees of freedom
Multiple R-squared:  0.8268,    Adjusted R-squared:  0.8148 
F-statistic: 69.21 on 2 and 29 DF,  p-value: 9.109e-12</code></pre>
</div>
</div>
<p>The output of the <code>summary()</code> function shows the estimated coefficients, standard errors, and p-values for the independent variables in the model. The coefficients represent the change in the dependent variable for a one-unit increase in the independent variable, holding all other variables constant.</p>
</section>
<section id="predicting-a-single-value" class="level1">
<h1>Predicting a Single Value</h1>
<p>Once we have fitted a regression model, we can use it to predict single values. We can do this using the <code>predict()</code> function. The <code>predict()</code> function takes two arguments: the fitted model and a new data frame containing the values of the independent variables for which we want to make predictions.</p>
<p>To predict the fuel efficiency of a car with a weight of 3,000 pounds and a horsepower of 150, we would use the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new data frame containing the values of the independent </span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># variables for which we want to make predictions</span></span>
<span id="cb4-3">newdata <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wt =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wt is in 1000 lbs</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict the fuel efficiency of the car</span></span>
<span id="cb4-6">prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model, newdata)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the predicted fuel efficiency</span></span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(prediction)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       1 
20.82784 </code></pre>
</div>
</div>
<p>The output of the <code>predict()</code> function is a vector containing the predicted values for the dependent variable. In this case, the predicted fuel efficiency is 20.8278358 miles per gallon.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this blog post, we have learned how to predict a single value using a regression model in R. We used the <code>mtcars</code> dataset to build a linear regression model to predict the fuel efficiency of a car based on its weight and horsepower. We then used the <code>predict()</code> function to predict the fuel efficiency of a car with a specific weight and horsepower.</p>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself</h1>
<p>Now that you know how to predict a single value using a regression model in R, try it yourself! Here are some ideas:</p>
<ul>
<li>Build a linear regression model to predict the price of a house based on its size and number of bedrooms.</li>
<li>Build a linear regression model to predict the salary of a person based on their education level and years of experience.</li>
<li>Build a linear regression model to predict the number of customers that will visit a store on a given day based on the day of the week and the weather forecast.</li>
</ul>
<p>Once you have built a regression model, you can use it to predict single values for new data. This can be a valuable tool for making decisions about the future.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>regression</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-14/index.html</guid>
  <pubDate>Tue, 14 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Unlocking the Power of Prediction Intervals in R: A Practical Guide</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-13/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Prediction intervals are a powerful tool for understanding the uncertainty of your predictions. They allow you to specify a range of values within which you are confident that the true value will fall. This can be useful for many tasks, such as setting realistic goals, making informed decisions, and communicating your findings to others.</p>
<p>In this blog post, we will show you how to create a prediction interval in R using the <code>mtcars</code> dataset. The <code>mtcars</code> dataset is a built-in dataset in R that contains information about fuel economy, weight, displacement, and other characteristics of 32 cars.</p>
</section>
<section id="creating-a-prediction-interval" class="level1">
<h1>Creating a Prediction Interval</h1>
<p>To create a prediction interval in R, we can use the <code>predict()</code> function. The <code>predict()</code> function takes a fitted model and a new dataset as input and returns the predicted values for the new dataset.</p>
<p>We can also use the <code>predict()</code> function to calculate prediction intervals. To do this, we need to specify the <code>interval</code> argument. The <code>interval</code> argument can take two values: <code>confidence</code> and <code>prediction</code>.</p>
<p>A confidence interval is the range of values within which we are confident that the true mean of the population will fall. A prediction interval is the range of values within which we are confident that the true value of a new observation will fall.</p>
<p>To create a prediction interval for the <code>mpg</code> variable in the <code>mtcars</code> dataset, we can use the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a linear model</span></span>
<span id="cb1-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> disp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a prediction interval</span></span>
<span id="cb1-5">prediction_intervals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(</span>
<span id="cb1-6">  model, </span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> mtcars, </span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prediction"</span>, </span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb1-10">  )</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the prediction interval</span></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(prediction_intervals)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                       fit       lwr      upr
Mazda RX4         23.00544 16.227868 29.78300
Mazda RX4 Wag     23.00544 16.227868 29.78300
Datsun 710        25.14862 18.302683 31.99456
Hornet 4 Drive    18.96635 12.217933 25.71477
Hornet Sportabout 14.76241  7.905308 21.61952
Valiant           20.32645 13.582915 27.06999</code></pre>
</div>
</div>
<p>The prediction interval shows that we are 95% confident that the true <code>mpg</code> value for a new car with a given displacement will fall within the range specified by the <code>lwr</code> and <code>upr</code> columns.</p>
</section>
<section id="visualize" class="level1">
<h1>Visualize</h1>
<p>First lets bind the data together with <code>cbind()</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">full_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(mtcars, prediction_intervals)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(full_res)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                   mpg cyl disp  hp drat    wt  qsec vs am gear carb      fit
Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 23.00544
Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 23.00544
Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 25.14862
Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 18.96635
Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 14.76241
Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 20.32645
                        lwr      upr
Mazda RX4         16.227868 29.78300
Mazda RX4 Wag     16.227868 29.78300
Datsun 710        18.302683 31.99456
Hornet 4 Drive    12.217933 25.71477
Hornet Sportabout  7.905308 21.61952
Valiant           13.582915 27.06999</code></pre>
</div>
</div>
<p>Now let’s plot the actual, the fitted and the prediction confidence bands.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb5-2"></span>
<span id="cb5-3">full_res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> disp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> mpg)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> fit), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> fit)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lwr), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> upr), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mpg ~ disp, data = mtcars"</span>,</span>
<span id="cb5-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"With Prediction Intervals"</span></span>
<span id="cb5-14">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-13/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Above we are capturing the prediction interval which gives us the uncertainty around a single point, whereas the confidence interval gives us the uncertainty around the mean predicted values. This means that the prediction interval will always be wider than the confidence interval for the same value.</p>
</section>
<section id="trying-it-out-yourself" class="level1">
<h1>Trying It Out Yourself</h1>
<p>Now it’s your turn to try out creating a prediction interval in R. Here are some ideas:</p>
<ul>
<li>Try creating a prediction interval for a different variable in the <code>mtcars</code> dataset, such as <code>wt</code> or <code>hp</code>.</li>
<li>Try creating a prediction interval for a variable in a different dataset.</li>
<li>Try creating a prediction interval for a more complex model, such as a multiple linear regression model or a logistic regression model.</li>
</ul>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Creating prediction intervals in R is a straightforward process. By using the <code>predict()</code> function, you can easily calculate prediction intervals for any fitted model and any new dataset. This can be a valuable tool for understanding the uncertainty of your predictions and making more informed decisions.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-13/index.html</guid>
  <pubDate>Mon, 13 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Simulate &amp; Plot a Bivariate Normal Distribution in R: A Hands-on Guide</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-07/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Welcome to the fascinating world of bivariate normal distributions! In this blog post, we’ll embark on a journey to understand, simulate, and visualize these distributions using the powerful R programming language. Whether you’re a seasoned R expert or a curious beginner, this guide will equip you with the necessary tools to explore this intriguing aspect of probability theory.</p>
</section>
<section id="understanding-bivariate-normal-distributions" class="level1">
<h1>Understanding Bivariate Normal Distributions</h1>
<p>Imagine two variables, like height and weight, that exhibit a joint distribution. The bivariate normal distribution captures the relationship between these variables, describing how their values tend to cluster around certain means and how they vary together. It’s like a two-dimensional bell curve, where the peak represents the most likely combination of values for both variables.</p>
</section>
<section id="simulating-a-bivariate-normal-distribution" class="level1">
<h1>Simulating a Bivariate Normal Distribution</h1>
<p>Now, let’s bring this distribution to life using R. The <code>MASS</code> package provides the <code>mvrnorm()</code> function, which generates random samples from a multivariate normal distribution. We’ll use this function to simulate a bivariate normal distribution with mean vector <code>[10, 20]</code> and covariance matrix <code>[[5, 3], [3, 6]]</code>. These parameters determine the center and shape of the distribution.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(MASS)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate 100 observations from a bivariate normal distribution</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set a seed for reproducibility</span></span>
<span id="cb1-5">bvnData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mvrnorm</span>(</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>), </span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sigma =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), </span>
<span id="cb1-9">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-10">  )</span></code></pre></div>
</div>
</section>
<section id="visualizing-the-bivariate-normal-distribution" class="level1">
<h1>Visualizing the Bivariate Normal Distribution</h1>
<p>To truly appreciate the beauty of the bivariate normal distribution, let’s visualize it using the <code>plot()</code> and <code>density()</code> functions</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(mnormt)</span>
<span id="cb2-2"></span>
<span id="cb2-3">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bvnData[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>()</span>
<span id="cb2-4">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bvnData[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>()</span>
<span id="cb2-5">mu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb2-6">sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), </span>
<span id="cb2-7">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-8">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dmnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(x, y), mu, sigma)</span>
<span id="cb2-9">z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(x,y,f)</span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contour</span>(x,y,z)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-07/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a density plot of the simulated data</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">density</span>(bvnData))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-07/index_files/figure-html/unnamed-chunk-2-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This plot should reveal an elliptical shape, with the highest density concentrated around the mean values. The contours represent the regions of equal probability.</p>
</section>
<section id="try-it-on-your-own" class="level1">
<h1>Try It On Your Own!</h1>
<p>Now, it’s your turn to experiment! Change the mean vector, covariance matrix, and sample size to see how they affect the shape and spread of the distribution. Play with different visualization options to explore different perspectives of the data.</p>
<p>Remember, R is a vast and ever-evolving language, so there’s always more to learn. Keep exploring, asking questions, and seeking out new challenges to become a master R programmer.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>distribution</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-07/index.html</guid>
  <pubDate>Wed, 08 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Demystifying Data: A Comprehensive Guide to Calculating and Plotting Cumulative Distribution Functions (CDFs) in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-06/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In the realm of statistics, a cumulative distribution function (CDF) serves as a crucial tool for understanding the behavior of data. It provides a comprehensive picture of how a variable’s values are distributed across its range. In this blog post, we’ll embark on an exciting journey to unravel the mysteries of CDFs and explore how to effortlessly calculate and visualize them using the powerful R programming language.</p>
</section>
<section id="understanding-the-essence-of-cdfs" class="level1">
<h1>Understanding the Essence of CDFs</h1>
<p>Before delving into the world of R programming, let’s first grasp the fundamental concept of a CDF. Imagine a group of students eagerly awaiting their exam results. The CDF for their scores would depict the probability of encountering a student with a score less than or equal to a specific value. For instance, if the CDF indicates a value of 0.7 at 80%, it implies that there’s a 70% chance of finding a student with a score of 80 or lower.</p>
</section>
<section id="calculating-cdfs-with-the-ecdf-function" class="level1">
<h1>Calculating CDFs with the ecdf() Function</h1>
<p>R, our trusty programming companion, offers a user-friendly function called ecdf() to calculate CDFs. This function takes a vector of data as input and returns a corresponding CDF object. Let’s put this function into action by generating a sample dataset of exam scores:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">exam_scores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">94</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">91</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">79</span>)</span></code></pre></div>
</div>
<p>Now, we can effortlessly calculate the CDF using the ecdf() function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">cdf_scores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ecdf</span>(exam_scores)</span></code></pre></div>
</div>
<p>The cdf_scores object now holds the calculated CDF values for the exam scores.</p>
</section>
<section id="visualizing-cdfs-with-the-plot-function" class="level1">
<h1>Visualizing CDFs with the plot() Function</h1>
<p>To gain a deeper understanding of the CDF, we can visualize it using the plot() function. This function takes the CDF object as input and generates a corresponding plot. Simply type the following command:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(cdf_scores)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-11-06/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila! You should now see a captivating plot depicting the CDF of the exam scores. The x-axis represents the exam scores, and the y-axis represents the corresponding cumulative probabilities.</p>
</section>
<section id="explore" class="level1">
<h1>Explore!</h1>
<p>We’ve successfully calculated and visualized CDFs in R. Now it’s time for you to explore and experiment with this powerful tool. Gather your own data, calculate the CDF, and interpret its meaning. Remember, data holds valuable insights, and CDFs are the keys to unlocking those insights.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-06/index.html</guid>
  <pubDate>Mon, 06 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducing TidyDensity’s New Powerhouse: The convert_to_ts() Function</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-03/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>If you’re an R enthusiast like me, you know that data manipulation is at the core of everything we do. The ability to transform your data swiftly and efficiently can make or break your data analysis projects. That’s why I’m thrilled to introduce a game-changing function in TidyDensity, my very own R library. Say hello to <code>convert_to_ts()</code>!</p>
<p>In the world of data analysis, time series data is like a treasure chest of insights waiting to be unlocked. Whether you’re tracking stock prices, monitoring patient data, or analyzing the temperature over the years, having your data in a time series format is a crucial step in the process. With <code>convert_to_ts()</code>, that process just got a whole lot easier.</p>
</section>
<section id="the-basics" class="level1">
<h1>The Basics</h1>
<p>Let’s start with the basics. The syntax of <code>convert_to_ts()</code> is straightforward:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convert_to_ts</span>(.data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_ts =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.pivot_longer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<ul>
<li><p><code>.data</code>: This is your data, the data frame or tibble you want to convert into a time series format. It’s the heart of your analysis.</p></li>
<li><p><code>.return_ts</code>: A logical value that lets you decide whether you want to return the time series data. By default, it’s set to <code>TRUE</code>, which is usually what you’ll want.</p></li>
<li><p><code>.pivot_longer</code>: Another logical value that determines whether you want to pivot the data into long format. By default, it’s set to <code>FALSE</code>, but you can change that if needed.</p></li>
</ul>
</section>
<section id="the-magic-of-convert_to_ts" class="level1">
<h1>The Magic of <code>convert_to_ts()</code></h1>
<p>So, what exactly does <code>convert_to_ts()</code> do, and why is it a game-changer? Imagine you have a data frame with time-based data in a wide format. You’ve got columns representing different time points, and you want to transform it into a time series format for easier analysis. This is where <code>convert_to_ts()</code> steps in.</p>
<p>By simply passing your data frame as the <code>.data</code> argument, <code>convert_to_ts()</code> does the heavy lifting for you. It reshapes your data into a tidy time series format, making it easier to work with and analyze. If you set <code>.return_ts</code> to <code>TRUE</code>, it will return the time series data, ready for your next analysis step.</p>
<p>But that’s not all. Sometimes, you might want to pivot your data into long format for specific analyses or visualizations. That’s where the <code>.pivot_longer</code> argument comes into play. If you set it to <code>TRUE</code>, <code>convert_to_ts()</code> will pivot your data into long format, providing you with even more flexibility in your data manipulation.</p>
</section>
<section id="real-world-applications" class="level1">
<h1>Real-World Applications</h1>
<p>Let’s talk about the real-world applications of <code>convert_to_ts()</code>. Consider you are working with some time series data and it follows some distribution fairly well. You may want to run multiple simulations of that data, which can be done with one of the <code>tidy_</code> distribution functions, and you can take that output and pipe it right into <code>convert_to_ts()</code> and see different simulations of a time series generated from some distribution. I do this on a regular basis at my day job in healthcare.</p>
<p>But it’s not just limited to healthcare. Stock analysts, meteorologists, and anyone dealing with time-based data can benefit from this versatile function. The possibilities are endless, and the power is in your hands.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
</section>
<section id="example-1-convert-data-to-time-series-format-without-returning-time-series-data" class="level1">
<h1>Example 1: Convert data to time series format without returning time series data</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb2-2"></span>
<span id="cb2-3">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>()</span>
<span id="cb2-4">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convert_to_ts</span>(x, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(result)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 1
        y
    &lt;dbl&gt;
1  1.23  
2  0.715 
3  0.738 
4  1.08  
5 -0.0613
6  1.19  </code></pre>
</div>
</div>
</section>
<section id="example-2-convert-data-to-time-series-format-and-pivot-it-into-long-format" class="level1">
<h1>Example 2: Convert data to time series format and pivot it into long format</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb4-2">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convert_to_ts</span>(x, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(result)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 2
  sim_number      y
  &lt;chr&gt;       &lt;dbl&gt;
1 1           0.881
2 1          -0.105
3 1          -0.655
4 1          -0.564
5 1           0.600
6 1          -0.811</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(result<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim_number)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "1" "2" "3" "4"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convert_to_ts</span>(x, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              1           2          3          4
[1,]  0.8807494  0.04680495 -0.1993147 -1.5549585
[2,] -0.1045016  0.14023102  0.5433512 -1.9247656
[3,] -0.6549336 -0.20818900 -0.1689992 -0.2934131
[4,] -0.5638595  0.87588361  0.4802693 -1.2052377
[5,]  0.6002684  0.26137176  1.5993445 -0.5379518
[6,] -0.8111576 -0.60834621 -0.4859808 -0.2178982</code></pre>
</div>
</div>
</section>
<section id="example-3-convert-data-to-time-series-format-and-return-the-time-series-data" class="level1">
<h1>Example 3: Convert data to time series format and return the time series data</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>()</span>
<span id="cb10-2">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">convert_to_ts</span>(x)</span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(result)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>               y
[1,] -0.21509987
[2,] -0.88989659
[3,]  0.69464989
[4,] -0.03296698
[5,] -0.82499955
[6,] -0.71676037</code></pre>
</div>
</div>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In the ever-evolving world of data analysis, having the right tools at your disposal is crucial. <code>convert_to_ts()</code> in TidyDensity is one such tool that can simplify your data transformation processes and elevate your data analysis game. It’s all about efficiency and flexibility, allowing you to focus on what matters most – deriving valuable insights from your data.</p>
<p>So, whether you’re a data enthusiast, a coding wizard, or someone curious about the world of R, <code>convert_to_ts()</code> is here to make your life easier. Give it a try, explore its capabilities, and unlock the potential of your time series data. With TidyDensity, the possibilities are endless, and your data analysis journey just got a whole lot smoother. Happy coding!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>tidydensity</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-03/index.html</guid>
  <pubDate>Fri, 03 Nov 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Fitting a Distribution to Data in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-02/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The gamma distribution is a continuous probability distribution that is often used to model waiting times or other positively skewed data. It is a two-parameter distribution, where the shape parameter controls the skewness of the distribution and the scale parameter controls the spread of the distribution.</p>
</section>
<section id="fitting-a-gamma-distribution-to-a-dataset-in-r" class="level1">
<h1>Fitting a gamma distribution to a dataset in R</h1>
<p>There are two main ways to fit a gamma distribution to a dataset in R:</p>
<ol type="1">
<li><strong>Maximum likelihood estimation (MLE)</strong>: This method estimates the parameters of the gamma distribution that are most likely to have produced the observed data.</li>
<li><strong>Method of moments:</strong> This method estimates the parameters of the gamma distribution by equating the sample mean and variance to the theoretical mean and variance of the gamma distribution.</li>
</ol>
<p><strong>MLE</strong> is the more common and generally more reliable method of fitting a gamma distribution to a dataset. To fit a gamma distribution to a dataset using MLE, we can use the <code>fitdist()</code> function from the <code>fitdistrplus</code> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install the fitdistrplus package if necessary</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages("fitdistrplus")</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the fitdistrplus package</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(fitdistrplus)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-9">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_gamma</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a gamma distribution to the data</span></span>
<span id="cb1-12">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fitdist</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distr =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gamma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mle"</span>)</span></code></pre></div>
</div>
<p>The <code>fit</code> object contains the estimated parameters of the gamma distribution, as well as other information about the fit. We can access the estimated parameters using the <code>coef()</code> function. Now the <code>tidy_gamma()</code> function from the TidyDensity package comes with a default setting of a <code>.scale = 0.3</code> and <code>shape = 1</code>. The rate is <code>1/.scale</code>, so by default it is 3.33333</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the estimated parameters of the gamma distribution</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   shape     rate 
1.031833 3.594773 </code></pre>
</div>
</div>
<p>Now let’s see how that compares to the built in TidyDensity function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">util_gamma_param_estimate</span>(data)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>parameter_tbl[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shape"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scale"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shape_ratio"</span>)]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 3
  shape scale shape_ratio
  &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;
1 0.983 0.292        3.36</code></pre>
</div>
</div>
<p>In the above, the <code>shape_ratio</code> is the <code>rate</code></p>
</section>
<section id="try-on-your-own" class="level1">
<h1>Try on your own!</h1>
<p>I encourage you to try fitting a gamma distribution to your own data. You can use the <code>fitdistrplus</code> package in R to fit a gamma distribution to any dataset. Once you have fitted a gamma distribution to your data, you can use the estimated parameters to generate random samples from the gamma distribution or to calculate the probability of observing a particular value.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>distribution</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-02/index.html</guid>
  <pubDate>Thu, 02 Nov 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Understanding the Triangular Distribution and Its Application in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-11-01/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>As an R programmer and enthusiast, I’m excited to delve into the fascinating world of probability distributions. One of the lesser-known but incredibly useful distributions is the Triangular Distribution, and today we’ll explore what it is and how to leverage it in R using the EnvStats library.</p>
</section>
<section id="what-is-the-triangular-distribution" class="level1">
<h1>What is the Triangular Distribution?</h1>
<p>The Triangular Distribution is a continuous probability distribution with a triangular shape, hence the name. It is defined by three parameters: <code>min</code>, <code>max</code>, and <code>mode</code>. These parameters determine the range of values the distribution can take and the most likely value within that range. In mathematical terms, the probability density function (PDF) of the Triangular Distribution is given by:</p>
<pre><code>f(x) = (2 / (b - a)) * (x - a) / (c - a)      for a ≤ x &lt; c
f(x) = (2 / (b - a)) * (b - x) / (b - c)      for c ≤ x ≤ b</code></pre>
<p>Where: - <code>a</code> is the minimum value (<code>min</code> parameter). - <code>b</code> is the maximum value (<code>max</code> parameter). - <code>c</code> is the mode, which is the peak or most likely value (<code>mode</code> parameter).</p>
</section>
<section id="using-the-envstats-r-library" class="level1">
<h1>Using the EnvStats R Library</h1>
<p>To work with the Triangular Distribution in R, we can use the functions provided by the EnvStats library. Here are the key functions you need to know:</p>
<ul>
<li><p><code>dtri(x, min = 0, max = 1, mode = 1/2)</code>: This function calculates the probability density at a given <code>x</code>. You can specify the <code>min</code>, <code>max</code>, and <code>mode</code> parameters to define the distribution.</p></li>
<li><p><code>ptri(q, min = 0, max = 1, mode = 1/2)</code>: Use this function to find the cumulative probability up to a given <code>q</code>. Again, you can customize the <code>min</code>, <code>max</code>, and <code>mode</code> parameters.</p></li>
<li><p><code>qtri(p, min = 0, max = 1, mode = 1/2)</code>: The quantile function, which helps you find the value of <code>x</code> for a given cumulative probability <code>p</code>. As always, you can set <code>min</code>, <code>max</code>, and <code>mode</code> to match your specific distribution.</p></li>
<li><p><code>rtri(n, min = 0, max = 1, mode = 1/2)</code>: This function generates a random set of <code>n</code> numbers following the Triangular Distribution with the specified parameters.</p></li>
</ul>
</section>
<section id="practical-example-in-r" class="level1">
<h1>Practical Example in R</h1>
<p>Let’s see how to use these functions in a practical example. Suppose we want to model the distribution of daily temperatures in a specific region. We have historical data indicating that the minimum temperature is -5°C, the maximum temperature is 30°C, and the most likely temperature (mode) is around 20°C.</p>
<p>Here’s how you can work with this scenario in R using the EnvStats library:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the EnvStats library</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(EnvStats)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the parameters</span></span>
<span id="cb2-5">min_temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-6">max_temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb2-7">mode_temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the density at x = 15°C</span></span>
<span id="cb2-10">density_at_15 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dtri</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> min_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> max_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> mode_temp)</span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density at 15°C:"</span>, density_at_15, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Density at 15°C: 0.04571429 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the cumulative probability up to 25°C</span></span>
<span id="cb4-2">cumulative_prob_up_to_25 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ptri</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> min_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> max_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> mode_temp)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cumulative Probability up to 25°C:"</span>, cumulative_prob_up_to_25, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Cumulative Probability up to 25°C: 0.9285714 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the temperature value for a cumulative probability of 0.75</span></span>
<span id="cb6-2">temperature_for_prob_0<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.75</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qtri</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> min_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> max_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> mode_temp)</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature for Cumulative Probability 0.75:"</span>, temperature_for_prob_0<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.75</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Temperature for Cumulative Probability 0.75: 20.64586 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate a random set of 10 temperatures</span></span>
<span id="cb8-2">random_temperatures <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rtri</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> min_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> max_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> mode_temp)</span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random Temperatures:"</span>, random_temperatures, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Random Temperatures: 26.21123 6.59049 13.64297 19.18005 9.697022 10.96856 6.626135 18.84034 -3.711269 25.5044 </code></pre>
</div>
</div>
<p>In this example, we’ve used the Triangular Distribution to model daily temperatures, calculate probabilities, find quantiles, and generate random temperature values.</p>
<p>The Triangular Distribution is a versatile tool for modeling scenarios where you have some knowledge about the range and likelihood of an event or outcome. Whether you’re simulating real-world scenarios or conducting risk assessments, the EnvStats library in R makes it easy to work with this distribution.</p>
<p>So, the next time you need to model uncertain events with known bounds and modes, remember the Triangular Distribution and its helpful functions in R!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>distribution</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-11-01/index.html</guid>
  <pubDate>Wed, 01 Nov 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Multinomial Distribution in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-31/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The multinomial distribution is a probability distribution that describes the probability of obtaining a specific number of counts for k different outcomes, when each outcome has a fixed probability of occurring.</p>
<p>In R, we can use the <code>rmultinom()</code> function to simulate random samples from a multinomial distribution, and the <code>dmultinom()</code> function to calculate the probability of a specific outcome.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1" class="level2">
<h2 class="anchored" data-anchor-id="example-1">Example 1</h2>
<p>Suppose we have a fair die, and we want to simulate rolling the die 10 times. We can use the <code>rmultinom()</code> function to do this as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate rolling a fair die 10 times</span></span>
<span id="cb1-2">die_rolls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rmultinom</span>(</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb1-5">  )</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the results</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(die_rolls)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
[1,]    0    0    0    0    0    0    0    0    0     0
[2,]    0    1    0    0    0    0    0    0    0     0
[3,]    1    0    0    0    0    0    0    1    0     0
[4,]    0    0    0    0    0    0    0    0    0     0
[5,]    0    0    0    0    0    1    1    0    1     0
[6,]    0    0    1    1    1    0    0    0    0     1</code></pre>
</div>
</div>
</section>
<section id="example-2" class="level2">
<h2 class="anchored" data-anchor-id="example-2">Example 2</h2>
<p>Suppose we want to calculate the probability of getting exactly two ones, two threes, two fours, two fives, and two sixes when rolling a fair die 10 times. We can use the <code>dmultinom()</code> function to do this as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the probability of getting exactly two ones, two threes, two fours, two fives, and two sixes when rolling a fair die 10 times</span></span>
<span id="cb3-2">probability <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dmultinom</span>(</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), </span>
<span id="cb3-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb3-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb3-6">  )</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(probability)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.01161216</code></pre>
</div>
</div>
</section>
<section id="try-it-on-your-own" class="level2">
<h2 class="anchored" data-anchor-id="try-it-on-your-own">Try it on your own!</h2>
<p>I encourage readers to try using the <code>rmultinom()</code> and <code>dmultinom()</code> functions on their own data. For example, you could simulate rolling a die 100 times and see how often each outcome occurs. Or, you could calculate the probability of getting a certain number of heads and tails when flipping a coin 10 times.</p>
<p>Here is an example of how to use the <code>rmultinom()</code> function to simulate flipping a coin 10 times and calculate the probability of getting exactly five heads and five tails:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate flipping a coin 10 times</span></span>
<span id="cb5-2">coin_flips <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rmultinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the probability of getting exactly five heads and five tails</span></span>
<span id="cb5-5">probability <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dmultinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(probability)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.2460938</code></pre>
</div>
</div>
<p>I hope this blog post has helped you learn how to use the multinomial distribution in R. Please feel free to leave a comment if you have any questions.</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>distribution</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-31/index.html</guid>
  <pubDate>Tue, 31 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Randomness in R: runif(), punif(), dunif(), and quinf()</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-30/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Randomness is an essential part of many statistical and machine learning tasks. In R, there are a number of functions that can be used to generate random numbers, but the <code>runif()</code> function is the most commonly used.</p>
<section id="the-runif-function" class="level2">
<h2 class="anchored" data-anchor-id="the-runif-function">The runif() function</h2>
<p>The <code>runif()</code> function generates random numbers from a uniform distribution. A uniform distribution is a distribution in which all values are equally likely. The <code>runif()</code> function takes three arguments:</p>
<ul>
<li><code>n</code>: the number of random numbers to generate</li>
<li><code>min</code>: the lower bound of the distribution</li>
<li><code>max</code>: the upper bound of the distribution</li>
</ul>
<p>The default values for <code>min</code> and <code>max</code> are 0 and 1, respectively.</p>
<p>Here is an example of how to use the <code>runif()</code> function to generate 10 random numbers from a uniform distribution between 0 and 1:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-2">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
<p>Output:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(r)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 0.2875775 0.7883051 0.4089769 0.8830174 0.9404673 0.0455565 0.5281055
 [8] 0.8924190 0.5514350 0.4566147</code></pre>
</div>
</div>
<p>The <code>runif()</code> function can also be used to generate random numbers from other distributions, such as the normal distribution, the Poisson distribution, and the binomial distribution.</p>
</section>
<section id="the-punif-function" class="level2">
<h2 class="anchored" data-anchor-id="the-punif-function">The punif() function</h2>
<p>The <code>punif()</code> function calculates the cumulative probability density function (CDF) of the uniform distribution. The CDF is the probability that a random variable will be less than or equal to a certain value.</p>
<p>The <code>punif()</code> function takes three arguments:</p>
<ul>
<li><code>x</code>: the value at which to calculate the CDF</li>
<li><code>min</code>: the lower bound of the distribution</li>
<li><code>max</code>: the upper bound of the distribution</li>
</ul>
<p>Here is an example of how to use the <code>punif()</code> function to calculate the CDF of a uniform distribution between 0 and 1 at the value 0.5:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb4-2">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">punif</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>Output:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(p)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.5</code></pre>
</div>
</div>
<p>This means that there is a 50% chance that a random variable from this distribution will be less than or equal to 0.5.</p>
</section>
<section id="the-dunif-function" class="level2">
<h2 class="anchored" data-anchor-id="the-dunif-function">The dunif() function</h2>
<p>The <code>dunif()</code> function calculates the probability density function (PDF) of the uniform distribution. The PDF is the probability that a random variable will be equal to a certain value.</p>
<p>The <code>dunif()</code> function takes three arguments:</p>
<ul>
<li><code>x</code>: the value at which to calculate the PDF</li>
<li><code>min</code>: the lower bound of the distribution</li>
<li><code>max</code>: the upper bound of the distribution</li>
</ul>
<p>Here is an example of how to use the <code>dunif()</code> function to calculate the PDF of a uniform distribution between 0 and 1 at the value 0.5:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb7-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dunif</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>Output:</p>
<pre><code>print(d)</code></pre>
<p>This means that the probability of a random variable from this distribution being equal to 0.5 is 1.</p>
</section>
<section id="the-quinf-function" class="level2">
<h2 class="anchored" data-anchor-id="the-quinf-function">The quinf() function</h2>
<p>The <code>quinf()</code> function calculates the quantile function of the uniform distribution. The quantile function is the inverse of the CDF. It takes a probability as an input and returns the value that has that probability.</p>
<p>The <code>quinf()</code> function takes two arguments:</p>
<ul>
<li><code>p</code>: the probability</li>
<li><code>min</code>: the lower bound of the distribution</li>
<li><code>max</code>: the upper bound of the distribution</li>
</ul>
<p>Here is an example of how to use the <code>quinf()</code> function to calculate the quantile of a uniform distribution between 0 and 1 at the probability 0.5:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb9-2">q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qunif</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>Output:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(q)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.5</code></pre>
</div>
</div>
<p>This means that there is a 50% chance that a random variable</p>
<p>If you want to easily see different versions of the uniform distribution then you can either code them out or use the <code>TidyDensity</code> package. Let’s take a quick look.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">pacman<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(TidyDensity)</span>
<span id="cb12-2"></span>
<span id="cb12-3">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span></span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_uniform</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-30/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="with-tidydensity" class="level2">
<h2 class="anchored" data-anchor-id="with-tidydensity">With TidyDensity</h2>
<p>Now different variations can be visualized with the following workflow:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_multi_single_dist</span>(</span>
<span id="cb13-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.tidy_dist =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidy_uniform"</span>,</span>
<span id="cb13-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.param_list =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb13-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> n,</span>
<span id="cb13-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb13-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.max =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb13-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb13-8">  )</span>
<span id="cb13-9">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_multi_dist_autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-30/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>distribution</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-30/index.html</guid>
  <pubDate>Mon, 30 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Plotting Log Log Plots In Base R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-27/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A log-log plot is a type of graph where both the x-axis and y-axis are in logarithmic scales. This is particularly useful when dealing with data that spans several orders of magnitude. By taking the logarithm of the data, we can compress large values and reveal patterns that might be hidden on a linear scale.</p>
<p>Let’s start with a simple example using base R.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-scatter-plot-with-log-log-scales" class="level2">
<h2 class="anchored" data-anchor-id="example-1-scatter-plot-with-log-log-scales">Example 1: Scatter Plot with Log-Log Scales</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb1-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a log-log plot</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xy"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log-Log Plot Example"</span>, </span>
<span id="cb1-7">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X (log scale)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y (log scale)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-27/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this code, we create a scatter plot with log scales for both the x and y-axes using the <code>plot</code> function. The <code>log = "xy"</code> argument specifies that both axes should be in logarithmic scale. This makes it easier to visualize the relationship between x and y.</p>
</section>
<section id="example-2-line-plot-with-log-log-scales" class="level2">
<h2 class="anchored" data-anchor-id="example-2-line-plot-with-log-log-scales">Example 2: Line Plot with Log-Log Scales</h2>
<p>Let’s say you have data for a power law relationship, where y is proportional to x raised to a power. A log-log plot can help you confirm this relationship.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate data for a power law relationship</span></span>
<span id="cb2-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb2-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a log-log plot</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xy"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, </span>
<span id="cb2-7">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log-Log Plot for Power Law"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X (log scale)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y (log scale)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-27/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here, we generate data for a power law relationship (y = 2 * x^2) and create a log-log plot. The <code>type = "b"</code> argument adds both points and lines, making the plot easier to interpret. You can see that on a log-log scale, this power law relationship appears as a straight line.</p>
</section>
<section id="example-3-customizing-log-log-plots" class="level2">
<h2 class="anchored" data-anchor-id="example-3-customizing-log-log-plots">Example 3: Customizing Log-Log Plots</h2>
<p>You can further customize your log-log plots with various options.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Customizing a log-log plot</span></span>
<span id="cb3-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb3-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xy"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Custom Log-Log Plot"</span>,</span>
<span id="cb3-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X (log scale)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y (log scale)"</span>,</span>
<span id="cb3-7">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding grid lines</span></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid</span>()</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding a trendline (linear regression)</span></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(x)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-27/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we customize the log-log plot by setting axis limits, changing the point color and type, adding grid lines, and even fitting a trendline using linear regression.</p>
</section>
</section>
<section id="exploration" class="level1">
<h1>Exploration</h1>
<p>Log-log plots are powerful tools for visualizing data, especially when dealing with a wide range of values. I encourage you to try creating log-log plots with your own datasets. It’s an excellent way to gain insights into your data and discover underlying patterns that may not be apparent on a linear scale.</p>
<p>Remember, the key is to use the <code>log</code> argument with “xy” to set both axes to logarithmic scales. Experiment with different types of data and customize your plots to make them more informative and engaging. Happy plotting!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-27/index.html</guid>
  <pubDate>Fri, 27 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Plotting a Logistic Regression In Base R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-26/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Logistic regression is a statistical method used for predicting the probability of a binary outcome. It’s a fundamental tool in machine learning and statistics, often employed in various fields such as healthcare, finance, and marketing. We use logistic regression when we want to understand the relationship between one or more independent variables and a binary outcome, which can be “yes/no,” “1/0,” or any two-class distinction.</p>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<p>Before we dive into plotting the logistic regression curve, let’s start with the basics. First, you’ll need some data. For this blog post, I’ll assume you have your dataset ready. If you don’t, you can easily find sample datasets online to practice with.</p>
</section>
<section id="load-the-data" class="level1">
<h1>Load the Data</h1>
<p>In R, we use the <code>read.csv</code> function to load a CSV file into a data frame. For example, if you have a dataset called “mydata.csv,” you can load it like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the data into a data frame</span></span>
<span id="cb1-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mydata.csv"</span>)</span></code></pre></div>
<p>We will instead use the following data set:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb2-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>))))</span>
<span id="cb2-7">)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 2
      x     y
  &lt;dbl&gt; &lt;int&gt;
1 2.88      0
2 7.88      1
3 4.09      0
4 8.83      0
5 9.40      1
6 0.456     0</code></pre>
</div>
</div>
</section>
<section id="fit-a-logistic-regression-model" class="level1">
<h1>Fit a Logistic Regression Model</h1>
<p>Next, we need to fit a logistic regression model to our data. We’ll use the <code>glm</code> (Generalized Linear Model) function to do this. Suppose we want to predict the probability of a “success” (1) based on a single predictor variable “x.”</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a logistic regression model</span></span>
<span id="cb4-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> binomial)</span>
<span id="cb4-3"></span>
<span id="cb4-4">broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glance</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 8
  null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs
          &lt;dbl&gt;   &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;int&gt; &lt;int&gt;
1          138.      99  -51.5  107.  112.     103.          98   100</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 5
  term        estimate std.error statistic     p.value
  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;
1 (Intercept)   -2.63      0.571     -4.60 0.00000422 
2 x              0.505     0.102      4.96 0.000000699</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">augment</span>(model), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 1
Columns: 8
$ y          &lt;int&gt; 0
$ x          &lt;dbl&gt; 2.875775
$ .fitted    &lt;dbl&gt; -1.175925
$ .resid     &lt;dbl&gt; -0.7333581
$ .hat       &lt;dbl&gt; 0.01969748
$ .sigma     &lt;dbl&gt; 1.028093
$ .cooksd    &lt;dbl&gt; 0.003162007
$ .std.resid &lt;dbl&gt; -0.7406892</code></pre>
</div>
</div>
</section>
<section id="predict-probabilities" class="level1">
<h1>Predict Probabilities</h1>
<p>Now that we have our model, we can use it to predict probabilities. We’ll create a sequence of values for our predictor variable, and for each value, we’ll predict the probability of success, in this case <code>y</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a sequence of predictor values</span></span>
<span id="cb10-2">x_seq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict probabilities</span></span>
<span id="cb10-5">probabilities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(</span>
<span id="cb10-6">  model, </span>
<span id="cb10-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_seq), </span>
<span id="cb10-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span></span>
<span id="cb10-9">  )</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(x_seq)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.00 0.01 0.02 0.03 0.04 0.05</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(probabilities)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         1          2          3          4          5          6 
0.06732923 0.06764710 0.06796636 0.06828702 0.06860908 0.06893255 </code></pre>
</div>
</div>
<p>The <code>predict</code> function here calculates the probabilities using our logistic regression model.</p>
</section>
<section id="plot-the-logistic-regression-curve" class="level1">
<h1>Plot the Logistic Regression Curve</h1>
<p>Finally, let’s plot the logistic regression curve. We’ll use the <code>plot</code> function to create a scatter plot of the data points, and then we’ll overlay the logistic curve using the <code>lines</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the data points</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb14-3">  df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, </span>
<span id="cb14-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, </span>
<span id="cb14-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, </span>
<span id="cb14-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predictor Variable"</span>, </span>
<span id="cb14-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability of Success"</span></span>
<span id="cb14-8">  )</span>
<span id="cb14-9"></span>
<span id="cb14-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the logistic regression curve</span></span>
<span id="cb14-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x_seq, probabilities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-26/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>And there you have it! You’ve successfully plotted a logistic regression curve in base R. The blue dots represent your data points, and the red curve is the logistic regression curve, showing how the probability of success changes with the predictor variable.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>I encourage you to try this out with your own dataset. Logistic regression is a powerful tool for modeling binary outcomes, and visualizing the curve helps you understand the relationship between your predictor variable and the probability of success. Experiment with different datasets and predictor variables to gain a deeper understanding of this essential statistical technique.</p>
<p>Remember, practice makes perfect, and the more you work with logistic regression in R, the more proficient you’ll become. Happy coding!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-26/index.html</guid>
  <pubDate>Thu, 26 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>What’s a Bland-Altman Plot? In Base R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-25/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Before we dive into the code, let’s briefly understand what a Bland-Altman plot is. It’s a graphical method to visualize the agreement between two measurement techniques, often used in fields like medicine or any domain with comparative measurements. The plot displays the differences between two measurements (Y-axis) against their means (X-axis).</p>
</section>
<section id="step-1-data-preparation" class="level1">
<h1>Step 1: Data Preparation</h1>
<p>Start by loading your data into R. In our example, we’ll create some synthetic data for illustration purposes. You’d replace this with your real data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creating example data</span></span>
<span id="cb1-2">method_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb1-3">method_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">24.5</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the differences and means</span></span>
<span id="cb1-6">diff_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> method_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> method_B</span>
<span id="cb1-7">mean_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (method_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> method_B) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(method_A, method_B, mean_values, diff_values)</span></code></pre></div>
</div>
</section>
<section id="step-2-calculate-average-difference-and-ci" class="level1">
<h1>Step 2: Calculate Average Difference and CI</h1>
<p>Now that we have our data prepared, let’s create the Bland-Altman plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">mean_diff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>diff_values)</span>
<span id="cb2-2">mean_diff</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">lower <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mean_diff <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>diff_values)</span>
<span id="cb4-2">upper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mean_diff <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.96</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>diff_values)</span>
<span id="cb4-3"></span>
<span id="cb4-4">lower</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -0.3765386</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">upper</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.376539</code></pre>
</div>
</div>
</section>
<section id="step-3-creating-the-bland-altman-plot" class="level1">
<h1>Step 3: Creating the Bland-Altman Plot</h1>
<p>We are going to do this in base R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mean_values, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>diff_values, </span>
<span id="cb8-3">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean of Methods A and B"</span>,</span>
<span id="cb8-4">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Difference (Method A - Method B)"</span>,</span>
<span id="cb8-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bland-Altman Plot"</span>,</span>
<span id="cb8-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(lower <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (lower <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), upper <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>))</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a horizontal line at the mean difference</span></span>
<span id="cb8-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(diff_values), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add Confidence Intervals</span></span>
<span id="cb8-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> upper, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-25/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This code will generate a simple Bland-Altman plot, and here’s what each part does:</p>
<ul>
<li><code>plot()</code>: Creates the scatter plot with means on the X-axis and differences on the Y-axis.</li>
<li><code>abline(h = mean(diff_values), col = "red", lty = 2)</code>: Adds a red dashed line at the mean difference.</li>
<li><code>abline(h = upper, col = "green", lty = 2)</code>: Adds blue dashed lines representing the 95% limits of agreement.</li>
</ul>
</section>
<section id="step-4-interpretation" class="level1">
<h1>Step 4: Interpretation</h1>
<p>Now that you’ve generated your Bland-Altman plot, let’s interpret it:</p>
<ul>
<li>The red line represents the mean difference between the two methods.</li>
<li>The blue dashed lines show the 95% limits of agreement, which help you assess the spread of the differences.</li>
</ul>
<p>If most data points fall within the blue lines, it indicates good agreement between the two methods. If data points are scattered widely outside the lines, there may be a systematic bias or inconsistency between the methods.</p>
</section>
<section id="step-5-exploration" class="level1">
<h1>Step 5: Exploration</h1>
<p>I encourage you to try this out with your own data. Replace the example data with your measurements and see what insights your Bland-Altman plot reveals.</p>
<p>In conclusion, creating a Bland-Altman plot in R is a valuable technique to visualize agreement or bias between two measurement methods. It’s an essential tool for quality control and validation in various fields. I hope this step-by-step guide helps you get started. Happy plotting!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-25/index.html</guid>
  <pubDate>Wed, 25 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating a Scree Plot in Base R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-24/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A scree plot is a line plot that shows the eigenvalues or variance explained by each principal component (PC) in a Principal Component Analysis (PCA). It is a useful tool for determining the number of PCs to retain in a PCA model.</p>
<p>In this blog post, we will show you how to create a scree plot in base R. We will use the <code>iris</code> dataset as an example.</p>
</section>
<section id="step-1-load-the-dataset-and-prepare-the-data" class="level1">
<h1>Step 1: Load the dataset and prepare the data</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Drop the non-numerical column</span></span>
<span id="cb1-2">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</div>
<p>E Step 2: Perform Principal Component Analysis</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform PCA on the iris dataset</span></span>
<span id="cb2-2">pca <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prcomp</span>(df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>E Step 3: Create the scree plot</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the eigenvalues from the PCA object</span></span>
<span id="cb3-2">eigenvalues <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sdev<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scree plot</span></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(eigenvalues, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>,</span>
<span id="cb3-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Principal Component"</span>,</span>
<span id="cb3-7">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eigenvalue"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a line at y = 1 to indicate the elbow</span></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-24/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Percentage of variance explained</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(eigenvalues<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(eigenvalues), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>,</span>
<span id="cb4-3">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Principal Component"</span>,</span>
<span id="cb4-4">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Percentage of Variance Explained"</span>)</span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-24/index_files/figure-html/unnamed-chunk-3-2.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="interpretation" class="level1">
<h1>Interpretation</h1>
<p>The scree plot shows that the first two principal components explain the most variance in the data. The third and fourth principal components explain much less variance.</p>
<p>Based on the scree plot, we can conclude that the first two principal components are sufficient for capturing the most important information in the data.</p>
<p>Here are the eigenvalues and the percentage explained</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">eigenvalues</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2.91849782 0.91403047 0.14675688 0.02071484</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">eigenvalues<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(eigenvalues)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.729624454 0.228507618 0.036689219 0.005178709</code></pre>
</div>
</div>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try it yourself</h1>
<p>Try creating a scree plot for another dataset of your choice. You can use the same steps outlined above.</p>
<p>Here are some additional tips for creating scree plots:</p>
<ul>
<li>If you are using a dataset with a large number of variables, you may want to consider scaling the data before performing PCA. This will ensure that all of the variables are on the same scale and that no one variable has undue influence on the results.</li>
<li>You can also add a line to the scree plot at y = 1 to indicate the elbow. The elbow is the point where the scree plot begins to level off. This is often used as a heuristic for determining the number of PCs to retain.</li>
<li>Finally, keep in mind that the interpretation of a scree plot is subjective. There is no single rule for determining the number of PCs to retain. The best approach is to consider the scree plot in conjunction with other factors, such as your research goals and the specific dataset you are using.</li>
</ul>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-24/index.html</guid>
  <pubDate>Tue, 24 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Create a Bubble Chart in R using ggplot2</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-23/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Bubble charts are a great way to visualize data with three dimensions. The size of the bubbles represents a third variable, which can be used to show the importance of that variable or to identify relationships between the three variables.</p>
<p>To create a bubble chart in R using <code>ggplot2</code>, you will need to use the <code>geom_point()</code> function. This function will plot points on your chart, and you can use the size aesthetic to control the size of the points.</p>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<p>Before we begin, ensure you have R and <code>ggplot2</code> installed. If you don’t have <code>ggplot2</code>, you can install it with the command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)</span></code></pre></div>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-basic-bubble-chart" class="level2">
<h2 class="anchored" data-anchor-id="example-1-basic-bubble-chart">Example 1: Basic Bubble Chart</h2>
<p>Let’s start with a simple example using randomly generated data. We’ll create a bubble chart that shows the relationship between two variables and represents a third variable using bubble sizes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load ggplot2 library</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate random data</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb2-6">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb2-10">)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a bubble chart</span></span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> size)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb2-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Basic Bubble Chart"</span>, </span>
<span id="cb2-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-Axis"</span>, </span>
<span id="cb2-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y-Axis"</span>,</span>
<span id="cb2-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-23/index_files/figure-html/ggplot2_bubble_chart-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we create a bubble chart with random data points, where <code>x</code> and <code>y</code> are the coordinates, and <code>size</code> represents the bubble size. The <code>geom_point()</code> function is used to add the points, and we adjust the size range using <code>scale_size_continuous()</code>.</p>
</section>
<section id="example-2-customizing-bubble-chart" class="level2">
<h2 class="anchored" data-anchor-id="example-2-customizing-bubble-chart">Example 2: Customizing Bubble Chart</h2>
<p>Now, let’s customize our bubble chart further. We’ll use a sample dataset to visualize car data, with car names on the bubbles.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb3-2">cars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mtcars</span>
<span id="cb3-3">cars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(cars)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a bubble chart</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cars, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> disp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> hp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb3-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Customized Bubble Chart"</span>, </span>
<span id="cb3-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miles per Gallon"</span>, </span>
<span id="cb3-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Displacement"</span>,</span>
<span id="cb3-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HP"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-23/index_files/figure-html/ggplot2_bubble_chart2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we’re using the mtcars dataset to create a bubble chart that displays car names using <code>geom_text()</code>. The <code>vjust</code> and <code>hjust</code> parameters control the text placement.</p>
</section>
</section>
<section id="other-ways-to-use-bubble-charts" class="level1">
<h1>Other Ways to Use Bubble Charts</h1>
<p>Here are a few examples of bubble charts that you can create using ggplot2:</p>
<ul>
<li>A bubble chart showing the relationship between the population, GDP, and land area of different countries.</li>
<li>A bubble chart showing the relationship between the sales, marketing budget, and customer satisfaction of different companies.</li>
<li>A bubble chart showing the relationship between the temperature, humidity, and wind speed at different locations on a map.</li>
</ul>
</section>
<section id="you-try" class="level1">
<h1>You Try!</h1>
<p>Creating bubble charts in R is not only informative but also fun! Encourage your readers to experiment with their own datasets and customize these examples. The ggplot2 library offers a wealth of possibilities for creating beautiful and insightful visualizations. So, don’t hesitate to dive into R and start charting your data with bubbles!</p>
<p>I hope this guide helps you and your readers in creating engaging bubble charts in R using ggplot2. If you have any questions or need further clarification, feel free to ask. Happy coding, Steve!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <category>ggplot2</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-23/index.html</guid>
  <pubDate>Mon, 23 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating Pareto Charts in R with the qcc Package</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-20/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A Pareto chart is a type of bar chart that shows the frequency of different categories in a dataset, ordered by frequency from highest to lowest. It is often used to identify the most common problems or causes of a problem, so that resources can be focused on addressing them.</p>
<p>To create a Pareto chart in R, we can use the <code>qcc</code> package. The <code>qcc</code> package provides a number of functions for quality control, including the <code>pareto.chart()</code> function for creating Pareto charts.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-creating-a-pareto-chart-from-a-data-frame" class="level2">
<h2 class="anchored" data-anchor-id="example-1-creating-a-pareto-chart-from-a-data-frame">Example 1: Creating a Pareto chart from a data frame</h2>
<p>The following code shows how to create a Pareto chart from a data frame:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(qcc)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a data frame with the product and its count</span></span>
<span id="cb1-4">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">product =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Office desks"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chairs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filing cabinets"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bookcases"</span>),</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb1-7">)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the Pareto chart</span></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pareto.chart</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>count, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pareto Chart of Product Sales"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-20/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>   
Pareto chart analysis for df$count
    Frequency Cum.Freq. Percentage Cum.Percent.
  A 100.00000 100.00000   32.25806     32.25806
  B  80.00000 180.00000   25.80645     58.06452
  C  70.00000 250.00000   22.58065     80.64516
  D  60.00000 310.00000   19.35484    100.00000</code></pre>
</div>
</div>
<p>This code will create a Pareto chart of the product sales, with the office desks bar at the top and the bookcases bar at the bottom. The cumulative percentage line is also plotted, which shows the percentage of total sales that each product accounts for.</p>
</section>
<section id="example-2-creating-a-pareto-chart-from-a-vector" class="level2">
<h2 class="anchored" data-anchor-id="example-2-creating-a-pareto-chart-from-a-vector">Example 2: Creating a Pareto chart from a vector</h2>
<p>We can also create a Pareto chart from a vector. The following code shows how to create a Pareto chart of the number of defects found in a manufacturing process:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a vector with the number of defects found in each category</span></span>
<span id="cb3-2">defects <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the Pareto chart</span></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pareto.chart</span>(defects, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pareto Chart of Defects"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-20/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>   
Pareto chart analysis for defects
    Frequency Cum.Freq. Percentage Cum.Percent.
  A  10.00000  10.00000   27.77778     27.77778
  B   8.00000  18.00000   22.22222     50.00000
  C   7.00000  25.00000   19.44444     69.44444
  D   6.00000  31.00000   16.66667     86.11111
  E   5.00000  36.00000   13.88889    100.00000</code></pre>
</div>
</div>
<p>This code will create a Pareto chart of the number of defects found, with the most common defect category at the top and the least common defect category at the bottom. The cumulative percentage line is also plotted, which shows the percentage of total defects that each category accounts for.</p>
</section>
<section id="customizing-the-pareto-chart" class="level2">
<h2 class="anchored" data-anchor-id="customizing-the-pareto-chart">Customizing the Pareto chart</h2>
<p>We can customize the appearance of the Pareto chart using a number of arguments to the <code>pareto.chart()</code> function. For example, we can change the title of the chart, the labels of the x- and y-axes, the colors of the bars, and the line type of the cumulative percentage line.</p>
<p>The following code shows how to customize the Pareto chart from the first example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a data frame with the product and its count</span></span>
<span id="cb5-2">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">product =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Office desks"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chairs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filing cabinets"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bookcases"</span>),</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb5-5">)</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the Pareto chart</span></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pareto.chart</span>(</span>
<span id="cb5-9">  df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>count,</span>
<span id="cb5-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pareto Chart of Product Sales"</span>,</span>
<span id="cb5-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Product"</span>,</span>
<span id="cb5-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>,</span>
<span id="cb5-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">heat.colors</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>count)),</span>
<span id="cb5-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-15">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-20/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>   
Pareto chart analysis for df$count
    Frequency Cum.Freq. Percentage Cum.Percent.
  A 100.00000 100.00000   32.25806     32.25806
  B  80.00000 180.00000   25.80645     58.06452
  C  70.00000 250.00000   22.58065     80.64516
  D  60.00000 310.00000   19.35484    100.00000</code></pre>
</div>
</div>
<p>This code will create a Pareto chart with a title of “Pareto Chart of Product Sales”, x-axis label of “Product”, y-axis label of “Count”, bar colors in a heatmap palette, and a cumulative percentage line width of 2.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>The <code>qcc</code> package provides a convenient way to create Pareto charts in R. Pareto charts can be used to identify the most common problems or causes of a problem, so that resources can be focused on addressing them.</p>
</section>
<section id="encouragement" class="level1">
<h1>Encouragement</h1>
<p>I encourage readers to try creating their own Pareto charts in R. You can use the examples in this blog post as a starting point. You can also find more examples and documentation for the <code>qcc</code> package on the CRAN website.</p>
<p>Here are some ideas for Pareto charts that you could create:</p>
<ul>
<li>Pareto chart of the most common customer complaints</li>
<li>Pareto chart of the most common causes of manufacturing defects</li>
<li>Pareto chart of the most common reasons for website bounce rates</li>
<li>Pareto chart of the most time-consuming tasks in your workflow</li>
</ul>
<p>Once you have created a Pareto chart, you can use the insights that you gain from it to improve your processes or products.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-20/index.html</guid>
  <pubDate>Fri, 20 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Interaction Plots in R: Unveiling Hidden Relationships</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-19/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In the world of data analysis, uncovering hidden relationships between variables is often the key to making informed decisions. Interaction plots in R can be your secret weapon, revealing how two or more variables interact to affect an outcome. In this blog post, we’ll dive into the world of interaction plots, demystifying the process and showing you how to create these insightful visuals using base R.</p>
</section>
<section id="what-are-interaction-plots" class="level1">
<h1>What Are Interaction Plots?</h1>
<p>Interaction plots display how the relationship between two variables changes depending on the value of a third variable. They are particularly useful when dealing with categorical variables, allowing you to see how the effect of one variable on the outcome depends on the levels of another variable. In simpler terms, interaction plots help us understand how the relationship between two variables is influenced by a third variable, making them a valuable tool for data exploration.</p>
</section>
<section id="getting-started-preparing-your-data" class="level1">
<h1>Getting Started: Preparing Your Data</h1>
<p>Before we create interaction plots, we need some data. For this example, we’ll use a hypothetical dataset about customer satisfaction, where we want to explore how the relationship between “Product Type” and “Price” is influenced by “Customer Segment.”</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a sample dataset</span></span>
<span id="cb1-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ProductType =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Price =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trunc</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)),</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CustomerSegment =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seg. 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seg. 2"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Satisfaction =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trunc</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb1-8">)</span></code></pre></div>
</div>
<p>Now that we have our data, let’s create an interaction plot.</p>
</section>
<section id="creating-the-interaction-plot" class="level1">
<h1>Creating the Interaction Plot</h1>
<p>We’ll use the base R package to create our interaction plot. Here’s how you can do it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the interaction plot</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interaction.plot</span>(</span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x.factor =</span> data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ProductType,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trace.factor =</span> data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CustomerSegment,</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">response =</span> data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Satisfaction,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun =</span> median,</span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Satisfaction"</span>,</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Customer Segment"</span>,</span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgreen"</span>),</span>
<span id="cb2-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trace.label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Segment"</span></span>
<span id="cb2-15">)</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adding labels and a title</span></span>
<span id="cb2-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Interaction Plot: Product Type vs. Satisfaction by Customer Segment"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-19/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In the code above: - <code>x.factor</code> represents the variable on the x-axis. - <code>trace.factor</code> represents the variable that distinguishes different lines on the plot. - <code>response</code> is the variable we’re interested in. - <code>type = "b"</code> specifies that we want to connect points with lines and plot points. - <code>fixed = TRUE</code> ensures that the x-axis is evenly spaced. - <code>legend = TRUE</code> adds a legend to the plot.</p>
</section>
<section id="interpreting-the-plot" class="level1">
<h1>Interpreting the Plot</h1>
<p>In our plot, you’ll see lines for each customer segment (Segment 1 and Segment 2). The lines show how satisfaction levels change with different product types (A, B, C and D). If the lines are parallel, it indicates that there’s no interaction between “Product Type” and “Customer Segment.” However, if the lines cross or diverge, it suggests an interaction, meaning that the effect of the product type on satisfaction differs across customer segments.</p>
</section>
<section id="conclusion-your-turn-to-explore" class="level1">
<h1>Conclusion: Your Turn to Explore!</h1>
<p>Creating interaction plots in R can be a valuable skill for anyone working with data. They provide deep insights into how variables influence each other. Don’t hesitate to apply this technique to your own datasets and discover the hidden relationships within your data.</p>
<p>So, what are you waiting for? Give it a try and start visualizing the interactions in your data. Happy coding!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-19/index.html</guid>
  <pubDate>Thu, 19 Oct 2023 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
