<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steve&#39;s Data Tips and Tricks</title>
<link>https://www.spsanderson.com/steveondata/index.html</link>
<atom:link href="https://www.spsanderson.com/steveondata/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Mon, 29 Jan 2024 05:00:00 GMT</lastBuildDate>
<item>
  <title>How to Extract Month from Date in R (With Examples)</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-29/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Greetings fellow R enthusiasts! Today, we’re diving into a fundamental task: extracting the month from a date in R. Whether you’re new to R or a seasoned pro, understanding how to manipulate dates is essential. We’ll explore two popular methods: using base R and the powerful lubridate package. So, let’s roll up our sleeves and get started!</p>
<section id="using-base-r" class="level2">
<h2 class="anchored" data-anchor-id="using-base-r">Using Base R</h2>
<p>First up, let’s tackle the task with base R. We’ll use the <code>format()</code> function to extract the month from a date.</p>
</section>
<section id="example-1-extracting-month-from-a-vector-of-dates" class="level2">
<h2 class="anchored" data-anchor-id="example-1-extracting-month-from-a-vector-of-dates">Example 1: Extracting Month from a Vector of Dates</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a vector of dates</span></span>
<span id="cb1-2">dates_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-05-20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-09-10"</span>))</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the month</span></span>
<span id="cb1-5">months <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(dates_vector, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%m"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(months)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "01" "05" "09"</code></pre>
</div>
</div>
<p>In this example, we have a vector of dates. We use the <code>format()</code> function to specify that we want to extract the month (<code>%m</code>), and voila! We get the months corresponding to each date.</p>
<section id="example-2-extracting-month-from-a-column-in-a-data-frame" class="level3">
<h3 class="anchored" data-anchor-id="example-2-extracting-month-from-a-column-in-a-data-frame">Example 2: Extracting Month from a Column in a Data Frame</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a sample data frame</span></span>
<span id="cb3-2">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-05-20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-09-10"</span>)))</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the month from the 'date' column</span></span>
<span id="cb3-5">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>month <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%m"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the data frame with the new 'month' column</span></span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        date month
1 2023-01-15    01
2 2023-05-20    05
3 2023-09-10    09</code></pre>
</div>
</div>
<p>Here, we’re working with a data frame. We use the <code>$</code> operator to access the ‘date’ column and apply the <code>format()</code> function to extract the month. The result is a data frame with an additional ‘month’ column containing the extracted months.</p>
</section>
<section id="example-3-extracting-month-from-a-single-date" class="level3">
<h3 class="anchored" data-anchor-id="example-3-extracting-month-from-a-single-date">Example 3: Extracting Month from a Single Date</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Single date</span></span>
<span id="cb5-2">single_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-07-04"</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the month</span></span>
<span id="cb5-5">month <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(single_date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%m"</span>)</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(month)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "07"</code></pre>
</div>
</div>
<p>Even if you have just one date, you can still use the <code>format()</code> function to extract the month. Simple and effective!</p>
</section>
</section>
<section id="using-lubridate-package" class="level2">
<h2 class="anchored" data-anchor-id="using-lubridate-package">Using lubridate Package</h2>
<p>Now, let’s switch gears and explore how to achieve the same task using the lubridate package, known for its user-friendly date-time functions.</p>
<section id="example-4-extracting-month-using-lubridates-month-function" class="level3">
<h3 class="anchored" data-anchor-id="example-4-extracting-month-using-lubridates-month-function">Example 4: Extracting Month Using lubridate’s month() Function</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the lubridate package</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a sample date</span></span>
<span id="cb7-5">date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-11-30"</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the month using lubridate's month() function</span></span>
<span id="cb7-8">month <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(date)</span>
<span id="cb7-9"></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb7-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(month)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 11</code></pre>
</div>
</div>
<p>With lubridate, we simplify the process using the <code>month()</code> function directly on the date object. It’s clean, concise, and effortlessly extracts the month.</p>
</section>
</section>
</section>
<section id="encouragement-and-conclusion" class="level1">
<h1>Encouragement and Conclusion</h1>
<p>Now that you’ve seen how to extract the month from a date using both base R and the lubridate package, I encourage you to experiment further! Try different date formats, explore other functions within these methods, and integrate them into your data analysis workflows.</p>
<p>Understanding date manipulation in R opens up a world of possibilities for analyzing temporal data. Whether you’re analyzing sales trends, tracking patient appointments, or exploring climate data, mastering date manipulation is a valuable skill.</p>
<p>Keep coding, keep exploring, and stay curious! Happy extracting!</p>
<p>Until next time, Your fellow R enthusiast</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-29/index.html</guid>
  <pubDate>Mon, 29 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Unveiling the Earliest Date: A Journey Through R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-26/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Greetings, fellow data enthusiasts! Today, we embark on a quest to uncover the earliest date lurking within a column of dates using the power of R. Whether you’re a seasoned R programmer or a curious newcomer, fear not, for we shall navigate through this journey step by step, unraveling the mysteries of date manipulation along the way.</p>
<p>Imagine you have a dataset filled with dates, and you’re tasked with finding the earliest one among them. How would you tackle this challenge? Fear not, for R comes to our rescue with its arsenal of functions and packages.</p>
</section>
<section id="setting-the-stage" class="level1">
<h1>Setting the Stage</h1>
<p>Let’s start by loading our dataset into R. For the sake of this adventure, let’s assume our dataset is named <code>my_data</code> and contains a column of dates named <code>date_column</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load your dataset into R (replace "path_to_your_file" with the actual path)</span></span>
<span id="cb1-2">my_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path_to_your_file"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Peek into the structure of your data</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(my_data)</span></code></pre></div>
</section>
<section id="unveiling-the-earliest-date" class="level1">
<h1>Unveiling the Earliest Date</h1>
<p>Now comes the thrilling part – finding the earliest date! Brace yourselves as we unleash the power of R:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Finding the earliest date in a column</span></span>
<span id="cb2-2">earliest_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(my_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>date_column, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<p>In this simple yet powerful line of code, we use the <code>min()</code> function to find the minimum (earliest) date in our <code>date_column</code>. The <code>na.rm = TRUE</code> argument ensures that any missing values are ignored during the calculation.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s dive into a few examples to solidify our understanding:</p>
<section id="example-1-finding-the-earliest-date-in-a-simple-dataset" class="level2">
<h2 class="anchored" data-anchor-id="example-1-finding-the-earliest-date-in-a-simple-dataset">Example 1: Finding the earliest date in a simple dataset:</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample dataset</span></span>
<span id="cb3-2">dates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-02-20"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-12-10"</span>))</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Finding the earliest date</span></span>
<span id="cb3-5">earliest_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(dates)</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(earliest_date)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2022-12-10"</code></pre>
</div>
</div>
</section>
<section id="example-2-handling-missing-values-gracefully" class="level2">
<h2 class="anchored" data-anchor-id="example-2-handling-missing-values-gracefully">Example 2: Handling missing values gracefully:</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample dataset with missing values</span></span>
<span id="cb5-2">dates_with_na <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-15"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-12-10"</span>))</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Finding the earliest date, ignoring missing values</span></span>
<span id="cb5-5">earliest_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(dates_with_na, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(earliest_date)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2022-12-10"</code></pre>
</div>
</div>
</section>
</section>
<section id="explaining-the-code" class="level1">
<h1>Explaining the Code</h1>
<p>Now, let’s break down the magic behind our code:</p>
<ul>
<li><code>min()</code>: This function returns the smallest value in a vector or a column of a data frame.</li>
<li><code>na.rm = TRUE</code>: This argument tells R to remove any missing values (NA) before computing the minimum.</li>
</ul>
</section>
<section id="embark-on-your-own-journey" class="level1">
<h1>Embark on Your Own Journey</h1>
<p>I encourage you, dear reader, to embark on your own journey of discovery. Open RStudio, load your dataset, and unleash the power of R to find the earliest date hidden within your data. Experiment with different datasets, handle missing values gracefully, and marvel at the versatility of R.</p>
<p>In conclusion, armed with the knowledge of R, we have conquered the quest to find the earliest date in a column. May your data explorations be fruitful, and may you continue to unravel the mysteries of data with R by your side.</p>
<p>Until next time, happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-26/index.html</guid>
  <pubDate>Fri, 26 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Date Calculations in R: A Guide to Calculating Months with Base R and lubridate</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-25/index.html</link>
  <description><![CDATA[ 




<section id="how-to-subtract-hours-from-time-in-r-with-examples" class="level1">
<h1>How to Subtract Hours from Time in R (With Examples)</h1>
<p>Welcome back, fellow R enthusiasts! Today, we’re diving into a common task in data manipulation: subtracting hours from time objects in R. Whether you’re working with timestamps, time durations, or time series data, knowing how to subtract hours can be incredibly useful. In this post, we’ll explore two popular methods: using base R functions and the <code>lubridate</code> package.</p>
<section id="why-subtract-hours" class="level2">
<h2 class="anchored" data-anchor-id="why-subtract-hours">Why Subtract Hours?</h2>
<p>Before we jump into the code, let’s quickly discuss why you might need to subtract hours from time objects. This operation is handy in various scenarios, such as:</p>
<ul>
<li>Adjusting timestamps for different time zones.</li>
<li>Calculating time differences between events.</li>
<li>Shifting time points in time series analysis.</li>
</ul>
<p>Now, let’s get our hands dirty with some code!</p>
</section>
<section id="using-base-r-functions" class="level2">
<h2 class="anchored" data-anchor-id="using-base-r-functions">Using Base R Functions</h2>
<p>In base R, we can perform basic arithmetic operations on time objects. To subtract hours from a time object, we’ll use the <code>POSIXct</code> class, which represents date and time information. Here’s a simple example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a POSIXct object representing a specific time</span></span>
<span id="cb1-2">my_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-25 10:00:00"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subtract 2 hours from the original time</span></span>
<span id="cb1-5">new_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> my_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the original and modified times</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(my_time)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2024-01-25 10:00:00 EST"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(new_time)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2024-01-25 08:00:00 EST"</code></pre>
</div>
</div>
<p>In this code snippet, we first create a <code>POSIXct</code> object <code>my_time</code> representing 10:00 AM on January 25, 2024. Then, we subtract 2 hours and assign the result to <code>new_time</code>. Finally, we print both the original and modified times to see the difference.</p>
</section>
<section id="using-lubridate-package" class="level2">
<h2 class="anchored" data-anchor-id="using-lubridate-package">Using lubridate Package</h2>
<p>The <code>lubridate</code> package provides convenient functions for handling date-time data in R. It simplifies common tasks like parsing dates, extracting components, and performing arithmetic operations. Let’s see how we can subtract hours using <code>lubridate</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the lubridate package</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a POSIXct object representing a specific time</span></span>
<span id="cb5-5">my_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd_hms</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-25 10:00:00"</span>)</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subtract 2 hours from the original time</span></span>
<span id="cb5-8">new_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> my_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hours</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the original and modified times</span></span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(my_time)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2024-01-25 10:00:00 UTC"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(new_time)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2024-01-25 08:00:00 UTC"</code></pre>
</div>
</div>
<p>In this example, we start by loading the <code>lubridate</code> package. Then, we use the <code>ymd_hms()</code> function to create a <code>POSIXct</code> object <code>my_time</code>. Next, we subtract 2 hours using the <code>hours()</code> function and assign the result to <code>new_time</code>. Finally, we print both times to compare the changes.</p>
</section>
<section id="additional-examples" class="level2">
<h2 class="anchored" data-anchor-id="additional-examples">Additional Examples</h2>
<p>Let’s explore a few more examples to solidify our understanding:</p>
<section id="example-1-subtracting-hours-from-a-vector-of-times" class="level3">
<h3 class="anchored" data-anchor-id="example-1-subtracting-hours-from-a-vector-of-times">Example 1: Subtracting Hours from a Vector of Times</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a vector of POSIXct times</span></span>
<span id="cb9-2">times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-25 08:00:00"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-25 12:00:00"</span>))</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subtract 1 hour from each time</span></span>
<span id="cb9-5">adjusted_times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> times <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hours</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the original and modified times</span></span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(times)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2024-01-25 08:00:00 EST" "2024-01-25 12:00:00 EST"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(adjusted_times)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2024-01-25 07:00:00 EST" "2024-01-25 11:00:00 EST"</code></pre>
</div>
</div>
<p>In this example, we have a vector of two times, and we subtract 1 hour from each using the <code>hours()</code> function.</p>
</section>
<section id="example-2-subtracting-hours-from-a-time-interval" class="level3">
<h3 class="anchored" data-anchor-id="example-2-subtracting-hours-from-a-time-interval">Example 2: Subtracting Hours from a Time Interval</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a time interval from 9:00 AM to 5:00 PM</span></span>
<span id="cb13-2">time_interval <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd_hms</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-25 09:00:00"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd_hms</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-25 17:00:00"</span>))</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subtract 2 hours from the interval</span></span>
<span id="cb13-5">adjusted_interval <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int_shift</span>(time_interval, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hours</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the original and modified intervals</span></span>
<span id="cb13-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(time_interval)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2024-01-25 09:00:00 UTC--2024-01-25 17:00:00 UTC</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(adjusted_interval)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2024-01-25 07:00:00 UTC--2024-01-25 15:00:00 UTC</code></pre>
</div>
</div>
<p>In this example, we create a time interval representing working hours and subtract 2 hours from it.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Subtracting hours from time objects is a fundamental operation in data manipulation and time series analysis. In this post, we explored two methods: using base R functions and the <code>lubridate</code> package. Whether you prefer the simplicity of base R or the convenience of <code>lubridate</code>, mastering this skill will undoubtedly enhance your R programming repertoire.</p>
<p>Now it’s your turn! Try out these examples with your own time data and experiment with different hour values. Don’t hesitate to reach out if you have any questions or want to share your experiences. Happy coding!</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-25/index.html</guid>
  <pubDate>Thu, 25 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Date Calculations in R: A Guide to Calculating Months with Base R and lubridate</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-24/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Greetings fellow R enthusiasts! Today, let’s dive into the fascinating world of date calculations. Whether you’re a data scientist, analyst, or just someone who loves coding in R, understanding how to calculate the number of months between dates is a valuable skill. In this blog post, we’ll explore two approaches using both base R and the lubridate package, ensuring you have the tools to tackle any date-related challenge that comes your way.</p>
</section>
<section id="methods" class="level1">
<h1>Methods</h1>
<section id="base-r-method" class="level2">
<h2 class="anchored" data-anchor-id="base-r-method">Base R Method</h2>
<p>Let’s start with the basics – base R. The <code>difftime</code> function will be our trusty companion in this method. The idea is to find the time difference between two dates and then convert it into months.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample dates</span></span>
<span id="cb1-2">start_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-15"</span>)</span>
<span id="cb1-3">end_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-07-20"</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate time difference in days</span></span>
<span id="cb1-6">time_diff_days <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_date</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert days to months</span></span>
<span id="cb1-9">months_diff_base <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(time_diff_days) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30.44</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># average days in a month</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of months using base R:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(months_diff_base, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Number of months using base R: 18.1 </code></pre>
</div>
</div>
</section>
<section id="explanation" class="level2">
<h2 class="anchored" data-anchor-id="explanation">Explanation</h2>
<ul>
<li>We define our start and end dates using the <code>as.Date</code> function.</li>
<li>Calculate the time difference in days using the subtraction operator.</li>
<li>Convert the time difference to months by dividing by the average days in a month (30.44).</li>
</ul>
</section>
<section id="lubridate-package-method" class="level2">
<h2 class="anchored" data-anchor-id="lubridate-package-method">Lubridate Package Method</h2>
<p>Now, let’s add a touch of elegance to our date calculations with the lubridate package. This package simplifies working with dates and times in R, making our code more readable and intuitive.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the lubridate package</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample dates</span></span>
<span id="cb3-5">start_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-15"</span>)</span>
<span id="cb3-6">end_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-07-20"</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate months difference using lubridate</span></span>
<span id="cb3-9">months_diff_lubridate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span>(start_date, end_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%/%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">months</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of months using lubridate:"</span>, months_diff_lubridate, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Number of months using lubridate: 18 </code></pre>
</div>
</div>
</section>
<section id="explanation-1" class="level2">
<h2 class="anchored" data-anchor-id="explanation-1">Explanation</h2>
<ul>
<li>We load the lubridate package to leverage its convenient date functions.</li>
<li>Use the <code>ymd</code> function to convert our dates into lubridate date objects.</li>
<li>Create an interval between the start and end dates and use <code>%/%</code> to get the floor division by months.</li>
</ul>
</section>
<section id="handling-partial-months" class="level2">
<h2 class="anchored" data-anchor-id="handling-partial-months">Handling Partial Months</h2>
<p>Life isn’t always about whole months, and our date calculations should reflect that reality. Let’s modify our examples to include partial months.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample dates with partial months</span></span>
<span id="cb5-2">start_date_partial <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-15"</span>)</span>
<span id="cb5-3">end_date_partial <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-07-20"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># subtract 15 days for a partial month</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Base R with partial months</span></span>
<span id="cb5-6">time_diff_days_partial <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_date_partial <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_date_partial</span>
<span id="cb5-7">months_diff_base_partial <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(time_diff_days_partial) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30.44</span></span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of months (with partial) using base R:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(months_diff_base_partial, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Number of months (with partial) using base R: 17.61 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lubridate with partial months</span></span>
<span id="cb7-2">months_diff_lubridate_partial <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span>(start_date_partial, end_date_partial) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">months</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of months (with partial) using lubridate:"</span>, months_diff_lubridate_partial, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Number of months (with partial) using lubridate: 17.66667 </code></pre>
</div>
</div>
</section>
<section id="more-lubridate-with-interval" class="level2">
<h2 class="anchored" data-anchor-id="more-lubridate-with-interval">More lubridate with <code>interval()</code></h2>
<p>The lubridate package makes working with dates in R much easier. It provides the <code>interval</code> function to calculate the time difference between two dates:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">date1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-15"</span>)</span>
<span id="cb9-2">date2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-04-30"</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span>(date1, date2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">months</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 15.5</code></pre>
</div>
</div>
<p>This returns the number of months including the partial:</p>
<p><code>[1] 15.870968</code></p>
<p>To get just the full months:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span>(date1, date2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%/%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">months</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 15</code></pre>
</div>
</div>
<p>Which gives:</p>
<p><code>[1] 15</code></p>
<p>The <code>interval</code> function combined with lubridate’s <code>months</code> makes this a very clean way to calculate both full and partial months between dates.</p>
</section>
</section>
<section id="encouragement" class="level1">
<h1>Encouragement</h1>
<p>Congratulations! You’ve now mastered the art of calculating months between dates in R using both base R and the lubridate package. I encourage you to try different date ranges, experiment with partial months, and explore other date-related functions in R. The more you practice, the more confident you’ll become in handling time-related data in your projects. Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-24/index.html</guid>
  <pubDate>Wed, 24 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring Data Lengths with R’s lengths() Function</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-23/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hey folks! Today, we’re diving into the world of R programming, and our star of the show is the <code>lengths()</code> function. This little gem might not be as famous as some other R functions, but it’s incredibly handy when it comes to exploring the lengths of elements in your data structures.</p>
<section id="what-is-lengths-and-why-should-you-care" class="level2">
<h2 class="anchored" data-anchor-id="what-is-lengths-and-why-should-you-care">What is lengths() and Why Should You Care?</h2>
<p>In a nutshell, <code>lengths()</code> is a function in R that returns a vector of the lengths of the elements in a list, vector, or other data structure. It’s like a measuring tape for your data, allowing you to quickly assess the size of different components.</p>
</section>
<section id="lets-get-started-with-examples" class="level2">
<h2 class="anchored" data-anchor-id="lets-get-started-with-examples">Let’s Get Started with Examples</h2>
<section id="example-1-exploring-a-numeric-vector" class="level3">
<h3 class="anchored" data-anchor-id="example-1-exploring-a-numeric-vector">Example 1: Exploring a Numeric Vector</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a numeric vector</span></span>
<span id="cb1-2">numeric_vector <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use lengths() to get the lengths of elements</span></span>
<span id="cb1-5">element_lengths <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lengths</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(numeric_vector))</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(element_lengths)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
</div>
<p>In this example, we create a numeric vector and use <code>lengths()</code> to find out how many elements it contains. The output will be a vector with a single value, representing the length of our numeric vector.</p>
</section>
<section id="example-2-investigating-a-list-with-varying-lengths" class="level3">
<h3 class="anchored" data-anchor-id="example-2-investigating-a-list-with-varying-lengths">Example 2: Investigating a List with Varying Lengths</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list with elements of different lengths</span></span>
<span id="cb3-2">mixed_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use lengths() to get the lengths of elements</span></span>
<span id="cb3-5">element_lengths <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lengths</span>(mixed_list)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(element_lengths)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3 1 6</code></pre>
</div>
</div>
<p>Here, we’ve crafted a list with diverse elements – a numeric vector, a character string, and a matrix. <code>lengths()</code> now gives us a vector containing the lengths of each element in the list.</p>
</section>
<section id="example-3-checking-lengths-of-data-frames" class="level3">
<h3 class="anchored" data-anchor-id="example-3-checking-lengths-of-data-frames">Example 3: Checking Lengths of Data Frames</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a data frame</span></span>
<span id="cb5-2">data_frame_example <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alice"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bob"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Charlie"</span>),</span>
<span id="cb5-3">                                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>),</span>
<span id="cb5-4">                                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Score =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>))</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use lengths() to get the lengths of columns in the data frame</span></span>
<span id="cb5-7">column_lengths <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lengths</span>(data_frame_example)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the result</span></span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(column_lengths)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Name   Age Score 
    3     3     3 </code></pre>
</div>
</div>
<p>In this example, we’re working with a data frame. <code>lengths()</code> allows us to check the number of elements in each column, providing insights into the structure of our data.</p>
</section>
</section>
<section id="why-should-you-experiment" class="level2">
<h2 class="anchored" data-anchor-id="why-should-you-experiment">Why Should You Experiment?</h2>
<p>Understanding the lengths of elements in your data is crucial for efficient data manipulation. Whether you’re dealing with lists, vectors, or data frames, knowing the sizes of different components can guide your analysis and help you avoid unexpected surprises.</p>
</section>
<section id="your-turn-to-play" class="level2">
<h2 class="anchored" data-anchor-id="your-turn-to-play">Your Turn to Play!</h2>
<p>Now that you’ve seen some examples, I encourage you to grab your own datasets, create different structures, and experiment with <code>lengths()</code>. It’s a fantastic tool for quickly grasping the dimensions of your data.</p>
<p>Remember, the best way to learn is by doing. So fire up your R console, start experimenting, and feel the satisfaction of mastering yet another powerful tool in your R toolkit!</p>
<p>Happy coding! 🚀✨</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-23/index.html</guid>
  <pubDate>Tue, 23 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Demystifying bootstrap_stat_plot(): Your Ticket to Insightful Data Exploration</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-22/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Ever feel like your data is hiding secrets? Like it’s whispering truths but you just can’t quite grasp them? Well, fear not, fellow data sleuths! Today, we’ll crack the code of an R function that’s like a magnifying glass for your statistical investigations: <code>bootstrap_stat_plot()</code> from the <strong>TidyDensity</strong> package.</p>
<p><strong>Imagine this:</strong> You have a dataset, say, car mileage (MPG) from the classic <code>mtcars</code> dataset. You want to understand the <strong>average</strong> MPG, but what if that average is just a mirage? What if it’s skewed by a few outliers or doesn’t capture the full story?</p>
<p>Enter <strong>bootstrapping</strong>, a statistical technique that’s like taking your data on a wild ride. It creates <strong>multiple copies</strong> of your data, each with a slight twist, and then calculates the statistic you’re interested in (e.g., average MPG) for each copy. This gives you a <strong>distribution</strong> of possible averages, revealing the variability and potential biases lurking beneath the surface.</p>
<p><strong><code>bootstrap_stat_plot()</code></strong> takes this magic a step further. It not only calculates the distribution but also <strong>visualizes</strong> it, giving you a clear picture of how the statistic fluctuates across different versions of your data. It’s like a <strong>magnifying glass</strong> for your statistical investigations!</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<section id="syntax" class="level2">
<h2 class="anchored" data-anchor-id="syntax">Syntax</h2>
<p>Let’s take a look at the function:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .value,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmean"</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_labels =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb1-8">)</span></code></pre></div>
</section>
<section id="arguments" class="level2">
<h2 class="anchored" data-anchor-id="arguments">Arguments</h2>
<p><strong>1. The Data:</strong></p>
<ul>
<li><code>.data</code>: The data frame containing your data.</li>
</ul>
<p><strong>2. The Value:</strong></p>
<ul>
<li><code>.value</code>: The variable you want to calculate the statistic for.</li>
</ul>
<p><strong>3. The Statistic:</strong></p>
<ul>
<li><p><code>.stat</code>: The statistic you want to calculate. Options include:</p>
<ul>
<li><code>cmean</code>: The mean</li>
<li><code>cmedian</code>: The median</li>
<li><code>cmin</code>: The minimum</li>
<li><code>cmax</code>: The maximum</li>
<li><code>csd</code>: The standard deviation</li>
<li><code>cvar</code>: The variance</li>
<li>and many others!</li>
</ul></li>
</ul>
<p><strong>4. Show Groups:</strong></p>
<ul>
<li><code>.show_groups</code>: Whether to show the groups in the plot. Default is <code>FALSE</code>.</li>
</ul>
<p><strong>5. Show Confidence Interval Labels:</strong></p>
<ul>
<li><code>.show_ci_labels</code>: Whether to show the confidence interval labels in the plot. Default is <code>TRUE</code>.</li>
</ul>
<p><strong>6. Interactive:</strong></p>
<ul>
<li><code>.interactive</code>: Whether to make the plot interactive. Default is <code>FALSE</code>.</li>
</ul>
</section>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
</section>
<section id="example-1---show-replications" class="level1">
<h1>Example 1 - Show replications</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb2-3"></span>
<span id="cb2-4">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg</span>
<span id="cb2-5">ns <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> ns) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb2-9">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmean"</span>, </span>
<span id="cb2-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-12">  ) </span>
<span id="cb2-13"></span>
<span id="cb2-14">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> ns) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb2-16">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmin"</span>, </span>
<span id="cb2-17">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-18">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-19">  )</span>
<span id="cb2-20"></span>
<span id="cb2-21">p3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> ns) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb2-23">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmax"</span>, </span>
<span id="cb2-24">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-25">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-26">  )</span>
<span id="cb2-27"></span>
<span id="cb2-28">p4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> ns) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb2-30">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csd"</span>, </span>
<span id="cb2-31">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-32">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-33">  )</span>
<span id="cb2-34"></span>
<span id="cb2-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wrap_plots</span>(</span>
<span id="cb2-36">  p1, p2, p4, p3, </span>
<span id="cb2-37">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb2-38">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">heights =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-39">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-22/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Let’s dissect the code to see how it works:</p>
<p><strong>1. The Data:</strong></p>
<ul>
<li><code>.data</code>: This is where your bootstrapped data lives, usually after using <code>tidy_bootstrap()</code> or <code>bootstrap_unnest_tbl()</code> to create it.</li>
</ul>
<p><strong>2. The Statistic:</strong></p>
<ul>
<li><code>.value</code>: This is the column you want to analyze, like <code>mpg</code> in our example.</li>
<li><code>.stat</code>: This is the magic spell! It tells the function what statistic to calculate on your chosen value. By default, it’s <code>"cmean"</code> for the <strong>cumulative mean</strong>, but you can choose others like <code>"cmin"</code> for the minimum, <code>"cmax"</code> for the maximum, or even <code>"csd"</code> for the circular standard deviation.</li>
</ul>
<p><strong>3. Visualization Options:</strong></p>
<ul>
<li><code>.show_groups</code>: Turn this to <code>TRUE</code> if you want to see the distribution for <strong>each bootstrap sample</strong> (think of it as a swarm of data points). By default, it shows just the overall distribution.</li>
<li><code>.show_ci_labels</code>: This one displays the <strong>confidence interval</strong> bounds (think of it as the range where the true statistic likely lies). By default, you get the last values of the upper and lower bounds.</li>
</ul>
<p><strong>4. Interactive Mode:</strong></p>
<ul>
<li><code>.interactive</code>: Set this to <code>TRUE</code> if you want to get a <strong>plotly plot object</strong> back, which you can then customize further. Think of it as a living graph you can play with!</li>
</ul>
</section>
<section id="example-2---hide-replications" class="level1">
<h1>Example 2 - Hide replications</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb3-3">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmean"</span>, </span>
<span id="cb3-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-5">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-6">  )</span>
<span id="cb3-7"></span>
<span id="cb3-8">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb3-10">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmin"</span>, </span>
<span id="cb3-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-13">  )</span>
<span id="cb3-14"></span>
<span id="cb3-15">p3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb3-17">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmax"</span>, </span>
<span id="cb3-18">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-19">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-20">  )</span>
<span id="cb3-21"></span>
<span id="cb3-22">p4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bootstrap</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap_stat_plot</span>(y,</span>
<span id="cb3-24">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csd"</span>, </span>
<span id="cb3-25">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_groups =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-26">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.show_ci_label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-27">  )</span>
<span id="cb3-28"></span>
<span id="cb3-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wrap_plots</span>(</span>
<span id="cb3-30">  p1, p2, p4, p3, </span>
<span id="cb3-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb3-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">heights =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-33">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-22/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example we did two things different, we hid the replications, the simulations was left to the default of 2000 and the labels were turned off. This is useful when you want to show a summary of the data.</p>
</section>
<section id="your-turn-to-explore" class="level1">
<h1>Your Turn to Explore</h1>
<p>Don’t just take our word for it! Try <code>bootstrap_stat_plot()</code> on your own data. Experiment with different statistics, explore the interactive mode, and see how it unlocks new insights you might have missed before. Remember, the more you play, the more you discover!</p>
<p><strong>So, unleash your inner data detective and let <code>bootstrap_stat_plot()</code> guide you to a deeper understanding of your data.</strong> Happy exploring!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-22/index.html</guid>
  <pubDate>Mon, 22 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The new function on the block with tidyAML extract_regression_residuals()</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-19/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Yesterday I discussed the use of the function <code>internal_make_wflw_predictions()</code> in the <code>tidyAML</code> R package. Today I will discuss the use of the function <code>extract_wflw_pred()</code> and the brand new function <code>extract_regression_residuals()</code> in the <code>tidyAML</code> R package. We breifly saw yesterday the output of the function <code>internal_make_wflw_predictions()</code> which is a list of tibbles that are typically inside of a list column in the final output of <code>fast_regression()</code> and <code>fast_classification()</code>. The function <code>extract_wflw_pred()</code> takes this list of tibbles and extracts them from that output. The function <code>extract_regression_residuals()</code> also extracts those tibbles and has the added feature of also returning the residuals. Let’s see how these functions work.</p>
</section>
<section id="the-new-function" class="level1">
<h1>The new function</h1>
<p>First, we will go over the syntax of the new function <code>extract_regression_residuals()</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_regression_residuals</span>(.model_tbl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.pivot_long =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<p>The function takes two arguments. The first argument is <code>.model_tbl</code> which is the output of <code>fast_regression()</code> or <code>fast_classification()</code>. The second argument is <code>.pivot_long</code> which is a logical argument that defaults to <code>FALSE</code>. If <code>TRUE</code> then the output will be in a long format. If <code>FALSE</code> then the output will be in a wide format. Let’s see how this works.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load packages</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyAML)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(multilevelmod) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for the gee model</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidymodels_prefer</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># good practice when using tidyAML</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">rec_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span>
<span id="cb2-10">frt_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression</span>(</span>
<span id="cb2-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> mtcars, </span>
<span id="cb2-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.rec_obj =</span> rec_obj, </span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stan"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gee"</span>),</span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span></span>
<span id="cb2-15">  )</span></code></pre></div>
</div>
<p>Let’s break down the R code step by step:</p>
<ol type="1">
<li><strong>Loading Libraries:</strong></li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyAML)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(multilevelmod) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for the gee model</span></span></code></pre></div>
<p>Here, the code is loading several R packages. These packages provide functions and tools for data analysis, modeling, and visualization. <code>tidyAML</code> and <code>tidymodels</code> are particularly relevant for modeling, while <code>tidyverse</code> is a collection of packages for data manipulation and visualization. <code>multilevelmod</code> is included for the Generalized Estimating Equations (gee) model.</p>
<ol start="2" type="1">
<li><p><strong>Setting Preferences:</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidymodels_prefer</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># good practice when using tidyAML</span></span></code></pre></div></li>
</ol>
<p>This line of code is setting preferences for the tidy modeling workflow using <code>tidymodels_prefer()</code>. It ensures that when using <code>tidyAML</code>, the tidy modeling conventions are followed. Tidy modeling involves an organized and consistent approach to modeling in R.</p>
<ol start="3" type="1">
<li><p><strong>Creating a Recipe Object:</strong></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">rec_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span></code></pre></div></li>
</ol>
<p>Here, a recipe object (<code>rec_obj</code>) is created using the <code>recipe</code> function from the <code>tidymodels</code> package. The formula <code>mpg ~ .</code> specifies that we want to predict the <code>mpg</code> variable based on all other variables in the dataset (<code>mtcars</code>).</p>
<ol start="4" type="1">
<li><p><strong>Performing Fast Regression:</strong></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">frt_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression</span>(</span>
<span id="cb6-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> mtcars, </span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.rec_obj =</span> rec_obj, </span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stan"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gee"</span>),</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span></span>
<span id="cb6-6">)</span></code></pre></div></li>
</ol>
<p>This part involves using the <code>fast_regression</code> function. It performs a fast regression analysis using various engines specified by <code>.parsnip_eng</code> and specific functions specified by <code>.parsnip_fns</code>. In this case, it includes linear models (<code>lm</code>), generalized linear models (<code>glm</code>), Stan models (<code>stan</code>), and the Generalized Estimating Equations model (<code>gee</code>). The results are stored in the <code>frt_tbl</code> table.</p>
<p>In summary, the code is setting up a tidy modeling workflow, creating a recipe for predicting <code>mpg</code> based on other variables in the <code>mtcars</code> dataset, and then performing a fast regression using different engines and functions. The choice of engines and functions allows flexibility in exploring different modeling approaches.</p>
<p>Now that we have the output of <code>fast_regression()</code> stored in <code>frt_tbl</code>, we can use the function <code>extract_wflw_pred()</code> to extract the predictions and from the output. Let’s see how this works. First, the syntax:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_wflw_pred</span>(.data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.model_id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span></code></pre></div>
<p>The function takes two arguments. The first argument is <code>.data</code> which is the output of <code>fast_regression()</code> or <code>fast_classification()</code>. The second argument is <code>.model_id</code> which is a numeric vector that defaults to <code>NULL</code>. If <code>NULL</code> then the function will extract none of the predictions from the output. If a numeric vector is provided then the function will extract the predictions for the models specified by the numeric vector. Let’s see how this works.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_wflw_pred</span>(frt_tbl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 64 × 4
   .model_type     .data_category .data_type .value
   &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;
 1 lm - linear_reg actual         actual       15.2
 2 lm - linear_reg actual         actual       10.4
 3 lm - linear_reg actual         actual       33.9
 4 lm - linear_reg actual         actual       32.4
 5 lm - linear_reg actual         actual       16.4
 6 lm - linear_reg actual         actual       21.5
 7 lm - linear_reg actual         actual       15.8
 8 lm - linear_reg actual         actual       15  
 9 lm - linear_reg actual         actual       14.7
10 lm - linear_reg actual         actual       10.4
# ℹ 54 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_wflw_pred</span>(frt_tbl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 128 × 4
   .model_type     .data_category .data_type .value
   &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;
 1 lm - linear_reg actual         actual       15.2
 2 lm - linear_reg actual         actual       10.4
 3 lm - linear_reg actual         actual       33.9
 4 lm - linear_reg actual         actual       32.4
 5 lm - linear_reg actual         actual       16.4
 6 lm - linear_reg actual         actual       21.5
 7 lm - linear_reg actual         actual       15.8
 8 lm - linear_reg actual         actual       15  
 9 lm - linear_reg actual         actual       14.7
10 lm - linear_reg actual         actual       10.4
# ℹ 118 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_wflw_pred</span>(frt_tbl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(frt_tbl))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 256 × 4
   .model_type     .data_category .data_type .value
   &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;
 1 lm - linear_reg actual         actual       15.2
 2 lm - linear_reg actual         actual       10.4
 3 lm - linear_reg actual         actual       33.9
 4 lm - linear_reg actual         actual       32.4
 5 lm - linear_reg actual         actual       16.4
 6 lm - linear_reg actual         actual       21.5
 7 lm - linear_reg actual         actual       15.8
 8 lm - linear_reg actual         actual       15  
 9 lm - linear_reg actual         actual       14.7
10 lm - linear_reg actual         actual       10.4
# ℹ 246 more rows</code></pre>
</div>
</div>
<p>The first line of code extracts the predictions for the first model in the output. The second line of code extracts the predictions for the first two models in the output. The third line of code extracts the predictions for all models in the output.</p>
<p>Now, let’s visualize the predictions for the models in the output and the actual values. We will use the <code>ggplot2</code> package for visualization. First, we will extract the predictions for all models in the output and store them in a table called <code>pred_tbl</code>. Then, we will use <code>ggplot2</code> to visualize the predictions and actual values.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">pred_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_wflw_pred</span>(frt_tbl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(frt_tbl))</span>
<span id="cb14-2"></span>
<span id="cb14-3">pred_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_split</span>(.model_type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(\(x) x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(.data_category) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> .data_type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> .value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb14-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> actual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> .data_category)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-12">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> training), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb14-13">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-14">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> testing), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>,</span>
<span id="cb14-15">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb14-18">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb14-19">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed/Predicted Value"</span>,</span>
<span id="cb14-20">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed vs. Predicted Values by Model Type"</span>,</span>
<span id="cb14-21">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.model_type[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb14-22">        )</span>
<span id="cb14-23">      )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
[[2]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-3-2.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
[[3]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-3-3.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
[[4]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-3-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Or we can facet them by model type:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">pred_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(.model_type, .data_category) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.data_type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actual"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.data_type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"training"</span>), </span>
<span id="cb19-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> . <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.data_type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"testing"</span>), </span>
<span id="cb19-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .model_type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb19-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb19-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed/Predicted Value"</span>,</span>
<span id="cb19-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed vs. Predicted Values by Model Type"</span></span>
<span id="cb19-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Ok, so what about this new function I talked about above? Well let’s go over it here. We have already discussed it’s syntax so no need to go over it again. Let’s just jump right into an example. This function will return the residuals for all models. We will slice off just the first model for demonstration purposes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_regression_residuals</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.model_tbl =</span> frt_tbl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.pivot_long =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 32 × 4
   .model_type     .actual .predicted .resid
   &lt;chr&gt;             &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;
 1 lm - linear_reg    15.2       17.3 -2.09 
 2 lm - linear_reg    10.4       11.9 -1.46 
 3 lm - linear_reg    33.9       30.8  3.06 
 4 lm - linear_reg    32.4       28.0  4.35 
 5 lm - linear_reg    16.4       15.0  1.40 
 6 lm - linear_reg    21.5       22.3 -0.779
 7 lm - linear_reg    15.8       17.2 -1.40 
 8 lm - linear_reg    15         15.1 -0.100
 9 lm - linear_reg    14.7       10.9  3.85 
10 lm - linear_reg    10.4       10.8 -0.445
# ℹ 22 more rows</code></pre>
</div>
</div>
<p>Now let’s set <code>.pivot_long = TRUE</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_regression_residuals</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.model_tbl =</span> frt_tbl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.pivot_long =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 96 × 3
   .model_type     name       value
   &lt;chr&gt;           &lt;chr&gt;      &lt;dbl&gt;
 1 lm - linear_reg .actual    15.2 
 2 lm - linear_reg .predicted 17.3 
 3 lm - linear_reg .resid     -2.09
 4 lm - linear_reg .actual    10.4 
 5 lm - linear_reg .predicted 11.9 
 6 lm - linear_reg .resid     -1.46
 7 lm - linear_reg .actual    33.9 
 8 lm - linear_reg .predicted 30.8 
 9 lm - linear_reg .resid      3.06
10 lm - linear_reg .actual    32.4 
# ℹ 86 more rows</code></pre>
</div>
</div>
<p>Now let’s visualize the data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">resid_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_regression_residuals</span>(frt_tbl, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb24-2"></span>
<span id="cb24-3">resid_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(\(x) x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(name) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot_group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".resid"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Actual and Predictions"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb24-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-12">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> plot_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-13">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb24-14">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb24-15">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>,</span>
<span id="cb24-16">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Actual, Predicted, and Residual Values by Model Type"</span>,</span>
<span id="cb24-17">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.model_type[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb24-18">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Type"</span></span>
<span id="cb24-19">        )</span>
<span id="cb24-20">      )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
[[2]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-7-2.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
[[3]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-7-3.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
[[4]]</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-19/index_files/figure-html/unnamed-chunk-7-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>And that’s it!</p>
<p>Thank you for reading and I would love to hear your feedback. Please feel free to reach out to me.</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-19/index.html</guid>
  <pubDate>Fri, 19 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring the Enhanced Features of tidyAML’s internal_make_wflw_predictions()</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-18/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hey R enthusiasts! Steve here, and today I’m excited to share some fantastic updates about a key function in the tidyAML package – <code>internal_make_wflw_predictions()</code>. The latest version addresses issue #190, ensuring that all crucial data is now included in the predictions. Let’s dive into the details!</p>
</section>
<section id="whats-new" class="level1">
<h1>What’s New?</h1>
<p>In response to user feedback, we’ve enhanced the <code>internal_make_wflw_predictions()</code> function to provide a comprehensive set of predictions. Now, when you make a call to this function, it includes:</p>
<ol type="1">
<li><p><strong>The Actual Data:</strong> This is the real-world data that your model aims to predict. Having access to this information helps you assess how well your model is performing on unseen instances.</p></li>
<li><p><strong>Training Predictions:</strong> Predictions made on the training dataset. This is essential for understanding how well your model generalizes to the data it was trained on.</p></li>
<li><p><strong>Testing Predictions:</strong> Predictions made on the testing dataset. This is crucial for evaluating the model’s performance on data it hasn’t seen during the training phase.</p></li>
</ol>
</section>
<section id="how-to-use-it" class="level1">
<h1>How to Use It</h1>
<p>To take advantage of these new features, here’s how you can use the updated <code>internal_make_wflw_predictions()</code> function:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">internal_make_wflw_predictions</span>(.model_tbl, .splits_obj)</span></code></pre></div>
<section id="arguments" class="level2">
<h2 class="anchored" data-anchor-id="arguments">Arguments:</h2>
<ol type="1">
<li><p><strong>.model_tbl:</strong> The model table generated from a function like <code>fast_regression_parsnip_spec_tbl()</code>. Ensure that it has a class of “tidyaml_mod_spec_tbl.” This is typically used after running the <code>internal_make_fitted_wflw()</code> function and saving the resulting tibble.</p></li>
<li><p><strong>.splits_obj:</strong> The splits object obtained from the <code>auto_ml</code> function. It is internal to the <code>auto_ml</code> function.</p></li>
</ol>
</section>
</section>
<section id="example-usage" class="level1">
<h1>Example Usage</h1>
<p>Let’s walk through an example using some popular R packages:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyAML)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidymodels_prefer</span>()</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a model specification table</span></span>
<span id="cb2-7">mod_spec_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression_parsnip_spec_tbl</span>(</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>),</span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span></span>
<span id="cb2-10">)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a recipe</span></span>
<span id="cb2-13">rec_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create splits</span></span>
<span id="cb2-16">splits_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_splits</span>(mtcars, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"initial_split"</span>)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate the model table</span></span>
<span id="cb2-19">mod_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mod_spec_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wflw =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_internal_make_wflw</span>(mod_spec_tbl, rec_obj))</span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate the fitted model table</span></span>
<span id="cb2-23">mod_fitted_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mod_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fitted_wflw =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">internal_make_fitted_wflw</span>(mod_tbl, splits_obj))</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions with the enhanced function</span></span>
<span id="cb2-27">preds_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">internal_make_wflw_predictions</span>(mod_fitted_tbl, splits_obj)</span></code></pre></div>
</div>
<p>This example demonstrates how to integrate the updated function into your workflow seamlessly. Typically though one would not use this function directly, but rather use the <code>fast_regression()</code> or <code>fast_classification()</code> function, which calls this function internally. Let’s now take a look at the output of everything.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">rec_obj</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Recipe ──────────────────────────────────────────────────────────────────────</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>── Inputs </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Number of variables by role</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>outcome:    1
predictor: 10</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">splits_obj</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$splits
&lt;Training/Testing/Total&gt;
&lt;24/8/32&gt;

$split_type
[1] "initial_split"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">mod_spec_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 5
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
2         2 glm             regression    linear_reg   &lt;spec[+]&gt; </code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">mod_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 6
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec wflw      
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;     &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt;  &lt;workflow&gt;
2         2 glm             regression    linear_reg   &lt;spec[+]&gt;  &lt;workflow&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">mod_fitted_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 7
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec wflw      
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;     &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt;  &lt;workflow&gt;
2         2 glm             regression    linear_reg   &lt;spec[+]&gt;  &lt;workflow&gt;
# ℹ 1 more variable: fitted_wflw &lt;list&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">preds_list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
# A tibble: 64 × 3
   .data_category .data_type .value
   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;
 1 actual         actual       15.2
 2 actual         actual       19.7
 3 actual         actual       17.8
 4 actual         actual       15  
 5 actual         actual       10.4
 6 actual         actual       15.8
 7 actual         actual       17.3
 8 actual         actual       30.4
 9 actual         actual       15.2
10 actual         actual       19.2
# ℹ 54 more rows

[[2]]
# A tibble: 64 × 3
   .data_category .data_type .value
   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;
 1 actual         actual       15.2
 2 actual         actual       19.7
 3 actual         actual       17.8
 4 actual         actual       15  
 5 actual         actual       10.4
 6 actual         actual       15.8
 7 actual         actual       17.3
 8 actual         actual       30.4
 9 actual         actual       15.2
10 actual         actual       19.2
# ℹ 54 more rows</code></pre>
</div>
</div>
<p>You will notice the names of the preds_list output:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(preds_list[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] ".data_category" ".data_type"     ".value"        </code></pre>
</div>
</div>
<p>So we have <code>.data_category</code>, <code>.data_type</code>, and <code>.value</code>. Let’s take a look at the unique values of each column for <code>.data_category</code> and <code>.data_type</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(preds_list[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.data_category)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "actual"    "predicted"</code></pre>
</div>
</div>
<p>So we have our <code>actual</code> data the the <code>predicted</code> data. The predicted though has both the <code>training</code> and <code>testing</code> data in it. Let’s take a look at the unique values of <code>.data_type</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(preds_list[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.data_type)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "actual"   "training" "testing" </code></pre>
</div>
</div>
<p>This will allow you to visualize the data how you please, something we will go over tomorrow!</p>
<section id="why-it-matters" class="level2">
<h2 class="anchored" data-anchor-id="why-it-matters">Why It Matters</h2>
<p>By including actual data along with training and testing predictions, the <code>internal_make_wflw_predictions()</code> function empowers you to perform a more thorough evaluation of your models. This is a significant step towards ensuring the reliability and generalization capability of your machine learning models.</p>
<p>So, R enthusiasts, update your tidyAML package, explore the enhanced features, and let us know how these improvements elevate your modeling experience. Happy coding!</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-18/index.html</guid>
  <pubDate>Thu, 18 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Using .drop_na in Fast Classification and Regression</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-17/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In the newest release of tidyAML there has been an addition of a new parameter to the functions <code>fast_classification()</code> and <code>fast_regression()</code>. The parameter is <code>.drop_na</code> and it is a logical value that defaults to <code>TRUE</code>. This parameter is used to determine if the function should drop rows with missing values from the output if a model cannot be built for some reason. Let’s take a look at the function and it’s arguments.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .rec_obj,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all"</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all"</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.split_type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"initial_split"</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.split_args =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.drop_na =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb1-9">)</span></code></pre></div>
<section id="arguments" class="level2">
<h2 class="anchored" data-anchor-id="arguments">Arguments</h2>
<p><code>.data</code> - The data being passed to the function for the regression problem <code>.rec_obj</code> - The recipe object being passed. <code>.parsnip_fns</code> - The default is ‘all’ which will create all possible regression model specifications supported. <code>.parsnip_eng</code> - The default is ‘all’ which will create all possible regression model specifications supported. <code>.split_type</code> - The default is ‘initial_split’, you can pass any type of split supported by rsample <code>.split_args</code> - The default is NULL, when NULL then the default parameters of the split type will be executed for the rsample split type. <code>.drop_na</code> - The default is TRUE, which will drop all NA’s from the data.</p>
<p>Now let’s see this in action.</p>
</section>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>We are going to use the <code>mtcars</code> dataset for this example. We will create a regression problem where we are trying to predict <code>mpg</code> using all other variables in the dataset. We will not load in all the libraries that are supported causing the function to return NULL for some models and we will set the parameter <code>.drop_na</code> to <code>FALSE</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyAML)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-4"></span>
<span id="cb2-5">tidymodels<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidymodels_prefer</span>()</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create regression problem</span></span>
<span id="cb2-8">rec_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> mtcars)</span>
<span id="cb2-9">frt_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression</span>(</span>
<span id="cb2-10">  mtcars,</span>
<span id="cb2-11">  rec_obj,</span>
<span id="cb2-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gee"</span>),</span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.drop_na =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb2-15">  )</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(frt_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 3
Columns: 8
$ .model_id       &lt;int&gt; 1, 2, 3
$ .parsnip_engine &lt;chr&gt; "lm", "gee", "glm"
$ .parsnip_mode   &lt;chr&gt; "regression", "regression", "regression"
$ .parsnip_fns    &lt;chr&gt; "linear_reg", "linear_reg", "linear_reg"
$ model_spec      &lt;list&gt; [~NULL, ~NULL, NULL, regression, TRUE, NULL, lm, TRUE]…
$ wflw            &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ fitted_wflw     &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ pred_wflw       &lt;list&gt; [&lt;tbl_df[64 x 3]&gt;], &lt;NULL&gt;, [&lt;tbl_df[64 x 3]&gt;]</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_wflw</span>(frt_tbl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(frt_tbl))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: lm 


[[2]]
NULL

[[3]]
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: glm </code></pre>
</div>
</div>
<p>Here we can see that the function returned NULL for the <code>gee</code> model because we did not load in the <code>multilevelmod</code> library. We can also see that the function did not drop that model from the output because <code>.drop_na</code> was set to <code>FALSE</code>. Now let’s set it back to <code>TRUE</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">frt_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fast_regression</span>(</span>
<span id="cb6-2">  mtcars,</span>
<span id="cb6-3">  rec_obj,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gee"</span>),</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.parsnip_fns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear_reg"</span>,</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.drop_na =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb6-7">  )</span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(frt_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 2
Columns: 8
$ .model_id       &lt;int&gt; 1, 3
$ .parsnip_engine &lt;chr&gt; "lm", "glm"
$ .parsnip_mode   &lt;chr&gt; "regression", "regression"
$ .parsnip_fns    &lt;chr&gt; "linear_reg", "linear_reg"
$ model_spec      &lt;list&gt; [~NULL, ~NULL, NULL, regression, TRUE, NULL, lm, TRUE]…
$ wflw            &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ fitted_wflw     &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ pred_wflw       &lt;list&gt; [&lt;tbl_df[64 x 3]&gt;], [&lt;tbl_df[64 x 3]&gt;]</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_wflw</span>(frt_tbl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(frt_tbl))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: lm 


[[2]]
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: glm </code></pre>
</div>
</div>
<p>Here we can see that the <code>gee</code> model was dropped from the output because the function could not build the model due to the <code>multilevelmod</code> library not being loaded. This is a great way to drop models that cannot be built due to missing libraries or other reasons.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>The <code>.drop_na</code> parameter is a great way to drop models that cannot be built due to missing libraries or other reasons. This is a great addition to the <code>fast_classification()</code> and <code>fast_regression()</code> functions.</p>
<p>Happy coding!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-17/index.html</guid>
  <pubDate>Wed, 17 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring the Power of tidyAML 0.0.4: Unleashing New Features and Enhancements</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-16/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Greetings, fellow data enthusiasts! Today, we’re diving into the exciting world of tidyAML 0.0.4, where innovation meets efficiency in the realm of R programming. As we unpack the latest release, we’ll explore the new features, enhancements, and the overall impact of this powerful tool on your data science endeavors.</p>
</section>
<section id="whats-new-in-tidyaml-0.0.4" class="level1">
<h1>What’s New in tidyAML 0.0.4?</h1>
<section id="introducing-extract_regression_residuals" class="level2">
<h2 class="anchored" data-anchor-id="introducing-extract_regression_residuals">Introducing extract_regression_residuals()</h2>
<p>One of the standout features in this release is the addition of <code>extract_regression_residuals()</code>. This function empowers users to delve deeper into regression models, providing a valuable tool for analyzing and understanding residuals. Whether you’re fine-tuning your models or gaining insights into data patterns, this enhancement adds a crucial layer to your analytical arsenal.</p>
</section>
<section id="enhanced-classificationregression-build-with-.drop_na" class="level2">
<h2 class="anchored" data-anchor-id="enhanced-classificationregression-build-with-.drop_na">Enhanced Classification/Regression build with .drop_na</h2>
<p>Responding to user feedback and aiming for seamless user experience, tidyAML 0.0.4 brings forth an important addition to <code>fast_classification()</code> and <code>fast_regression()</code>. The introduction of the <code>.drop_na</code> parameter allows users to handle missing data more efficiently, streamlining the classification and regression processes.</p>
</section>
<section id="core-package-expansion" class="level2">
<h2 class="anchored" data-anchor-id="core-package-expansion">Core Package Expansion</h2>
<p>Acknowledging the diverse needs of data scientists, tidyAML now incorporates additional core packages. The inclusion of <code>discrim</code>, <code>mda</code>, <code>sda</code>, <code>sparsediscrim</code>, <code>liquidSVM</code>, <code>kernlab</code>, and <code>klaR</code> extends the scope of possibilities. These additions enhance the versatility of tidyAML, making it an even more comprehensive solution for your modeling requirements.</p>
</section>
<section id="refined-internal-predictions" class="level2">
<h2 class="anchored" data-anchor-id="refined-internal-predictions">Refined Internal Predictions</h2>
<p>The update addresses #190 by refining the <code>internal_make_wflw_predictions()</code> function. Now, it includes all essential data elements: the actual data, training predictions, and testing predictions. This refinement ensures a more holistic view of your model’s performance, facilitating a comprehensive evaluation of its predictive capabilities.</p>
</section>
</section>
<section id="how-does-tidyaml-0.0.4-elevate-your-data-science-workflow" class="level1">
<h1>How Does tidyAML 0.0.4 Elevate Your Data Science Workflow?</h1>
<section id="streamlined-regression-analysis" class="level2">
<h2 class="anchored" data-anchor-id="streamlined-regression-analysis">Streamlined Regression Analysis</h2>
<p>With the introduction of <code>extract_regression_residuals()</code>, tidyAML empowers users to conduct in-depth regression analyses with ease. Uncover hidden patterns, identify outliers, and fine-tune your models for optimal performance.</p>
</section>
<section id="improved-data-handling-in-classification-and-regression" class="level2">
<h2 class="anchored" data-anchor-id="improved-data-handling-in-classification-and-regression">Improved Data Handling in Classification and Regression</h2>
<p>The new <code>.drop_na</code> parameter in <code>fast_classification()</code> and <code>fast_regression()</code> simplifies the management of missing data. Enhance the robustness of your classification models by seamlessly handling missing values, resulting in more reliable and accurate predictions.</p>
</section>
<section id="comprehensive-core-packages" class="level2">
<h2 class="anchored" data-anchor-id="comprehensive-core-packages">Comprehensive Core Packages</h2>
<p>The expansion of core packages broadens the toolkit at your disposal. Whether you’re exploring discriminant analysis, support vector machines, or kernel methods, tidyAML now supports an extended range of algorithms, catering to diverse modeling needs.</p>
</section>
<section id="holistic-model-evaluation" class="level2">
<h2 class="anchored" data-anchor-id="holistic-model-evaluation">Holistic Model Evaluation</h2>
<p>The refined <code>internal_make_wflw_predictions()</code> ensures that you have all the necessary components for a comprehensive model evaluation. Analyze the actual data alongside training and testing predictions, gaining a 360-degree view of your model’s performance.</p>
</section>
</section>
<section id="how-to-upgrade-to-tidyaml-0.0.4" class="level1">
<h1>How to Upgrade to tidyAML 0.0.4?</h1>
<p>Updating to the latest version is a breeze. Simply use the following R command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyAML"</span>)</span></code></pre></div>
<p>or if you prefer the development version:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spsanderson/tidyAML"</span>)</span></code></pre></div>
<p>Don’t forget to explore the updated documentation for detailed insights into the new features and enhancements.</p>
</section>
<section id="in-conclusion" class="level1">
<h1>In Conclusion</h1>
<p>tidyAML 0.0.4 marks a significant milestone in the evolution of this powerful R package. With enhanced features, refined functions, and an expanded core package repertoire, tidyAML continues to be a go-to tool for data scientists navigating the complexities of machine learning.</p>
<p>Ready to experience the power of tidyAML?</p>
<ul>
<li>Install the package: <code>install.packages("tidyAML")</code></li>
<li>Visit the official website for more details and examples: <a href="https://www.spsanderson.com/tidyAML/">https://www.spsanderson.com/tidyAML/</a></li>
</ul>
<p>Join the tidy revolution and unleash the full potential of your machine learning projects with tidyAML!</p>
<p>Stay tuned for more exciting updates and features coming soon!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-16/index.html</guid>
  <pubDate>Tue, 16 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>TidyDensity Powers Up with Data.table: Speedier Distributions for Your Data Exploration</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-12/index.html</link>
  <description><![CDATA[ 




<section id="calling-all-r-enthusiasts-who-love-tidy-data-and-crave-efficiency" class="level1">
<h1>Calling all R enthusiasts who love tidy data and crave efficiency!</h1>
<p>I’m thrilled to announce a major upgrade to the TidyDensity package that’s sure to accelerate your data analysis workflows. We’ve integrated the lightning-fast <code>data.table</code> package for generating tidy distribution data, resulting in a <strong>jaw-dropping 30% speed boost</strong>.</p>
<p>Here is one of the tests ran during development where v1 was the current and v2 was the version using <code>data.table</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-3"> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidy_bernoulli_v2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-4">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bernoulli_v2</span>(n, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-5"> },</span>
<span id="cb1-6"> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidy_bernoulli_v1"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-7">   TidyDensity<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_bernoulli</span>(n, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-8"> },</span>
<span id="cb1-9"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb1-10"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)</span>
<span id="cb1-11">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-12"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(relative)</span>
<span id="cb1-13">               test replications elapsed relative user.self sys.self</span>
<span id="cb1-14"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> tidy_bernoulli_v2          <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.50</span>    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.000</span>      <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.22</span>     <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.26</span></span>
<span id="cb1-15"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> tidy_bernoulli_v1          <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.67</span>    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.868</span>      <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.34</span>     <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.31</span></span></code></pre></div>
</section>
<section id="heres-what-this-means-for-you" class="level1">
<h1>Here’s what this means for you</h1>
<ul>
<li><strong>Faster Generation of Distribution Data:</strong> Whether you’re working with normal, binomial, Poisson, or other distributions, TidyDensity now produces results more swiftly than ever. This means less waiting and more time for exploring insights.</li>
<li><strong>Flexible Output Formats:</strong> Choose the format that best suits your needs:
<ul>
<li><strong>Tibbles for Seamless Integration with Tidyverse:</strong> Set <code>.return_tibble = TRUE</code> to receive the data as a tibble, ready for seamless interaction with your favorite tidyverse tools.</li>
<li><strong>data.table for Enhanced Performance:</strong> Set <code>.return_tibble = FALSE</code> to harness the raw power of data.table objects for memory-efficient and lightning-fast operations.</li>
</ul></li>
<li><strong>Enjoy the Speed Boost, No Matter Your Choice:</strong> The speed enhancement shines through regardless of your preferred output format, as the data generation itself leverages <code>data.table</code> under the hood.</li>
</ul>
</section>
<section id="how-to-experience-this-boost" class="level1">
<h1>How to experience this boost</h1>
<ol type="1">
<li><p><strong>Update TidyDensity:</strong> Ensure you have the latest version installed: <code>install.packages("TidyDensity")</code></p></li>
<li><p><strong>Choose Your Output Format:</strong> Indicate your preference with the <code>.return_tibble</code> parameter:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For a tibble:</span></span>
<span id="cb2-2">tidy_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For a data.table:</span></span>
<span id="cb2-5">tidy_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<p>No matter which output you choose you will still enjoy the speedup because <code>data.table</code> is used to create the data and the conversion to a tibble is done afterwards if that is the output you want.</p></li>
</ol>
</section>
<section id="lets-see-the-output" class="level1">
<h1>Let’s see the output</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate data</span></span>
<span id="cb3-4">normal_tibble <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(normal_tibble)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 7
  sim_number     x       y    dx       dy      p       q
  &lt;fct&gt;      &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;
1 1              1  1.05   -2.97 0.000398 0.854   1.05  
2 1              2  0.0168 -2.84 0.00104  0.507   0.0168
3 1              3  1.77   -2.72 0.00244  0.961   1.77  
4 1              4 -1.81   -2.59 0.00518  0.0353 -1.81  
5 1              5  0.447  -2.46 0.00997  0.673   0.447 
6 1              6  1.05   -2.33 0.0174   0.854   1.05  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(normal_tibble)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "tbl_df"     "tbl"        "data.frame"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">normal_dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_normal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(normal_dt)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   sim_number x           y        dx           dy         p           q
1:          1 1  2.24103518 -3.424949 0.0002787401 0.9874881  2.24103518
2:          1 2 -0.12769603 -3.286892 0.0008586864 0.4491948 -0.12769603
3:          1 3 -0.39666069 -3.148835 0.0022824304 0.3458088 -0.39666069
4:          1 4  0.89626001 -3.010778 0.0052656793 0.8149430  0.89626001
5:          1 5  0.04267757 -2.872721 0.0105661984 0.5170207  0.04267757
6:          1 6  0.53424808 -2.734664 0.0185083421 0.7034150  0.53424808</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(normal_dt)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "data.table" "data.frame"</code></pre>
</div>
</div>
</section>
<section id="ready-to-unleash-the-power-of-tidydensity-and-data.table" class="level1">
<h1>Ready to unleash the power of TidyDensity and data.table?</h1>
<p>Dive into your next data exploration project and experience the efficiency firsthand! Share your discoveries and feedback with the community—we’re eager to hear how this upgrade empowers your analysis.</p>
<p><strong>Happy tidy data exploration!</strong></p>


</section>

 ]]></description>
  <category>code</category>
  <category>benchmark</category>
  <category>datatable</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-12/index.html</guid>
  <pubDate>Fri, 12 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Benchmarking the Speed of Cumulative Functions in TidyDensity</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-01-11/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Statistical analysis often involves calculating various measures on large datasets. Speed and efficiency are crucial, especially when dealing with real-time analytics or massive data volumes. The <a href="https://cran.r-project.org/web/packages/TidyDensity/index.html">TidyDensity</a> package in R provides a set of fast cumulative functions for common statistical measures like mean, standard deviation, skewness, and kurtosis. But just how fast are these cumulative functions compared to doing the computations directly? In this post, I benchmark the cumulative functions against the base R implementations using the <a href="https://cran.r-project.org/web/packages/rbenchmark/index.html">rbenchmark</a> package.</p>
</section>
<section id="setting-the-bench" class="level1">
<h1>Setting the bench</h1>
<p>To assess the performance of TidyDensity’s cumulative functions, we’ll employ the rbenchmark package for benchmarking and the ggplot2 package for visualization. I’ll benchmark the following cumulative functions on random samples of increasing size:</p>
<ul>
<li><code>cgmean()</code> - Cumulative geometric mean</li>
<li><code>chmean()</code> - Cumulative harmonic mean</li>
<li><code>ckurtosis()</code> - Cumulative kurtosis</li>
<li><code>cskewness()</code> - Cumulative skewness</li>
<li><code>cmean()</code> - Cumulative mean</li>
<li><code>csd()</code> - Cumulative standard deviation</li>
<li><code>cvar()</code> - Cumulative variance</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rbenchmark)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8">x1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e2</span></span>
<span id="cb1-9">x2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e3</span> </span>
<span id="cb1-10">x3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span></span>
<span id="cb1-11">x4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e5</span></span>
<span id="cb1-12">x5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">cg_bench <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-15">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cgmean</span>(x1),</span>
<span id="cb1-16">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cgmean</span>(x2),</span>
<span id="cb1-17">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cgmean</span>(x3),</span>
<span id="cb1-18">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cgmean</span>(x4),</span>
<span id="cb1-19">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cgmean</span>(x5),</span>
<span id="cb1-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> 100L,</span>
<span id="cb1-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)</span>
<span id="cb1-22">)</span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run benchmarks for other functions</span></span>
<span id="cb1-25">ch_bench <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-26">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmean</span>(x1),</span>
<span id="cb1-27">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmean</span>(x2),</span>
<span id="cb1-28">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmean</span>(x3),</span>
<span id="cb1-29">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmean</span>(x4),</span>
<span id="cb1-30">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmean</span>(x5),</span>
<span id="cb1-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> 100L,</span>
<span id="cb1-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)</span>
<span id="cb1-33">)</span>
<span id="cb1-34"></span>
<span id="cb1-35">ck_bench <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-36">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ckurtosis</span>(x1),</span>
<span id="cb1-37">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ckurtosis</span>(x2),</span>
<span id="cb1-38">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ckurtosis</span>(x3),</span>
<span id="cb1-39">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ckurtosis</span>(x4),</span>
<span id="cb1-40">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ckurtosis</span>(x5),</span>
<span id="cb1-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> 100L,</span>
<span id="cb1-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)  </span>
<span id="cb1-43">)</span>
<span id="cb1-44"></span>
<span id="cb1-45">cs_bench <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-46">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cskewness</span>(x1),</span>
<span id="cb1-47">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cskewness</span>(x2), </span>
<span id="cb1-48">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cskewness</span>(x3),</span>
<span id="cb1-49">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cskewness</span>(x4),</span>
<span id="cb1-50">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cskewness</span>(x5),</span>
<span id="cb1-51">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> 100L,</span>
<span id="cb1-52">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)</span>
<span id="cb1-53">)</span>
<span id="cb1-54"></span>
<span id="cb1-55">cm_bench <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-56">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmean</span>(x1),</span>
<span id="cb1-57">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmean</span>(x2),</span>
<span id="cb1-58">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmean</span>(x3),</span>
<span id="cb1-59">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmean</span>(x4),</span>
<span id="cb1-60">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmean</span>(x5),</span>
<span id="cb1-61">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> 100L,</span>
<span id="cb1-62">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)</span>
<span id="cb1-63">)</span>
<span id="cb1-64"></span>
<span id="cb1-65">csd_bench <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-66">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csd</span>(x1),</span>
<span id="cb1-67">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csd</span>(x2),</span>
<span id="cb1-68">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csd</span>(x3),</span>
<span id="cb1-69">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csd</span>(x4),</span>
<span id="cb1-70">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">csd</span>(x5),</span>
<span id="cb1-71">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> 100L,</span>
<span id="cb1-72">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)  </span>
<span id="cb1-73">)</span>
<span id="cb1-74"></span>
<span id="cb1-75">cv_bench <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">benchmark</span>(</span>
<span id="cb1-76">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cvar</span>(x1),</span>
<span id="cb1-77">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cvar</span>(x2),</span>
<span id="cb1-78">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cvar</span>(x3),</span>
<span id="cb1-79">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cvar</span>(x4), </span>
<span id="cb1-80">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1000000"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cvar</span>(x5),</span>
<span id="cb1-81">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replications =</span> 100L,</span>
<span id="cb1-82">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replications"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elapsed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relative"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user.self"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sys.self"</span>)</span>
<span id="cb1-83">)</span>
<span id="cb1-84"></span>
<span id="cb1-85">benchmarks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(cg_bench, ch_bench, ck_bench, cs_bench, cm_bench, csd_bench, cv_bench)</span>
<span id="cb1-86"></span>
<span id="cb1-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Arrange benchmarks and plot</span></span>
<span id="cb1-88">bench_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> benchmarks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">func =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb1-90">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cgmean"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), </span>
<span id="cb1-91">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chmean"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-92">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ckurtosis"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-93">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cskewness"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-94">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmean"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-95">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csd"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-96">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cvar"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-97">    )</span>
<span id="cb1-98">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-99">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(func, test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-100">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(func, test, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>())</span>
<span id="cb1-101"></span>
<span id="cb1-102">bench_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-103">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>test, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>elapsed, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> func, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> func)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-104">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-105">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>func, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-106">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-107">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-108">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cumulative Function Speed Comparison"</span>,</span>
<span id="cb1-109">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample Size"</span>,</span>
<span id="cb1-110">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Elapsed Time (sec)"</span>,</span>
<span id="cb1-111">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Function"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-01-11/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The results show that the TidyDensity cumulative functions scale extremely well as the sample size increases. The elapsed time remains very low even at 1 million observations. The base R implementations like <code>var()</code> and <code>sd()</code> perform significantly worse when used inside of an <code>sapply</code> at large sample sizes. What was not tested however is <code>cmedian()</code> and this is because the performance is very slow once we reach 1e4 compared to the other functions as such that it would take too long to run the benchmark if it ran at all.</p>
<p>So if you need fast statistical functions that can scale to big datasets, the TidyDensity cumulative functions are a great option! They provide massive speedups over base R while returning the same final result.</p>
<p>Let me know in the comments if you have any other benchmark ideas for comparing R packages! I’m always looking for interesting performance comparisons to test out.</p>


</section>

 ]]></description>
  <category>code</category>
  <category>tidydensity</category>
  <category>benchmark</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-01-11/index.html</guid>
  <pubDate>Thu, 11 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring the Peaks: A Dive into the Triangular Distribution in TidyDensity</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-10/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Welcome back, fellow data enthusiasts! Today, we embark on an exciting journey into the world of statistical distributions with a special focus on the latest addition to the TidyDensity package – the triangular distribution. Tightly packed and versatile, this distribution brings a unique flavor to your data simulations and analyses. In this blog post, we’ll delve into the functions provided, understand their arguments, and explore the wonders of the triangular distribution.</p>
</section>
<section id="whats-so-special-about-triangular-distributions" class="level1">
<h1>What’s So Special About Triangular Distributions?</h1>
<ul>
<li>Flexibility in uncertainty: They model situations where you have a minimum, maximum, and most likely value, but the exact distribution between those points is unknown.</li>
<li>Common in real-world scenarios: Project cost estimates, task completion times, expert opinions, and even natural phenomena often exhibit triangular patterns.</li>
<li>Simple to understand and visualize: Their straightforward shape makes them accessible for interpretation and communication.</li>
</ul>
<p>The triangular distribution is a continuous probability distribution with lower limit a, upper limit b, and mode c, where a &lt; b and a ≤ c ≤ b. The distribution resembles a tent shape.</p>
<p>The probability density function of the triangular distribution is:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(x) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> </span>
<span id="cb1-2">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>(x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ((b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a)(c <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a))  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> a ≤ x ≤ c</span>
<span id="cb1-3">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>(b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ((b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a)(b <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> c))  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> c ≤ x ≤ b</span></code></pre></div>
<p>The key parameters of the triangular distribution are:</p>
<ul>
<li><code>a</code> - the minimum value</li>
<li><code>b</code> - the maximum value</li>
<li><code>c</code> - the mode (most frequent value)</li>
</ul>
<p>The triangular distribution is often used as a subjective description of a population for which there is only limited sample data. It is useful when a process has a natural minimum and maximum.</p>
</section>
<section id="triangular-functions" class="level1">
<h1>Triangular Functions</h1>
<p>TidyDensity’s Triangular Distribution Functions: Let’s start by introducing the main functions for the triangular distribution:</p>
<ol type="1">
<li><code>tidy_triangular()</code>: This function generates a triangular distribution with a specified number of simulations, minimum, maximum, and mode values.
<ul>
<li><strong>.n:</strong> Specifies the number of x values for each simulation.</li>
<li><strong>.min:</strong> Sets the minimum value of the triangular distribution.</li>
<li><strong>.max:</strong> Determines the maximum value of the triangular distribution.</li>
<li><strong>.mode:</strong> Specifies the mode (peak) value of the triangular distribution.</li>
<li><strong>.num_sims:</strong> Controls the number of simulations to perform.</li>
<li><strong>.return_tibble:</strong> A logical value indicating whether to return the result as a tibble.</li>
</ul></li>
<li><code>util_triangular_param_estimate()</code>: This function estimates the parameters of a triangular distribution from a tidy data frame.
<ul>
<li><strong>.x:</strong> Requires a numeric vector, with all values satisfying 0 &lt;= x &lt;= 1.</li>
<li><strong>.auto_gen_empirical:</strong> A boolean value (TRUE/FALSE) with a default set to TRUE. It automatically generates tidy_empirical() output for the .x parameter and utilizes tidy_combine_distributions().</li>
</ul></li>
<li><code>util_triangular_stats_tbl()</code>: This function creates a tidy data frame with statistics for a triangular distribution.
<ul>
<li><strong>.data:</strong> The data being passed from a tidy_ distribution function.</li>
</ul></li>
<li><code>triangle_plot()</code>: This function creates a ggplot2 object for a triangular distribution.
<ul>
<li><strong>.data:</strong> Tidy data from the tidy_triangular function.</li>
<li><strong>.interactive:</strong> A logical value indicating whether to return an interactive plot using plotly. Default is FALSE.</li>
</ul></li>
</ol>
<section id="using-tidy_triangular-for-simulations" class="level2">
<h2 class="anchored" data-anchor-id="using-tidy_triangular-for-simulations">Using tidy_triangular for Simulations</h2>
<p>Suppose you want to simulate a triangular distribution with 100 x values, a minimum of 0, a maximum of 1, and a mode at 0.5. You’d use the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb2-2"></span>
<span id="cb2-3">triangular_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_triangular</span>(</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mode =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, </span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.return_tibble =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-10">  )</span>
<span id="cb2-11"></span>
<span id="cb2-12">triangular_data</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 100 × 7
   sim_number     x     y      dx      dy     p     q
   &lt;fct&gt;      &lt;int&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;
 1 1              1 0.853 -0.140  0.00158 0.957 0.853
 2 1              2 0.697 -0.128  0.00282 0.816 0.697
 3 1              3 0.656 -0.116  0.00484 0.764 0.656
 4 1              4 0.518 -0.103  0.00805 0.536 0.518
 5 1              5 0.635 -0.0909 0.0130  0.733 0.635
 6 1              6 0.838 -0.0786 0.0202  0.948 0.838
 7 1              7 0.645 -0.0662 0.0304  0.748 0.645
 8 1              8 0.482 -0.0539 0.0444  0.464 0.482
 9 1              9 0.467 -0.0416 0.0627  0.437 0.467
10 1             10 0.599 -0.0293 0.0859  0.678 0.599
# ℹ 90 more rows</code></pre>
</div>
</div>
<p>This generates a tidy tibble with simulated data, ready for your analysis.</p>
</section>
<section id="estimating-parameters-and-creating-stats-tables" class="level2">
<h2 class="anchored" data-anchor-id="estimating-parameters-and-creating-stats-tables">Estimating Parameters and Creating Stats Tables</h2>
<p>Utilize the <code>util_triangular_param_estimate</code> function to estimate parameters and create tidy empirical data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">param_estimate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">util_triangular_param_estimate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.x =</span> triangular_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y)</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(param_estimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>parameter_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>          [,1]        
dist_type "Triangular"
samp_size "100"       
min       "0.0572515" 
max       "0.8822025" 
mode      "0.8822025" 
method    "Basic"     </code></pre>
</div>
</div>
<p>For statistics table creation:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">stats_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">util_triangular_stats_tbl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> triangular_data)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(stats_table)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                  [,1]                     
tidy_function     "tidy_triangular"        
function_call     "Triangular c(0, 1, 0.5)"
distribution      "Triangular"             
distribution_type "continuous"             
points            "100"                    
simulations       "1"                      
mean              "0.5"                    
median            "0.3535534"              
mode              "1"                      
range_low         "0.0572515"              
range_high        "0.8822025"              
variance          "0.04166667"             
skewness          "0"                      
kurtosis          "-0.6"                   
entropy           "-0.6931472"             
computed_std_skew "-0.1870017"             
computed_std_kurt "2.778385"               
ci_lo             "0.08311609"             
ci_hi             "0.8476985"              </code></pre>
</div>
</div>
<p>Visualizing the Triangular Distribution: Now, let’s visualize the triangular distribution using the <code>triangle_plot</code> function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">triangle_plot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> triangular_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item" id="htmlwidget-c34e877834fc06dfa8b2" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-c34e877834fc06dfa8b2">{"x":{"data":[{"x":[0,0.5,1],"y":[0,2,0],"text":["x: 0.0<br />y: 0","x: 0.5<br />y: 2","x: 1.0<br />y: 0"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,0,0,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(0,0,0,1)"}},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.5,0.5,0.5],"y":[0,0,0],"text":"x[2]: 0.5<br />y[1]: 0","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,0,0,1)","opacity":1,"size":5.6692913385826778,"symbol":"circle","line":{"width":1.8897637795275593,"color":"rgba(0,0,0,1)"}},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0,0.5,null,0,0.5,null,0,0.5],"y":[0,2,null,0,2,null,0,2],"text":"x[1]: 0<br />y[1]: 0<br />x[2]: 0.5<br />y[2]: 2","type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,0,0,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.5,1,null,0.5,1,null,0.5,1],"y":[2,0,null,2,0,null,2,0],"text":"x[2]: 0.5<br />y[2]: 2<br />x[3]: 1<br />y[3]: 0","type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,0,0,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0,1,null,0,1,null,0,1],"y":[0,0,null,0,0,null,0,0],"text":"x[1]: 0<br />y[1]: 0<br />x[3]: 1<br />y[3]: 0","type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,0,0,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.5,0.5,null,0.5,0.5,null,0.5,0.5],"y":[2,0,null,2,0,null,2,0],"text":"x[2]: 0.5<br />y[2]: 2<br />x[2]: 0.5<br />y[1]: 0","type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,0,0,1)","dash":"dash"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0,0.5,null,0,0.5,null,0,0.5],"y":[2,2,null,2,2,null,2,2],"text":"x[1]: 0<br />y[2]: 2<br />x[2]: 0.5<br />y[2]: 2","type":"scatter","mode":"lines","line":{"width":1.8897637795275593,"color":"rgba(0,0,0,1)","dash":"dash"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.762557077625573,"r":7.3059360730593621,"b":25.570776255707766,"l":28.493150684931514},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724},"title":{"text":"Triangle PDF Plot","font":{"color":"rgba(0,0,0,1)","family":"","size":17.534246575342465},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.050000000000000003,1.05],"tickmode":"array","ticktext":["0.00","0.25","0.50","0.75","1.00"],"tickvals":[0,0.25,0.5,0.75,1],"categoryorder":"array","categoryarray":["0.00","0.25","0.50","0.75","1.00"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"y","title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.10000000000000001,2.1000000000000001],"tickmode":"array","ticktext":["0.0","0.5","1.0","1.5","2.0"],"tickvals":[0,0.5,1,1.5,2],"categoryorder":"array","categoryarray":["0.0","0.5","1.0","1.5","2.0"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.6529680365296811,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.68949771689498},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176002,"zeroline":false,"anchor":"x","title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.611872146118724}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.68949771689498}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"2ff828b7681f":{"x":{},"y":{},"type":"scatter"},"2ff8737b4c08":{"x":{},"y":{}},"2ff835b046de":{"x":{},"y":{},"xend":{},"yend":{}},"2ff849ea1bb4":{"x":{},"y":{},"xend":{},"yend":{}},"2ff87b857774":{"x":{},"y":{},"xend":{},"yend":{}},"2ff8e9869b8":{"x":{},"y":{},"xend":{},"yend":{}},"2ff81465757f":{"x":{},"y":{},"xend":{},"yend":{}}},"cur_data":"2ff828b7681f","visdat":{"2ff828b7681f":["function (y) ","x"],"2ff8737b4c08":["function (y) ","x"],"2ff835b046de":["function (y) ","x"],"2ff849ea1bb4":["function (y) ","x"],"2ff87b857774":["function (y) ","x"],"2ff8e9869b8":["function (y) ","x"],"2ff81465757f":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.20000000000000001,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">triangle_plot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.data =</span> triangular_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-10/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will generate an informative plot, and if you set <code>.interactive</code> to TRUE, you can explore the distribution interactively using plotly.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this blog post, we’ve explored the powerful functionalities of the triangular distribution in TidyDensity. Whether you’re simulating data, estimating parameters, or creating insightful visualizations, these functions provide a robust toolkit for your statistical endeavors. Happy coding, and may your distributions always be tidy!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-10/index.html</guid>
  <pubDate>Wed, 10 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>New Horizons for TidyDensity: Version 1.3.0 Release</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-09/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The latest release of the <code>TidyDensity</code> R package brings some major changes and improvements that open up new possibilities for statistical analysis and data visualization. Version 1.3.0 includes breaking changes, new features, and a host of minor fixes and improvements that enhance performance and usability. Let’s dive into what’s new!</p>
</section>
<section id="breaking-changes" class="level1">
<h1>Breaking Changes</h1>
<p>Two key functions have been modified in this release:</p>
<ul>
<li><code>tidy_multi_single_dist()</code> now requires passing the .return_tibble parameter to specify whether to return a tibble (TRUE) or a list (FALSE). This allows better control over the output.</li>
<li>The minimum R version has been bumped to 4.1.0 to leverage the native pipe operator <code>|&gt;</code> instead of <code>%&gt;%</code>.</li>
</ul>
</section>
<section id="new-features" class="level1">
<h1>New Features</h1>
<p>Several new functions expand the capabilities of TidyDensity:</p>
<ul>
<li><code>tidy_triangular()</code> generates a tidy dataframe of points from a triangular distribution.</li>
<li><code>util_triangular_param_estimate()</code> estimates the parameters of a triangular distribution.</li>
<li><code>util_triangular_stats_tbl()</code> computes summary statistics for a triangular distribution.</li>
<li><code>triangle_plot()</code> creates a triangular density plot.</li>
<li><code>tidy_autoplot()</code> now supports triangular distributions.</li>
</ul>
</section>
<section id="performance-improvements" class="level1">
<h1>Performance Improvements</h1>
<p>Many functions have been optimized for speed:</p>
<ul>
<li><code>cvar()</code> and <code>csd()</code> are now vectorized for over 100x speedup.</li>
<li>Using <code>data.table</code> in the <code>tidy_</code> functions typically improves speed by 30% or more.</li>
<li>Other vectorized improvements speed up <code>cskewness()</code> by 124x and <code>ckurtosis()</code> by 121x.</li>
</ul>
<p>The minor fixes address deprecation warnings, documentation, and ensure consistency across functions.</p>
<p>Version 1.3.0 takes TidyDensity to the next level with expanded capabilities and boosted performance. Whether you need to model triangular distributions or crunch large datasets, this release has you covered. The pipe workflow makes analyses simpler and faster. Check out the full details in the GitHub repository. Let us know if you have any issues or feature requests!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-09/index.html</guid>
  <pubDate>Tue, 09 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Conquering Daily Data: How to Aggregate to Months and Years Like a Pro in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-08/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Taming the beast of daily data can be daunting. While it captures every detail, sometimes you need a bird’s-eye view. Enter aggregation, your secret weapon for transforming daily data into monthly and yearly insights. In this post, we’ll dive into the world of R, where you’ll wield powerful tools like <code>dplyr</code> and <code>lubridate</code> to master this data wrangling art.</p>
</section>
<section id="packages-gear-up-with-the-right-packages" class="level1">
<h1>Packages: Gear Up with the Right Packages</h1>
<p>Think of R packages like your trusty toolbox. Today, we’ll need two essentials:</p>
<ul>
<li><code>dplyr</code>: This swiss army knife lets you manipulate and summarize data like a boss.</li>
<li><code>lubridate</code>: Time is our domain, and <code>lubridate</code> helps us navigate it with precision, especially for dates.</li>
</ul>
</section>
<section id="sample-data-our-training-ground" class="level1">
<h1>Sample Data, Our Training Ground</h1>
<p>Imagine you have daily sales data for a year. Each row represents a day, with columns for date, product, and sales amount. Let’s create a mini version:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate random dates and sales</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-6">dates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023-01-01'</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023-12-31'</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'day'</span>)</span>
<span id="cb1-7">sales <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create our data frame</span></span>
<span id="cb1-10">daily_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> dates, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sales =</span> sales)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Peek at our data</span></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(daily_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        date    sales
1 2023-01-01 6437.888
2 2023-01-02 8941.526
3 2023-01-03 7044.885
4 2023-01-04 9415.087
5 2023-01-05 9702.336
6 2023-01-06 5227.782</code></pre>
</div>
</div>
<p>This code generates 10 random dates and sales figures, and stores them in a data frame called <code>daily_data</code>.</p>
</section>
<section id="monthly-magic-from-days-to-months" class="level1">
<h1>Monthly Magic – From Days to Months</h1>
<p>Now, let’s transform this daily data into monthly insights. Here’s the incantation:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group data by month</span></span>
<span id="cb3-2">monthly_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> daily_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group by month extracted from date</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(date)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate total sales for each month</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total_sales =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sales))</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(monthly_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 2
  month total_sales
  &lt;dbl&gt;       &lt;dbl&gt;
1     1     245675.
2     2     199109.
3     3     233764.
4     4     227888.
5     5     230928.
6     6     222015.</code></pre>
</div>
</div>
<p>Let’s break it down:</p>
<ul>
<li><code>group_by(month = month(date))</code>: We tell R to group our data by the month extracted from the <code>date</code> column.</li>
<li><code>summarize(total_sales = sum(sales))</code>: Within each month group, we calculate the total sales by summing the <code>sales</code> values.</li>
</ul>
</section>
<section id="yearly-triumph-conquering-the-calendar" class="level1">
<h1>Yearly Triumph – Conquering the Calendar</h1>
<p>Yearning for yearly insights? Fear not! Modify the spell slightly:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group data by year</span></span>
<span id="cb5-2">yearly_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> daily_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group by year extracted from date</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(date)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate average sales for each year</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">average_sales =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(sales))</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(yearly_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 2
   year average_sales
  &lt;dbl&gt;         &lt;dbl&gt;
1  2023         7494.</code></pre>
</div>
</div>
<p>Here, we group by the year extracted from <code>date</code> and then calculate the average sales for each year.</p>
</section>
<section id="but-what-about-base-r" class="level1">
<h1>But what about base R?</h1>
<p>So far, we’ve used <code>dplyr</code> to group and summarize our data. But what if you don’t have <code>dplyr</code>? No problem! You can use base R functions like <code>aggregate()</code> to achieve the same results:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">monthly_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aggregate</span>(</span>
<span id="cb7-2">  daily_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sales, </span>
<span id="cb7-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(daily_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%m'</span>)), </span>
<span id="cb7-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> sum</span>
<span id="cb7-5">  )</span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(monthly_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  month        x
1    01 245675.1
2    02 199108.7
3    03 233764.1
4    04 227888.3
5    05 230928.0
6    06 222015.3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">yearly_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aggregate</span>(</span>
<span id="cb9-2">  daily_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sales, </span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(daily_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y'</span>)), </span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> mean</span>
<span id="cb9-5">  )</span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(yearly_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  year      x
1 2023 7493.8</code></pre>
</div>
</div>
</section>
<section id="experiment" class="level1">
<h1>Experiment!</h1>
<p>The magic doesn’t stop there! You can customize your aggregations to your heart’s content. Try these variations:</p>
<ul>
<li>Calculate maximum sales per month.</li>
<li>Find the product with the highest average sales per year.</li>
<li>Group data by month and product to see which products perform best each month.</li>
</ul>
</section>
<section id="remember" class="level1">
<h1>Remember</h1>
<ul>
<li>Play around with different <code>summarize()</code> functions like <code>min()</code>, <code>max()</code>, or <code>median()</code>.</li>
<li>Use <code>filter()</code> before <code>group_by()</code> to focus on specific subsets of data.</li>
<li>Explore other time units like weeks or quarters with lubridate’s powerful tools.</li>
</ul>
</section>
<section id="the-takeaway" class="level1">
<h1>The Takeaway</h1>
<p>Mastering daily data aggregation is a valuable skill for any data warrior. With the help of R and your newfound knowledge, you can transform mountains of daily data into insightful monthly and yearly summaries. So, go forth, conquer your data, and share your insights with the world!</p>
<p><strong>Bonus Challenge:</strong> Share your own R code and insights in the comments below! Let’s learn from each other and become daily data aggregation masters together!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-08/index.html</guid>
  <pubDate>Mon, 08 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Unveiling the Smooth Operator: Rolling Averages in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-05/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Ever felt those data points were a bit too jittery? Smoothing out trends and revealing underlying patterns is a breeze with rolling averages in R. Ready to roll? Let’s dive in!</p>
</section>
<section id="rolling-with-the-zoo" class="level1">
<h1>Rolling with the ‘zoo’</h1>
<p>Meet the ‘zoo’ package, your trusty companion for time series data wrangling. It’s got a handy function called ‘rollmean’ that handles those rolling averages with ease.</p>
</section>
<section id="installing-and-loading" class="level1">
<h1>Installing and Loading</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("zoo")  # Grab it if you haven't already</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(zoo)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bring it into your workspace</span></span></code></pre></div>
</div>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<section id="creating-a-simple-time-series" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-simple-time-series">Creating a Simple Time Series</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set seed for reproducibility (optional</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Let's imagine some daily sales data</span></span>
<span id="cb2-3">sales <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trunc</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">112</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate some random sales</span></span>
<span id="cb2-4">days <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">112</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">origin =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-12-31"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add some dates!</span></span>
<span id="cb2-5">data_zoo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zoo</span>(sales, days)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to a zoo object</span></span></code></pre></div>
</div>
</section>
<section id="calculating-rolling-averages" class="level2">
<h2 class="anchored" data-anchor-id="calculating-rolling-averages">Calculating Rolling Averages</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Say we want a 7-day rolling average:</span></span>
<span id="cb3-2">rolling_avg7 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollmean</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb3-3">rolling_avg7_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollmean</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)</span>
<span id="cb3-4">rolling_avg7_right <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollmean</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># How about a 28-day one?</span></span>
<span id="cb3-7">rolling_avg28 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollmean</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)</span>
<span id="cb3-8">rolling_avg28_left <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollmean</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)</span>
<span id="cb3-9">rolling_avg28_right <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollmean</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)</span></code></pre></div>
</div>
</section>
<section id="visualizing-the-smoothness" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-the-smoothness">Visualizing the Smoothness</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sales"</span>)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(rolling_avg7, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(rolling_avg7_left, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(rolling_avg7_right, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(</span>
<span id="cb4-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomleft"</span>, </span>
<span id="cb4-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb4-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original Data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7-day Avg"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7-day Avg (left-aligned)"</span>, </span>
<span id="cb4-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7-day Avg (right-aligned)"</span></span>
<span id="cb4-10">    ),</span>
<span id="cb4-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>), </span>
<span id="cb4-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb4-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.628</span></span>
<span id="cb4-14">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-05/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_zoo, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sales"</span>)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(rolling_avg28, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(rolling_avg28_left, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(rolling_avg28_right, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(</span>
<span id="cb5-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomleft"</span>, </span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original Data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"28-day Avg"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"28-day Avg (left-aligned)"</span>, </span>
<span id="cb5-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"28-day Avg (right-aligned)"</span></span>
<span id="cb5-10">    ),</span>
<span id="cb5-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span>), </span>
<span id="cb5-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb5-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.628</span></span>
<span id="cb5-14">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-05/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="experimenting-and-interpreting" class="level1">
<h1>Experimenting and Interpreting</h1>
<p>Play with different ‘k’ values to see how they affect the smoothness. Remember, larger ‘k’ means more smoothing, but potential loss of detail.</p>
</section>
<section id="your-turn-to-roll" class="level1">
<h1>Your Turn to Roll!</h1>
<p>Grab your data and start exploring rolling averages! It’s a powerful tool to uncover hidden patterns and trends. Share your discoveries and join the rolling conversation!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-05/index.html</guid>
  <pubDate>Fri, 05 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Reflecting on the Past Year: A LinkedIn Year in Review (2023)</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-04/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>As we close the door on another year, it’s always a good time to look back and reflect on the past 12 months. And what better way to do that than with a LinkedIn Year in Review?</p>
<p>Whether you’re a job seeker, a business owner, or just someone who enjoys staying connected with their professional network, LinkedIn is an invaluable tool for staying up to date with the latest trends and opportunities in your field. And as we wrap up 2023, now is the perfect time to take a look at how you’ve been using LinkedIn and see where you can improve.</p>
<p>So what did your LinkedIn Year in Review have in store for you? Here are just a few of the things you might have seen:</p>
<ul>
<li>A summary of your activity on LinkedIn, including how many people you’ve connected with, how many posts you’ve shared, and how many likes, comments, and shares your content has received.</li>
<li>A breakdown of the industries and job titles of the people you’ve connected with, which can give you a good idea of the types of people you’ve been spending the most time interacting with.</li>
<li>A summary of your skills and endorsements, as well as which skills are most in demand in your industry.</li>
</ul>
<p>All of these insights can be incredibly valuable as you start planning for the year ahead. With this information in hand, you can start looking for new opportunities, strengthening your existing relationships, and building new ones. And with the start of the new year, it’s a perfect time to set new goals and improve your LinkedIn profile.</p>
<p>If you haven’t yet checked out your LinkedIn Year in Review, don’t wait any longer! Log in to your account and take a look. And while you’re there, why not make a resolution to be more active on LinkedIn in the coming year? The more you put into your professional network, the more you’ll get out of it.</p>
<p>So let’s make the most of this new year, take advantage of the insights from your LinkedIn Year in Review, and make the most of your professional network. Here’s to a successful, connected, and productive 2024!</p>
<p>I have done a lot of work on this already, it is not comprehensive but it is enough to understand what is happening, and I used a lot of functionality from the <a href="https://www.spsanderson.com/healthyverse/"><code>{healthyverse}</code></a></p>
<p>Don’t forget you can also see my package and GitHub development wrap up <a href="https://www.spsanderson.com/year_review_2023.html">on my year in review 2023</a></p>
</section>
<section id="analysis" class="level1">
<h1>Analysis</h1>
<p>I will do this in chunks, as it will be easier to digest. First of course you have to get your data. I am not going to go over this process as there are many a great link just a search away.</p>
<p>Let’s load in those libraries and read the files in.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readxl)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lubridate)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(timetk)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(janitor)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.ts)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb1-12"></span>
<span id="cb1-13">fp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linkedin_content.xlsx"</span></span>
<span id="cb1-14"></span>
<span id="cb1-15">engagement_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(fp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sheet =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ENGAGEMENT"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mdy</span>(date)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Engagement Rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (engagements <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> impressions) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter_by_time</span>(</span>
<span id="cb1-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_var =</span> date,</span>
<span id="cb1-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.end_date =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-12-31"</span></span>
<span id="cb1-22">  )</span>
<span id="cb1-23"></span>
<span id="cb1-24">top_posts_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(fp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sheet =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOP POSTS"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>()</span>
<span id="cb1-26"></span>
<span id="cb1-27">followers_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(fp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sheet =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOLLOWERS"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mdy</span>(date)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter_by_time</span>(</span>
<span id="cb1-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_var =</span> date,</span>
<span id="cb1-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.end_date =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-12-31"</span></span>
<span id="cb1-33">  )</span>
<span id="cb1-34"></span>
<span id="cb1-35">demographics_tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(fp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sheet =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEMOGRAPHICS"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>()</span></code></pre></div>
</div>
<p>Now let’s take a look at that data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(engagement_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 365
Columns: 4
$ date              &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-03, 2023-01-04, 202…
$ impressions       &lt;dbl&gt; 4872, 3735, 10360, 12217, 27036, 26084, 8720, 2753, …
$ engagements       &lt;dbl&gt; 34, 17, 51, 80, 173, 124, 32, 17, 80, 54, 106, 135, …
$ `Engagement Rate` &lt;dbl&gt; 0.6978654, 0.4551539, 0.4922780, 0.6548252, 0.639887…</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(top_posts_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 50
Columns: 7
$ post_url_1          &lt;chr&gt; "https://www.linkedin.com/feed/update/urn:li:activ…
$ post_publish_date_2 &lt;chr&gt; "2/16/2023", "2/16/2023", "3/16/2023", "1/24/2023"…
$ engagements         &lt;dbl&gt; 281, 227, 220, 194, 181, 172, 160, 145, 138, 124, …
$ x4                  &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…
$ post_url_5          &lt;chr&gt; "https://www.linkedin.com/feed/update/urn:li:activ…
$ post_publish_date_6 &lt;chr&gt; "2/16/2023", "1/5/2023", "1/17/2023", "1/24/2023",…
$ impressions         &lt;dbl&gt; 43951, 38656, 34402, 32505, 25205, 24916, 22656, 2…</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(followers_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 365
Columns: 2
$ date          &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-03, 2023-01-04, 2023-01…
$ new_followers &lt;dbl&gt; 11, 13, 17, 16, 26, 15, 14, 18, 14, 9, 11, 23, 6, 13, 5,…</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(demographics_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 30
Columns: 3
$ top_demographics &lt;chr&gt; "Job titles", "Job titles", "Job titles", "Job titles…
$ value            &lt;chr&gt; "Data Scientist", "Data Analyst", "Software Engineer"…
$ percentage       &lt;chr&gt; "0.05210459977388382", "0.03567609563469887", "0.0223…</code></pre>
</div>
</div>
<p>We are really only going to focus on the <strong>engagement_tbl</strong> and the <strong>followers_tbl</strong> as this is more of a time series analysis.</p>
<p>Ok, so let’s see how my <strong>Impressions</strong>, <strong>Engagements</strong>, and <strong>Engagement Rate</strong> have been.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">engagement_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_title</span>(name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_time_series</span>(</span>
<span id="cb10-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.facet_vars =</span> name,</span>
<span id="cb10-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value =</span> value,</span>
<span id="cb10-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_var =</span> date,</span>
<span id="cb10-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb10-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.smooth =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb10-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LinkedIn Stats Time Series Plot"</span></span>
<span id="cb10-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">followers_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_time_series</span>(</span>
<span id="cb11-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value =</span> new_followers,</span>
<span id="cb11-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_var =</span> date,</span>
<span id="cb11-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb11-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.smooth =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb11-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LinkedIn Stats Time Series Plot - New Followers"</span></span>
<span id="cb11-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-3-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Let’s look at a cumulative view of things.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">engagement_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_by_time</span>(</span>
<span id="cb12-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_var =</span> date,</span>
<span id="cb12-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>,</span>
<span id="cb12-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Impressions</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(impressions),</span>
<span id="cb12-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Engagements</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(engagements)</span>
<span id="cb12-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb12-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Impressions</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Impressions</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>),</span>
<span id="cb12-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Engagements</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Engagements</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb12-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_title</span>(name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb12-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>,</span>
<span id="cb12-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>,</span>
<span id="cb12-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LinkedIn Stats Time Series Plot"</span></span>
<span id="cb12-22">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">followers_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_by_time</span>(</span>
<span id="cb13-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.date_var =</span> date,</span>
<span id="cb13-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>,</span>
<span id="cb13-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Followers</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(new_followers)</span>
<span id="cb13-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb13-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Followers</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Followers</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb13-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cumulative Followers</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb13-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>,</span>
<span id="cb13-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>,</span>
<span id="cb13-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LinkedIn Stats Time Series Plot - New Followers"</span></span>
<span id="cb13-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-4-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>It seems again that writing blog posts and sharing them daily has a nice effect. Now we are going to look at some <strong>Value</strong>, <strong>Velocity</strong>, and <strong>Acceleration</strong> plots with the <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_vva_plot.html?q=ts_vva#ref-usage"><code>ts_vva_plot()</code></a> function from the <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts</code>}</a> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_vva_plot</span>(engagement_tbl, date, engagements)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_vva_plot</span>(engagement_tbl, date, impressions)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_vva_plot</span>(engagement_tbl, date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Engagement Rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-5-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_vva_plot</span>(followers_tbl, date, new_followers)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-5-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now some simple moving average plots using the function <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_sma_plot.html?q=ts_sma#null"><code>ts_sma_plot()</code></a> again from the <code>{healthyR.ts}</code> library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_sma_plot</span>(engagement_tbl, date, impressions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sma_order =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_sma_plot</span>(engagement_tbl, date, engagements, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sma_order =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-6-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_sma_plot</span>(engagement_tbl, date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Engagement Rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sma_order =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-6-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_sma_plot</span>(followers_tbl, date, new_followers, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sma_order =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>static_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-6-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now some calendar heatmaps with <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_calendar_heatmap_plot.html?q=calendar#null"><code>ts_calendar_heatmap_plot()</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_calendar_heatmap_plot</span>(engagement_tbl, date, impressions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calendar Heatmap - Impressions"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_calendar_heatmap_plot</span>(engagement_tbl, date, engagements, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calendar Heatmap - Engagemets"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-7-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_calendar_heatmap_plot</span>(engagement_tbl, date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Engagement Rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calendar Heatmap - Engagement Rate"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-7-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_calendar_heatmap_plot</span>(followers_tbl, date, new_followers, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calendar Heatmap - New Followers"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-7-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Some seasonal diagnostics using <a href="https://business-science.github.io/timetk/"><code>{timetk}</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_seasonal_diagnostics</span>(engagement_tbl</span>
<span id="cb26-2">                          , date, engagements, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb26-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.feature_set =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wday.lbl"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month.lbl"</span>),</span>
<span id="cb26-4">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seasonal Diagnostics - Engagements"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_seasonal_diagnostics</span>(engagement_tbl</span>
<span id="cb27-2">                          , date, impressions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb27-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.feature_set =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wday.lbl"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month.lbl"</span>),</span>
<span id="cb27-4">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seasonal Diagnostics - Impressions"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-8-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_seasonal_diagnostics</span>(engagement_tbl</span>
<span id="cb28-2">                          , date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Engagement Rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb28-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.feature_set =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wday.lbl"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month.lbl"</span>),</span>
<span id="cb28-4">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seasonal Diagnostics - Engagement Rate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-8-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_seasonal_diagnostics</span>(</span>
<span id="cb29-2">  followers_tbl, date, new_followers, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.interactive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, </span>
<span id="cb29-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.feature_set =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wday.lbl"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month.lbl"</span>), </span>
<span id="cb29-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seasonal Diagnostics - New Followers"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-8-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Finally some lag correlation plots with <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_lag_correlation.html?q=ts_lag#null"><code>ts_lag_correlation()</code></a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_lag_correlation</span>(engagement_tbl, date, engagements, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.lags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb30-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lag Correlation Plot - Engagements"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb30-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_lag_correlation</span>(engagement_tbl, date, impressions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.lags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lag Correlation Plot - Impressions"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-9-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_lag_correlation</span>(engagement_tbl, date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Engagement Rate</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.lags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lag Correlation Plot - Engagement Rate"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-9-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_lag_correlation</span>(followers_tbl, date, new_followers, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.lags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plots<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lag Correlation Plot - New Followers"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-04/index_files/figure-html/unnamed-chunk-9-4.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="key-stats-and-tables" class="level1">
<h1>Key Stats and Tables</h1>
<p>Now we are going to look at some key stats and tables. First we will look at the top 10 posts by impressions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">top_posts_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb34-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(post_publish_date_2, impressions, post_url_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb34-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(impressions)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb34-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb34-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Post Date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Impressions"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Post URL"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb34-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 Posts by Impressions"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)</span></code></pre></div>
<div class="cell-output-display">
<table data-quarto-postprocess="true" class="table table-sm table-striped small">
<caption>Top 10 Posts by Impressions</caption>
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">Post Date</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">Impressions</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">Post URL</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">2/16/2023</td>
<td style="text-align: center;">43951</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7031977309351890944</td>
</tr>
<tr class="even">
<td style="text-align: center;">2/16/2023</td>
<td style="text-align: center;">38656</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7031977249448820737</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3/16/2023</td>
<td style="text-align: center;">34402</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7042173970149728257</td>
</tr>
<tr class="even">
<td style="text-align: center;">1/24/2023</td>
<td style="text-align: center;">32505</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7023663053699207168</td>
</tr>
<tr class="odd">
<td style="text-align: center;">8/24/2023</td>
<td style="text-align: center;">25205</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7100535469263699968</td>
</tr>
<tr class="even">
<td style="text-align: center;">1/17/2023</td>
<td style="text-align: center;">24916</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7021114787371614209</td>
</tr>
<tr class="odd">
<td style="text-align: center;">1/5/2023</td>
<td style="text-align: center;">22656</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7016769698595749888</td>
</tr>
<tr class="even">
<td style="text-align: center;">3/10/2023</td>
<td style="text-align: center;">21943</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7039960379266883585</td>
</tr>
<tr class="odd">
<td style="text-align: center;">6/23/2023</td>
<td style="text-align: center;">20559</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7078000250656808960</td>
</tr>
<tr class="even">
<td style="text-align: center;">2/21/2023</td>
<td style="text-align: center;">19730</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7033888693216018432</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Now we will look at the top 10 posts by engagements.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">top_posts_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(post_publish_date_2, engagements, post_url_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(engagements)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Post Date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Engagements"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Post URL"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 Posts by Engagements"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)</span></code></pre></div>
<div class="cell-output-display">
<table data-quarto-postprocess="true" class="table table-sm table-striped small">
<caption>Top 10 Posts by Engagements</caption>
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">Post Date</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">Engagements</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">Post URL</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">2/16/2023</td>
<td style="text-align: center;">281</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7031977309351890944</td>
</tr>
<tr class="even">
<td style="text-align: center;">2/16/2023</td>
<td style="text-align: center;">227</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7031977249448820737</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3/16/2023</td>
<td style="text-align: center;">220</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7042173970149728257</td>
</tr>
<tr class="even">
<td style="text-align: center;">1/24/2023</td>
<td style="text-align: center;">194</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7023663053699207168</td>
</tr>
<tr class="odd">
<td style="text-align: center;">8/24/2023</td>
<td style="text-align: center;">181</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7100535469263699968</td>
</tr>
<tr class="even">
<td style="text-align: center;">1/17/2023</td>
<td style="text-align: center;">172</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7021114787371614209</td>
</tr>
<tr class="odd">
<td style="text-align: center;">1/5/2023</td>
<td style="text-align: center;">160</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7016769698595749888</td>
</tr>
<tr class="even">
<td style="text-align: center;">3/10/2023</td>
<td style="text-align: center;">145</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7039960379266883585</td>
</tr>
<tr class="odd">
<td style="text-align: center;">6/23/2023</td>
<td style="text-align: center;">138</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7078000250656808960</td>
</tr>
<tr class="even">
<td style="text-align: center;">2/21/2023</td>
<td style="text-align: center;">124</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7033888693216018432</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Now we will look at the top 10 posts by engagement rate.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">top_posts_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(post_publish_date_2, engagements, impressions, post_url_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">engagement_rate =</span> engagements <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> impressions) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(engagement_rate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(post_publish_date_2, engagement_rate, post_url_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Post Date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Engagement Rate"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Post URL"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 Posts by Engagement Rate"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)</span></code></pre></div>
<div class="cell-output-display">
<table data-quarto-postprocess="true" class="table table-sm table-striped small">
<caption>Top 10 Posts by Engagement Rate</caption>
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">Post Date</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">Engagement Rate</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">Post URL</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">8/24/2023</td>
<td style="text-align: center;">0.0071811</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7100535469263699968</td>
</tr>
<tr class="even">
<td style="text-align: center;">1/5/2023</td>
<td style="text-align: center;">0.0070621</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7016769698595749888</td>
</tr>
<tr class="odd">
<td style="text-align: center;">1/17/2023</td>
<td style="text-align: center;">0.0069032</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7021114787371614209</td>
</tr>
<tr class="even">
<td style="text-align: center;">5/10/2023</td>
<td style="text-align: center;">0.0068692</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7062043144850137088</td>
</tr>
<tr class="odd">
<td style="text-align: center;">2/6/2023</td>
<td style="text-align: center;">0.0067925</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7028379188441010176</td>
</tr>
<tr class="even">
<td style="text-align: center;">7/17/2023</td>
<td style="text-align: center;">0.0067441</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7086688278245961728</td>
</tr>
<tr class="odd">
<td style="text-align: center;">11/29/2023</td>
<td style="text-align: center;">0.0067365</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7135620032557940736</td>
</tr>
<tr class="even">
<td style="text-align: center;">6/23/2023</td>
<td style="text-align: center;">0.0067124</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7078000250656808960</td>
</tr>
<tr class="odd">
<td style="text-align: center;">1/25/2023</td>
<td style="text-align: center;">0.0066225</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7024095415348133889</td>
</tr>
<tr class="even">
<td style="text-align: center;">3/10/2023</td>
<td style="text-align: center;">0.0066080</td>
<td style="text-align: center;">https://www.linkedin.com/feed/update/urn:li:activity:7039960379266883585</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Total Impressions: 2,720,605</p>
<p>Total Engagements: 20,000</p>
<p>Mean Engagement Rate: 0.0073513</p>
<p>New Followers: 6,388</p>
<p>And finally the demographics of people who typically interact with my posts:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">demographics_tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb37-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">percentage =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(percentage, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb37-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb37-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Demographics of People Who Interact With My Posts"</span>, </span>
<span id="cb37-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span></span>
<span id="cb37-6">    )</span></code></pre></div>
<div class="cell-output-display">
<table data-quarto-postprocess="true" class="table table-sm table-striped small">
<caption>Demographics of People Who Interact With My Posts</caption>
<thead>
<tr class="header">
<th style="text-align: center;" data-quarto-table-cell-role="th">top_demographics</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">value</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">percentage</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">Job titles</td>
<td style="text-align: center;">Data Scientist</td>
<td style="text-align: center;">0.05</td>
</tr>
<tr class="even">
<td style="text-align: center;">Job titles</td>
<td style="text-align: center;">Data Analyst</td>
<td style="text-align: center;">0.03</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Job titles</td>
<td style="text-align: center;">Software Engineer</td>
<td style="text-align: center;">0.02</td>
</tr>
<tr class="even">
<td style="text-align: center;">Job titles</td>
<td style="text-align: center;">Data Engineer</td>
<td style="text-align: center;">0.01</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Job titles</td>
<td style="text-align: center;">Professor</td>
<td style="text-align: center;">0.01</td>
</tr>
<tr class="even">
<td style="text-align: center;">Locations</td>
<td style="text-align: center;">New York City Metropolitan Area</td>
<td style="text-align: center;">0.06</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Locations</td>
<td style="text-align: center;">Greater Bengaluru Area</td>
<td style="text-align: center;">0.03</td>
</tr>
<tr class="even">
<td style="text-align: center;">Locations</td>
<td style="text-align: center;">Greater Delhi Area</td>
<td style="text-align: center;">0.02</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Locations</td>
<td style="text-align: center;">Pune/Pimpri-Chinchwad Area</td>
<td style="text-align: center;">0.02</td>
</tr>
<tr class="even">
<td style="text-align: center;">Locations</td>
<td style="text-align: center;">Mumbai Metropolitan Region</td>
<td style="text-align: center;">0.01</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Industries</td>
<td style="text-align: center;">IT Services and IT Consulting</td>
<td style="text-align: center;">0.22</td>
</tr>
<tr class="even">
<td style="text-align: center;">Industries</td>
<td style="text-align: center;">Software Development</td>
<td style="text-align: center;">0.11</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Industries</td>
<td style="text-align: center;">Higher Education</td>
<td style="text-align: center;">0.05</td>
</tr>
<tr class="even">
<td style="text-align: center;">Industries</td>
<td style="text-align: center;">Financial Services</td>
<td style="text-align: center;">0.05</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Industries</td>
<td style="text-align: center;">Hospitals and Health Care</td>
<td style="text-align: center;">0.05</td>
</tr>
<tr class="even">
<td style="text-align: center;">Seniority</td>
<td style="text-align: center;">Senior</td>
<td style="text-align: center;">0.33</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Seniority</td>
<td style="text-align: center;">Entry</td>
<td style="text-align: center;">0.27</td>
</tr>
<tr class="even">
<td style="text-align: center;">Seniority</td>
<td style="text-align: center;">Director</td>
<td style="text-align: center;">0.03</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Seniority</td>
<td style="text-align: center;">Manager</td>
<td style="text-align: center;">0.03</td>
</tr>
<tr class="even">
<td style="text-align: center;">Seniority</td>
<td style="text-align: center;">Training</td>
<td style="text-align: center;">0.02</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Company size</td>
<td style="text-align: center;">10,001+ employees</td>
<td style="text-align: center;">0.17</td>
</tr>
<tr class="even">
<td style="text-align: center;">Company size</td>
<td style="text-align: center;">1001-5000 employees</td>
<td style="text-align: center;">0.10</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Company size</td>
<td style="text-align: center;">51-200 employees</td>
<td style="text-align: center;">0.08</td>
</tr>
<tr class="even">
<td style="text-align: center;">Company size</td>
<td style="text-align: center;">11-50 employees</td>
<td style="text-align: center;">0.08</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Company size</td>
<td style="text-align: center;">1-10 employees</td>
<td style="text-align: center;">0.06</td>
</tr>
<tr class="even">
<td style="text-align: center;">Companies</td>
<td style="text-align: center;">Tata Consultancy Services</td>
<td style="text-align: center;">&lt; 1%</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Companies</td>
<td style="text-align: center;">Long Island Community Hospital</td>
<td style="text-align: center;">&lt; 1%</td>
</tr>
<tr class="even">
<td style="text-align: center;">Companies</td>
<td style="text-align: center;">Amazon</td>
<td style="text-align: center;">&lt; 1%</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Companies</td>
<td style="text-align: center;">EY</td>
<td style="text-align: center;">&lt; 1%</td>
</tr>
<tr class="even">
<td style="text-align: center;">Companies</td>
<td style="text-align: center;">Citi</td>
<td style="text-align: center;">&lt; 1%</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>linkedin</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-04/index.html</guid>
  <pubDate>Thu, 04 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Lowess Smoothing in R: A Step-by-Step Guide</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2024-01-02/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hey fellow R enthusiasts! Today, let’s dive into the fascinating world of Lowess smoothing and learn how to harness its power for creating smooth visualizations of your data. Whether you’re new to R or a seasoned pro, this step-by-step guide will walk you through the process of performing Lowess smoothing, generating data, visualizing the model, and comparing different models with varying smoother spans.</p>
</section>
<section id="what-is-lowess-smoothing" class="level1">
<h1>What is Lowess Smoothing?</h1>
<p>Locally Weighted Scatterplot Smoothing, or Lowess, is a powerful technique for capturing trends in noisy data. It’s particularly useful when dealing with datasets that exhibit complex patterns that might be missed by other methods. So, let’s get our hands dirty and start coding!</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<section id="step-1-generate-data" class="level2">
<h2 class="anchored" data-anchor-id="step-1-generate-data">Step 1: Generate Data</h2>
<p>Before we can smooth anything, we need some data to work with. Let’s create a synthetic dataset using the <code>rnorm</code> function and introduce a non-linear trend:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set seed for reproducibility</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate data</span></span>
<span id="cb1-5">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-6">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the raw data</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Raw Data with Non-linear Trend"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-02/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="step-2-perform-lowess-smoothing" class="level2">
<h2 class="anchored" data-anchor-id="step-2-perform-lowess-smoothing">Step 2: Perform Lowess Smoothing</h2>
<p>Now that we have our data, let’s apply Lowess smoothing using the <code>lowess</code> function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply Lowess smoothing</span></span>
<span id="cb2-2">smoothed_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lowess</span>(x, y)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the smoothed data</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lowess Smoothed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(smoothed_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Raw Data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lowess Smoothed"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-02/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="step-3-visualize-the-model-and-residuals" class="level2">
<h2 class="anchored" data-anchor-id="step-3-visualize-the-model-and-residuals">Step 3: Visualize the Model and Residuals</h2>
<p>To better understand our smoothed model, let’s visualize the fitted values along with the residuals:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get fitted values and residuals</span></span>
<span id="cb3-2">fitted_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> smoothed_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y</span>
<span id="cb3-3">residuals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fitted_values</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the model</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, fitted_values, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lowess Smoothed Model with Residuals"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(x, residuals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Smoothed Model"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-02/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="step-4-compare-different-models" class="level2">
<h2 class="anchored" data-anchor-id="step-4-compare-different-models">Step 4: Compare Different Models</h2>
<p>Now, let’s take our Lowess smoothing to the next level by experimenting with different smoother spans. We’ll create three models with varying spans and visualize the differences:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate three smoothed models with different spans</span></span>
<span id="cb4-2">model_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lowess</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">f =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb4-3">model_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lowess</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">f =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb4-4">model_3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lowess</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">f =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the original data</span></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comparison of Lowess Models"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the smoothed models</span></span>
<span id="cb4-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(model_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(model_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(model_3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a legend</span></span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Raw Data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model 2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model 3"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2024-01-02/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>And there you have it – a quick on performing Lowess smoothing in R! Feel free to tweak the parameters and explore the nuances of different models. Happy coding!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2024-01-02/index.html</guid>
  <pubDate>Tue, 02 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Unlocking the Power of Time: Transforming Data Frames into Time Series in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-12-29/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hey there, fellow R enthusiasts! Today, we’re diving into the realm of time series, where data dances along the temporal dimension. To join this rhythmic analysis, we’ll first learn how to convert our trusty data frames into time series objects—the heart of time-based exploration in R.</p>
</section>
<section id="ready-to-time-warp-lets-get-started" class="level1">
<h1>Ready to Time Warp? Let’s Get Started!</h1>
<section id="gather-your-data" class="level2">
<h2 class="anchored" data-anchor-id="gather-your-data">1. Gather Your Data</h2>
<p>Every journey begins with preparation. Here’s our sample data frame containing daily sales:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022-01-01'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,</span>
<span id="cb1-2">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sales =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
</section>
<section id="choose-your-time-series-destination" class="level2">
<h2 class="anchored" data-anchor-id="choose-your-time-series-destination">2. Choose Your Time Series Destination</h2>
<p>R offers two primary time series classes:</p>
<ul>
<li><strong>“ts”:</strong> Base R’s classic time series object, designed for regularly spaced data.</li>
<li><strong>“xts”:</strong> Part of the ‘xts’ package, offering enhanced flexibility and features.</li>
</ul>
</section>
<section id="embark-on-the-conversion-quest" class="level2">
<h2 class="anchored" data-anchor-id="embark-on-the-conversion-quest">3. Embark on the Conversion Quest</h2>
<p><strong>A. Transforming into “ts”:</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stats)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Package for 'ts' class</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unleash the time series magic!</span></span>
<span id="cb2-4">ts_sales <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sales, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frequency =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Daily data</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Admire your creation:</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(ts_sales)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Time Series:
Start = c(2022, 1) 
End = c(2022, 10) 
Frequency = 365 
 [1] 2728.713 3026.967 2769.227 2928.872 3401.730 3129.780 3303.479 3414.551
 [9] 3584.525 3922.348</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>ts()</code> function creates the time series object.</li>
<li><code>df$sales</code> specifies the data for conversion.</li>
<li><code>start = c(2022, 1)</code> sets the starting year and month.</li>
<li><code>frequency = 365</code> indicates daily observations (365 days per year).</li>
</ul>
<p><strong>B. Shaping into “xts”:</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(xts)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Package for 'xts' class</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Time to shine!</span></span>
<span id="cb4-4">xts_sales <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xts</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sales, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order.by =</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>date)</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Behold your masterpiece:</span></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(xts_sales)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>               [,1]
2022-01-01 2728.713
2022-01-02 3026.967
2022-01-03 2769.227
2022-01-04 2928.872
2022-01-05 3401.730
2022-01-06 3129.780
2022-01-07 3303.479
2022-01-08 3414.551
2022-01-09 3584.525
2022-01-10 3922.348</code></pre>
</div>
</div>
<p><strong>Explanation:</strong></p>
<ul>
<li><code>xts()</code> function constructs the time series object.</li>
<li><code>df$sales</code> provides the data.</li>
<li><code>order.by = df$date</code> sets the time-based ordering.</li>
</ul>
<p><strong>4. Your Time to Experiment!</strong></p>
<p>Now that you’ve mastered the conversion, unleash your creativity:</p>
<ul>
<li>Visualize trends with plots.</li>
<li>Forecast future values.</li>
<li>Analyze patterns and seasonality.</li>
<li>Decompose time series into components.</li>
<li>And much more!</li>
</ul>
<p>The possibilities are as boundless as time itself.</p>
<p><strong>Remember:</strong></p>
<ul>
<li>Choose the time series class that best suits your analysis needs.</li>
<li>Always ensure your data frame has a column with valid date or time values.</li>
<li>Explore the rich functionalities of R’s time series packages.</li>
</ul>
<p>Happy time series adventures!</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-12-29/index.html</guid>
  <pubDate>Fri, 29 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Unveiling the Time Traveler: Plotting Time Series in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-12-28/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p><strong>Ready to journey through time with R?</strong> Buckle up, because we’re about to explore the art of visualizing time-dependent data, known as time series analysis. Whether you’re tracking monthly sales patterns or analyzing yearly climate trends, R has your back with powerful tools to visualize these stories through time.</p>
<p><strong>Our Flight Plan:</strong></p>
<ol type="1">
<li><strong>Loading Up with Data:</strong> Grabbing our trusty dataset, AirPassengers.</li>
<li><strong>Taking Off with Base R:</strong> Creating a basic time series plot using base R functions.</li>
<li><strong>Soaring with ggplot2:</strong> Crafting a visually stunning time series plot using the ggplot2 library.</li>
<li><strong>Navigating Date Formatting:</strong> Customizing axis labels with scale_x_date() for clarity.</li>
<li><strong>Landing with Your Own Exploration:</strong> Encouraging you to take the controls and create your own time series plots!</li>
</ol>
<p><strong>1. Ready for Takeoff: Loading Data</strong></p>
<p>We’ll start by loading the built-in AirPassengers dataset, which chronicles monthly passenger totals from 1949 to 1960:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">AirPassengers</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
1949 112 118 132 129 121 135 148 148 136 119 104 118
1950 115 126 141 135 125 149 170 170 158 133 114 140
1951 145 150 178 163 172 178 199 199 184 162 146 166
1952 171 180 193 181 183 218 230 242 209 191 172 194
1953 196 196 236 235 229 243 264 272 237 211 180 201
1954 204 188 235 227 234 264 302 293 259 229 203 229
1955 242 233 267 269 270 315 364 347 312 274 237 278
1956 284 277 317 313 318 374 413 405 355 306 271 306
1957 315 301 356 348 355 422 465 467 404 347 305 336
1958 340 318 362 348 363 435 491 505 404 359 310 337
1959 360 342 406 396 420 472 548 559 463 407 362 405
1960 417 391 419 461 472 535 622 606 508 461 390 432</code></pre>
</div>
</div>
<p><strong>2. Base R: The Simple and Straightforward Route</strong></p>
<p>Base R offers a direct path to creating a time series plot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(AirPassengers)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-12-28/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This generates a basic line plot, revealing an upward trend in air passengers over time.</p>
<p><strong>3. ggplot2: The High-Flying, Visually Staggering Journey</strong></p>
<p>For more customization and visual appeal, we’ll turn to the ggplot2 library and the healthyR.ts library to first convert the AirPassengers Data set into a tibble:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(healthyR.ts)</span>
<span id="cb4-4"></span>
<span id="cb4-5">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ts_to_tbl</span>(AirPassengers)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date_col, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Monthly Air Passengers (1949-1960)"</span>,</span>
<span id="cb4-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>,</span>
<span id="cb4-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Passengers"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-12-28/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This creates a more refined plot with informative labels and a sleeker aesthetic.</p>
<p><strong>4. Mastering Time with scale_x_date()</strong></p>
<p>To fine-tune the x-axis date labels, ggplot2 offers the versatile scale_x_date() function. Let’s display years and abbreviated months:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date_col, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_date</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_labels =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%b %Y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Monthly Air Passengers (1949-1960)"</span>,</span>
<span id="cb5-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Passengers"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-12-28/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><strong>5. Your Turn to Pilot: Experiment and Explore!</strong></p>
<p>R is your playground for time series visualization! Try these challenges:</p>
<ul>
<li>Explore other time series datasets in R.</li>
<li>Customize plots further with colors, themes, and annotations.</li>
<li>Use scale_x_date() to display different date formats.</li>
<li>Combine multiple time series in a single plot.</li>
</ul>
<p>Unleash your creativity and uncover the captivating stories hidden within time series data! For a start here are some resources:</p>
<ul>
<li><a href="https://ggplot2.tidyverse.org/reference/scale_date.html">scale_x_date()</a></li>
</ul>
<p>The <code>scale_x_date()</code> functiontakes the following arguments:</p>
<ul>
<li>%d: Day as a number between 0 and 31</li>
<li>%a: Abbreviated weekday (e.g.&nbsp;“Tue”)</li>
<li>%A: Unabbreviated weekday (e.g.&nbsp;“Tuesday”)</li>
<li>%m: Month between 0 and 12</li>
<li>%b: Abbreviated month (e.g.&nbsp;“Jan”)</li>
<li>%B: Unabbreviated month (e.g.&nbsp;“January”)</li>
<li>%y: 2-digit year (e.g.&nbsp;“21”)</li>
<li>%Y: 4-digit year (e.g.&nbsp;“2021”)</li>
<li>%W: Week of the year between 0 and 52</li>
</ul>


</section>

 ]]></description>
  <category>rtip</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-12-28/index.html</guid>
  <pubDate>Thu, 28 Dec 2023 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
