{
  "hash": "c15660b71039336754252394c0b89914",
  "result": {
    "markdown": "---\ntitle: \"Filtering Rows in R Where Column Value is Between Two Values\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2024-03-01\"\ncategories: [code, rtip, operations]\n---\n\n\n# Introduction\n\nFiltering data frames in R is a common task in data analysis. Often we want to subset a data frame to only keep rows that meet certain criteria. A useful filtering technique is keeping rows where a column value falls between two specified values. \n\nIn this post, we'll walk through how to filter rows in R where a column value is between two values using base R syntax.\n\n## Filtering with bracket notation\n\nOne way to filter rows is by using bracket notation `[]` and specifying a logical vector. \n\nLet's create a sample data frame:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(\n  id = 1:10,\n  value = c(5, 3, 6, 9, 2, 4, 7, 1, 8, 10)\n)\n```\n:::\n\n\nWe can filter `df` to only keep rows where `value` is between 5 and 8 with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf[df$value >= 5 & df$value <= 8,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id value\n1  1     5\n3  3     6\n7  7     7\n9  9     8\n```\n:::\n:::\n\n\nThis filters for rows where `value` is greater than or equal to 5 `df$value >= 5` AND less than or equal to 8 `df$value <= 8`. The comma after the logical vector tells R to return the filtered rows.\n\n## Filtering with subset()\n\nAnother option is using the `subset()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsubset(df, value >= 5 & value <= 8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id value\n1  1     5\n3  3     6\n7  7     7\n9  9     8\n```\n:::\n:::\n\n\n`subset()` takes a data frame as the first argument, then a logical expression similar to the bracket notation.\n\n## Additional examples\n\nWe can filter on different columns and value ranges:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# id between 3 and 7\ndf[df$id >= 3 & df$id <= 7,] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id value\n3  3     6\n4  4     9\n5  5     2\n6  6     4\n7  7     7\n```\n:::\n\n```{.r .cell-code}\n# value less than 5\nsubset(df, value < 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id value\n2  2     3\n5  5     2\n6  6     4\n8  8     1\n```\n:::\n:::\n\n\nIt's also possible to filter rows outside a range by flipping the logical operators:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# id NOT between 3 and 7\ndf[!(df$id >= 3 & df$id <= 7),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   id value\n1   1     5\n2   2     3\n8   8     1\n9   9     8\n10 10    10\n```\n:::\n\n```{.r .cell-code}\n# value greater than 5  \nsubset(df, value > 5) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   id value\n3   3     6\n4   4     9\n7   7     7\n9   9     8\n10 10    10\n```\n:::\n:::\n\n\n## Summary\n\nFiltering data frames where a column is between two values is straightforward in R. The key steps are:\n\n- Use bracket notation `df[logical,]` or `subset(df, logical)`\n- Create a logical expression with `&` and `>=`, `<=` operators \n- Specify the column name and range of values to filter between\n\nI encourage you to try filtering data frames on your own! Subsetting by logical expressions is an important skill for efficient R programming.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}