{
  "hash": "1e2d4c0f093bb5bd56377785f2aec3ec",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Systematic Sampleing in R with Base R\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2024-08-05\"\ncategories: [code, rtip]\ntoc: TRUE\n---\n\n\n# Introduction\n\nIn this post, we will explore systematic sampling in R using base R functions. Systematic sampling is a technique where you select every \\(k^{th}\\) element from a list or dataset. This method is straightforward and useful when you want a representative sample without the complexity of more advanced sampling techniques.\n\nLet's dive into an example to understand how it works.\n\n# What is Systematic Sampling?\n\nSystematic sampling involves selecting every \\(k^{th}\\) element from a dataset after a random start. The value of \\(k\\) is calculated as:\n\n$$\nk = \\frac{N}{n}\n$$\n\nwhere \\(N\\) is the population size and \\(n\\) is the sample size.\n\n# Example: Sampling a Dataset\n\nImagine we have a dataset of 1000 elements, and we want to select a sample of 100 elements using systematic sampling.\n\n1.    **Generate a Dataset**\n\nFirst, let's create a dataset with 1000 elements.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # Setting seed for reproducibility, although with this \n               # example it doesn't matter\npopulation <- 1:1000\n```\n:::\n\n\nHere, `population` is a sequence of numbers from 1 to 1000.\n\n2.    **Define Sample Size**\n\nDefine the number of elements you want to sample.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_size <- 100\n```\n:::\n\n\n3.    **Calculate Interval \\(k\\)**\n\nCalculate the interval \\(k\\) as the ratio of the population size to the sample size.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk <- length(population) / sample_size\n```\n:::\n\n\n4.    **Random Start Point**\n\nChoose a random starting point between 1 and \\(k\\).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstart <- sample(1:k, 1)\n```\n:::\n\n\n5.    **Select Every \\(k^{th}\\) Element**\n\nUse a sequence to select every \\(k^{th}\\) element starting from the chosen start point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsystematic_sample <- population[seq(start, length(population), by = k)]\n```\n:::\n\n\n6.    **Check the Sample**\n\nPrint the first few elements of the sample to check.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(systematic_sample)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  3 13 23 33 43 53\n```\n\n\n:::\n:::\n\n\nHere is the complete code in one block:\n\n```r\n# Step 1: Generate a Dataset\nset.seed(123)  # Setting seed for reproducibility\npopulation <- 1:1000\n\n# Step 2: Define Sample Size\nsample_size <- 100\n\n# Step 3: Calculate Interval k\nk <- length(population) / sample_size\n\n# Step 4: Random Start Point\nstart <- sample(1:k, 1)\n\n# Step 5: Select Every k-th Element\nsystematic_sample <- population[seq(start, length(population), by = k)]\n\n# Step 6: Check the Sample\nhead(systematic_sample)\n```\n\n# Try It Yourself!\n\nSystematic sampling is a simple yet powerful technique. By following the steps above, you can apply it to your datasets. Experiment with different sample sizes and starting points to see how the samples vary. This method can be particularly useful when dealing with large datasets where random sampling might be cumbersome.\n\nGive it a go and see how systematic sampling can be a handy tool in your data analysis toolkit!\n\n---\n\nHappy Coding!\n\n\n```{=html}\n<script src=\"https://giscus.app/client.js\"\n        data-repo=\"spsanderson/steveondata\"\n        data-repo-id=\"R_kgDOIIxnLw\"\n        data-category=\"Comments\"\n        data-category-id=\"DIC_kwDOIIxnL84ChTk8\"\n        data-mapping=\"url\"\n        data-strict=\"0\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"0\"\n        data-input-position=\"top\"\n        data-theme=\"dark\"\n        data-lang=\"en\"\n        data-loading=\"lazy\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}