{
  "hash": "ddb2ad53d8a670310ba1185741ed2c6f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cluster Sampling in R: A Simple Guide\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2024-08-02\"\ncategories: [code, rtip]\ntoc: TRUE\n---\n\n\n# Introduction\n\nCluster sampling is a useful technique when dealing with large datasets spread across different groups or clusters. It involves dividing the population into clusters, randomly selecting some clusters, and then sampling all or some members from these selected clusters. This method can save time and resources compared to simple random sampling.\n\nIn this post, we'll walk through how to perform cluster sampling in R. We'll use a sample dataset and break down the code step-by-step. By the end, you'll have a clear understanding of how to implement cluster sampling in your projects.\n\n## Example Scenario\n\nLet's say we have a dataset of students from different schools, and we want to estimate the average test score. Sampling every student would be too time-consuming, so we'll use cluster sampling.\n\n### Step 1: Create a Sample Dataset\n\nFirst, let's create a sample dataset to work with.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Create sample data\nschools <- data.frame(\n  student_id = 1:1000,\n  school_id = rep(1:10, each = 100),\n  test_score = rnorm(1000, mean = 75, sd = 10)\n)\n\n# Display the first few rows of the dataset\nhead(schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  student_id school_id test_score\n1          1         1   69.39524\n2          2         1   72.69823\n3          3         1   90.58708\n4          4         1   75.70508\n5          5         1   76.29288\n6          6         1   92.15065\n```\n\n\n:::\n:::\n\n\n### Step 2: Divide the Population into Clusters\n\nOur population is already divided into clusters by `school_id`. Each school represents a cluster.\n\n### Step 3: Randomly Select Clusters\n\nNext, we'll randomly select some clusters. Let's say we want to select 3 out of the 10 schools.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of clusters to select\nnum_clusters <- 3\n\n# Randomly select clusters\nselected_clusters <- sample(unique(schools$school_id), num_clusters)\n\n# Display selected clusters\nselected_clusters\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  1 10  2\n```\n\n\n:::\n:::\n\n\n### Step 4: Sample Members from Selected Clusters\n\nNow, we'll sample students from the selected schools.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the dataset to include only the selected clusters\nsampled_data <- schools %>% filter(school_id %in% selected_clusters)\n\n# Display the first few rows of the sampled data\nhead(sampled_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  student_id school_id test_score\n1          1         1   69.39524\n2          2         1   72.69823\n3          3         1   90.58708\n4          4         1   75.70508\n5          5         1   76.29288\n6          6         1   92.15065\n```\n\n\n:::\n:::\n\n\n### Step 5: Analyze the Sampled Data\n\nFinally, we can analyze the sampled data to estimate the average test score.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the mean test score\nmean_test_score <- mean(sampled_data$test_score)\n\n# Display the mean test score\nmean_test_score\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 74.87889\n```\n\n\n:::\n:::\n\n\n## Explanation of Code Blocks\n\n-   **Step 1**: We create a sample dataset with 1000 students, each belonging to one of 10 schools. Each student has a test score.\n-   **Step 2**: The `school_id` column naturally divides our dataset into clusters.\n-   **Step 3**: We randomly select 3 out of the 10 schools using the `sample` function.\n-   **Step 4**: We filter the dataset to include only students from the selected schools.\n-   **Step 5**: We calculate the mean test score of the sampled students to estimate the overall average.\n\n# Conclusion\n\nCluster sampling is a powerful method for efficiently sampling large populations. By dividing the population into clusters and sampling within those clusters, you can obtain reliable estimates with less effort.\n\nFeel free to try this method on your own datasets. Experiment with different numbers of clusters and sample sizes to see how it affects your results. \n\n---\n\nHappy coding!\n\nIf you have any questions or need further clarification, drop a comment below!\n\n\n```{=html}\n<script src=\"https://giscus.app/client.js\"\n        data-repo=\"spsanderson/steveondata\"\n        data-repo-id=\"R_kgDOIIxnLw\"\n        data-category=\"Comments\"\n        data-category-id=\"DIC_kwDOIIxnL84ChTk8\"\n        data-mapping=\"url\"\n        data-strict=\"0\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"0\"\n        data-input-position=\"top\"\n        data-theme=\"dark\"\n        data-lang=\"en\"\n        data-loading=\"lazy\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}