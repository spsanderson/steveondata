{
  "hash": "748d7d86a9b3eeeb5f72c98c995358de",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploring Linear Models with R and Exporting to Excel\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2024-07-07\"\ncategories: [code, rtip, excel]\ntoc: TRUE\n---\n\n\n\n# Introduction\n\nToday, we’re going to walk through an example of fitting a linear model in R, summarizing the results, and exporting the findings to an Excel file. This workflow is useful for documenting and sharing your statistical analysis.\n\nLet’s break down the code step by step.\n\n# Example\n\n## Step 1: Loading the Necessary Libraries\n\nFirst, we need to load the `openxlsx` library, which helps us create and manipulate Excel files. If you don’t have it installed, you can get it using `install.packages(\"openxlsx\")`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\n```\n:::\n\nThis line of code loads the `openxlsx` library into R so we can use its functions later.\n\n## Step 2: Fitting the Linear Model\n\nNext, we fit a linear model using the built-in `mtcars` dataset. We model `mpg` (miles per gallon) based on all other available variables in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(mpg ~ ., data = mtcars)\n```\n:::\n\nHere, `lm` stands for linear model. The `mpg ~ .` part means we want to predict `mpg` using all other variables in the `mtcars` dataset.\n\n## Step 3: Summarizing the Model\n\nWe obtain a summary of our linear model, which includes details like coefficients, R-squared values, and the F-statistic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_summary <- summary(model)\n```\n:::\n\nThis code generates a summary of the linear model we just created, giving us important statistics about the model's performance.\n\n## Step 4: Extracting Key Components\n\nWe extract essential parts of the summary for easy access and to organize them in our Excel file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoefficients <- model_summary$coefficients\nr_squared <- model_summary$r.squared\nadj_r_squared <- model_summary$adj.r.squared\nf_statistic <- model_summary$fstatistic\np_value <- pf(\n  f_statistic[1], \n  f_statistic[2], \n  f_statistic[3], \n  lower.tail = FALSE\n  )\nmodel_formula <- paste0(\n  model_summary[[\"terms\"]][[2]], \" \", \n  model_summary[[\"terms\"]][[1]], \" \",\n  model_summary[[\"terms\"]])[[3]]\n```\n:::\n\n- `coefficients`: The estimated coefficients of the model.\n- `r_squared`: How well the model explains the variability of the data.\n- `adj_r_squared`: Adjusted version of R-squared for the number of predictors.\n- `f_statistic`: Overall significance of the model.\n- `p_value`: Probability value indicating the significance of the F-statistic.\n- `model_formula`: The formula used to fit the model.\n\n## Step 5: Creating and Populating the Workbook\n\nNow, we create a new Excel workbook and add a worksheet to it. We then write our extracted model summary components to this worksheet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb <- createWorkbook()\naddWorksheet(wb, \"Model Summary\")\n\nwriteData(wb, \"Model Summary\", \"Coefficients\", \n          startRow = 1, startCol = 1)\nwriteData(wb, \"Model Summary\", coefficients, startRow = 2, \n          startCol = 1, rowNames = TRUE)\n\nwriteData(wb, \"Model Summary\", \"R-Squared\", \n          startRow = 2 + nrow(coefficients) + 2, startCol = 1)\nwriteData(wb, \"Model Summary\", r_squared, \n          startRow = 2 + nrow(coefficients) + 2, startCol = 2)\n\nwriteData(wb, \"Model Summary\", \"Adjusted R-Squared\", \n          startRow = 2 + nrow(coefficients) + 3, startCol = 1)\nwriteData(wb, \"Model Summary\", adj_r_squared, \n          startRow = 2 + nrow(coefficients) + 3, startCol = 2)\n\nwriteData(wb, \"Model Summary\", \"F-Statistic\", \n          startRow = 2 + nrow(coefficients) + 4, startCol = 1)\nwriteData(wb, \"Model Summary\", f_statistic[1], \n          startRow = 2 + nrow(coefficients) + 4, startCol = 2)\n\nwriteData(wb, \"Model Summary\", \"p-Value\", \n          startRow = 2 + nrow(coefficients) + 5, startCol = 1)\nwriteData(wb, \"Model Summary\", p_value, \n          startRow = 2 + nrow(coefficients) + 5, startCol = 2)\n\nwriteData(wb, \"Model Summary\", \"Model Formula\", \n          startRow = 2 + nrow(coefficients) + 6, startCol = 1)\nwriteData(wb, \"Model Summary\", model_formula, \n          startRow = 2 + nrow(coefficients) + 6, startCol = 2)\n```\n:::\n\n- `createWorkbook()`: Creates a new Excel workbook.\n- `addWorksheet(wb, \"Model Summary\")`: Adds a new sheet named \"Model Summary\" to the workbook.\n- `writeData`: Writes data to the specified location in the sheet. Here, we write various parts of the model summary in different rows and columns.\n\n## Step 6: Saving the Workbook\n\nFinally, we save our workbook to a file named `lm_model_summary.xlsx`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveWorkbook(\n  wb, \n  file = paste0(getwd(),\"/lm_model_summary.xlsx\"), \n  overwrite = TRUE\n  )\n```\n:::\n\nThis line saves the workbook to your working directory with the specified file name.\n\n# Conclusion\n\nThis example shows how to fit a linear model in R, extract meaningful summary statistics, and save those results in an Excel file. It’s a simple yet powerful way to document your analyses and share them with others.\n\nFeel free to modify the code to fit your own datasets and models. Experimenting with different variables and models can provide deeper insights into your data. Happy coding!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}