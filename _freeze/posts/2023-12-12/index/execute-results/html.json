{
  "hash": "64099c0e63bdb532a8983fe70b49f366",
  "result": {
    "markdown": "---\ntitle: \"Conquering Unequal Variance with Weighted Least Squares in R: A Practical Guide\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-12-12\"\ncategories: [rtip, regression]\n---\n\n\n\n# Introduction\n\nTired of your least-squares regression model giving wonky results because some data points shout louder than others? Meet Weighted Least Squares (WLS), the superhero of regression, ready to tackle unequal variance (heteroscedasticity) and give your model the justice it deserves! Today, we'll dive into the world of WLS in R, using base functions for maximum transparency. Buckle up, data warriors!\n\n# Example\n\n**The Scenario:** Imagine studying the relationship between exam scores and study hours. But wait, some students took the test multiple times, inflating their data points! This unequal variance can skew your ordinary least squares (OLS) model, making it unreliable. WLS to the rescue!\n\n## Steps\n\n**Step 1: Gathering the Troops (Data):**\n\nLet's create some simulated data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate exam scores and study hours\nset.seed(123)\nscores <- rnorm(100, mean = 70, sd = 10)\nhours <- rnorm(100, mean = 20, sd = 5)\nhours <- rnorm(100, mean = 0, sd = hours * 0.2) # Add heteroscedasticity\n\n# Create a data frame\ndata <- data.frame(scores, hours)\n```\n:::\n\n\n**Step 2: Visualizing the Battlefield:**\n\nA scatter plot is our trusty map:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(data$hours, data$scores)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nDo you see those clusters of high-scoring students with more study hours? They're the loud ones skewing the OLS line.\n\n**Step 3: Building the WLS Wall:**\n\nIt's time to define our weights. We want to give less weight to observations with high variance (those loud students) and more weight to those with low variance. Here's a simple approach:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate inverse of variance\nweights <- 1 / (data$hours)^2\n\n# Fit WLS model\nwls_model <- lm(scores ~ hours, weights = weights, data = data)\n```\n:::\n\n\n**Step 4: Inspecting the Model's Performance:**\n\nLet's see if WLS silenced the loud ones:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(wls_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = scores ~ hours, data = data, weights = weights)\n\nWeighted Residuals:\n    Min      1Q  Median      3Q     Max \n-75.854  -1.456   0.927   3.509  57.472 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   68.524      0.632 108.421   <2e-16 ***\nhours         -1.085      1.480  -0.733    0.465    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.65 on 98 degrees of freedom\nMultiple R-squared:  0.00545,\tAdjusted R-squared:  -0.004698 \nF-statistic: 0.537 on 1 and 98 DF,  p-value: 0.4654\n```\n:::\n:::\n\n\nCompare this summary to your OLS model's. Do the coefficients and residuals look more sensible?\n\n**Step 5: Visualizing the Conquered Land:**\n\nTime to see if WLS straightened the line:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(data$hours, data$scores)\nlines(data$hours, wls_model$fitted, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nNotice how the red WLS line now passes closer to the majority of data points, unlike the blue OLS line that chased the loud ones.\n\n**Step 6: Residuals: The Echoes of Battle:**\n\nLet's see if the residuals (errors) are under control:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(data$hours, wls_model$residuals)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nA random scatterplot of residuals is a good sign! No more funky patterns indicating heteroscedasticity.\n\n**The Victory Lap:**\n\nWLS has restored justice to your regression model! Remember, this is just a basic example. You can customize your weights based on your specific data and needs.\n\n**Now it's your turn!** Try WLS on your own data and see the magic unfold. Remember, data analysis is an adventure, and WLS is your trusty steed. Ride on, data warrior!\n\n**Bonus Tip:** Check out the `lmtest` and `sandwich` packages for even more advanced WLS analysis.\n\nHappy coding!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}