{
  "hash": "1ffeb7bde94e2659a3eb950d020903ef",
  "result": {
    "markdown": "---\ntitle: \"Unlocking the Power of Prediction Intervals in R: A Practical Guide\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-11-13\"\ncategories: [rtip]\n---\n\n\n# Introduction\n\nPrediction intervals are a powerful tool for understanding the uncertainty of your predictions. They allow you to specify a range of values within which you are confident that the true value will fall. This can be useful for many tasks, such as setting realistic goals, making informed decisions, and communicating your findings to others.\n\nIn this blog post, we will show you how to create a prediction interval in R using the `mtcars` dataset. The `mtcars` dataset is a built-in dataset in R that contains information about fuel economy, weight, displacement, and other characteristics of 32 cars.\n\n# Creating a Prediction Interval\n\nTo create a prediction interval in R, we can use the `predict()` function. The `predict()` function takes a fitted model and a new dataset as input and returns the predicted values for the new dataset.\n\nWe can also use the `predict()` function to calculate prediction intervals. To do this, we need to specify the `interval` argument. The `interval` argument can take two values: `confidence` and `prediction`.\n\nA confidence interval is the range of values within which we are confident that the true mean of the population will fall. A prediction interval is the range of values within which we are confident that the true value of a new observation will fall.\n\nTo create a prediction interval for the `mpg` variable in the `mtcars` dataset, we can use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit a linear model\nmodel <- lm(mpg ~ disp, data = mtcars)\n\n# Create a prediction interval\nprediction_intervals <- predict(\n  model, \n  newdata = mtcars, \n  interval = \"prediction\", \n  level = 0.95\n  )\n\n# Print the prediction interval\nhead(prediction_intervals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       fit       lwr      upr\nMazda RX4         23.00544 16.227868 29.78300\nMazda RX4 Wag     23.00544 16.227868 29.78300\nDatsun 710        25.14862 18.302683 31.99456\nHornet 4 Drive    18.96635 12.217933 25.71477\nHornet Sportabout 14.76241  7.905308 21.61952\nValiant           20.32645 13.582915 27.06999\n```\n:::\n:::\n\n\nThe prediction interval shows that we are 95% confident that the true `mpg` value for a new car with a given displacement will fall within the range specified by the `lwr` and `upr` columns.\n\n# Visualize\n\nFirst lets bind the data together with `cbind()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_res <- cbind(mtcars, prediction_intervals)\n\nhead(full_res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb      fit\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 23.00544\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 23.00544\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 25.14862\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 18.96635\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 14.76241\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 20.32645\n                        lwr      upr\nMazda RX4         16.227868 29.78300\nMazda RX4 Wag     16.227868 29.78300\nDatsun 710        18.302683 31.99456\nHornet 4 Drive    12.217933 25.71477\nHornet Sportabout  7.905308 21.61952\nValiant           13.582915 27.06999\n```\n:::\n:::\n\n\nNow let's plot the actual, the fitted and the prediction confidence bands.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nfull_res |>\n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_point(aes(y = fit), col = \"steelblue\", size = 2.5) +\n  geom_line(aes(y = fit)) +\n  geom_line(aes(y = lwr), linetype = \"dashed\", col = \"red\") +\n  geom_line(aes(y = upr), linetype = \"dashed\", col = \"red\") +\n  theme_minimal() +\n  labs(\n    title = \"mpg ~ disp, data = mtcars\",\n    subtitle = \"With Prediction Intervals\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nAbove we are capturing the prediction interval which gives us the uncertainty around a single point, whereas the confidence interval gives us the uncertainty around the mean predicted values. This means that the prediction interval will always be wider than the confidence interval for the same value.\n\n# Trying It Out Yourself\n\nNow it's your turn to try out creating a prediction interval in R. Here are some ideas:\n\n* Try creating a prediction interval for a different variable in the `mtcars` dataset, such as `wt` or `hp`.\n* Try creating a prediction interval for a variable in a different dataset.\n* Try creating a prediction interval for a more complex model, such as a multiple linear regression model or a logistic regression model.\n\n# Conclusion\n\nCreating prediction intervals in R is a straightforward process. By using the `predict()` function, you can easily calculate prediction intervals for any fitted model and any new dataset. This can be a valuable tool for understanding the uncertainty of your predictions and making more informed decisions.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}