{
  "hash": "4ce3f30ffa461e73c8622d53697b6e40",
  "result": {
    "markdown": "---\ntitle: \"Mastering Rows: Selecting by Index in R\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2024-04-11\"\ncategories: [code, rtip, operations]\n---\n\n\n# Introduction\n\nLet's jump into data manipulation with R! Selecting specific rows from our datasets is an important skill. Today, we'll focus on subsetting rows by index, using the trusty square brackets (`[]`).\n\nFirst, we'll load a dataset containing car characteristics:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars.data <- mtcars\n```\n:::\n\n\nThis code loads the `mtcars` dataset (containing car data) into a new variable, `mtcars.data`. Now, we'll explore how to target specific rows.\n\n# Examples\n\n## Example 1: Selecting a Single Row by Index\n\nImagine you want to analyze the fuel efficiency (miles per gallon) of a particular car. Here's how to grab a single row by its index (row number):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select the 5th row (remember indexing starts from 1!)\nspecific.car <- mtcars.data[5,]\nspecific.car\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mpg cyl disp  hp drat   wt  qsec vs am gear carb\nHornet Sportabout 18.7   8  360 175 3.15 3.44 17.02  0  0    3    2\n```\n:::\n:::\n\n\n### Explanation:\n\n- `mtcars.data`: This is our data frame, containing all the car information.\n- `[]`: These are the square brackets, used for subsetting.\n- `5`: This is the index of the row we want. Since indexing starts from 1, the 5th row will be selected.\n- `,`: The comma tells R to select all columns (everything) from that row.\n\n**Try it yourself!** Select the 10th row and see what car it represents.\n\n## Example 2: Selecting Multiple Rows by Index\n\nLet's say you're interested in comparing fuel efficiency (miles per gallon) of a few specific cars. We can use a vector of indices to grab multiple rows at once:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select the 3rd, 7th, and 12th rows\nfew.cars <- mtcars.data[c(3, 7, 12),]\nfew.cars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            mpg cyl  disp  hp drat   wt  qsec vs am gear carb\nDatsun 710 22.8   4 108.0  93 3.85 2.32 18.61  1  1    4    1\nDuster 360 14.3   8 360.0 245 3.21 3.57 15.84  0  0    3    4\nMerc 450SE 16.4   8 275.8 180 3.07 4.07 17.40  0  0    3    3\n```\n:::\n:::\n\n\n### Explanation:\n\n- We use `c()` to create a vector containing the desired row indices: 3, 7, and 12.\n- Everything else remains the same as the previous example.\n\n**Challenge yourself!** Create a vector to select the last 5 rows and analyze their horsepower.\n\n## Example 3: Selecting Rows Using a Range of Indices\n\nSometimes, you want to analyze a group of consecutive cars. Here's how to select a range using the colon (`:`) operator:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select rows from 8 to 15 (inclusive)\ncar.slice <- mtcars.data[8:15,]\ncar.slice\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    mpg cyl  disp  hp drat   wt  qsec vs am gear carb\nMerc 240D          24.4   4 146.7  62 3.69 3.19 20.00  1  0    4    2\nMerc 230           22.8   4 140.8  95 3.92 3.15 22.90  1  0    4    2\nMerc 280           19.2   6 167.6 123 3.92 3.44 18.30  1  0    4    4\nMerc 280C          17.8   6 167.6 123 3.92 3.44 18.90  1  0    4    4\nMerc 450SE         16.4   8 275.8 180 3.07 4.07 17.40  0  0    3    3\nMerc 450SL         17.3   8 275.8 180 3.07 3.73 17.60  0  0    3    3\nMerc 450SLC        15.2   8 275.8 180 3.07 3.78 18.00  0  0    3    3\nCadillac Fleetwood 10.4   8 472.0 205 2.93 5.25 17.98  0  0    3    4\n```\n:::\n:::\n\n\n### Explanation:\n\n- `8:15`: This specifies the range of rows we want. Here, we select from row 8 (inclusive) to row 15 (inclusive).\n\n**Now it's your turn!** Select rows 1 to 10 and explore the distribution of the number of cylinders.\n\nRemember, practice is key! Experiment with different indices and ranges to become comfortable with subsetting rows in R. As you work with more datasets, you'll master these techniques and become a data wrangling pro.\n\nHappy coding!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}