{
  "hash": "5cb92e6b8d387d1913b1ec02ffde397c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"An Introduction to healthyR\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2024-06-13\"\ncategories: [code, rtip, healthyr]\ntoc: TRUE\n---\n\n\n# Introduction\n\nThis article will introduce you to the `healthyR` package. `healthyR` is a package that provides functions for analyzing and visualizing health-related data. It is designed to make it easier for health professionals and researchers to work with health data in R. It is an experimental package that is still under active development, so some functions may change in the future along with the package structure and scope.\n\nUnfortunately, the package needs some love and attention. Which I am trying to give it. Given that information, I will be updating the package to include more functions and improve the existing ones. I will also be updating the documentation and adding more examples to help users get started with the package.\n\nSo let's get started!\n\n# Installation\n\nYou can easily install the `healthyR` package from CRAN or GitHub if you want to live in dev land.\n\n```r\ninstall.packages(\"healthyR\")\n```\n\nOr alternatively:\n\n```r\n# install.packages(\"devtools\")\ndevtools::install_github(\"spsanderson/healthyR\")\n```\n\n# Getting Started\n\n## The Goal\n\nThe ultimate goal really of this package is to provide a set of functions that are easy to understand and follow. The functions should be able to take in data, process it, and output results in a way that is easy to understand and interpret. The package should also provide functions for visualizing the data in a way that is easy to understand and interpret. In healthycare, at least in my experience there are a great many small rural hospitals that do not have the resources to hire a data scientist or a statistician. This package and in fact the entire `healthyverse` suite are being designed to help those hospitals and other health organizations that may not have the resources to hire a data scientist or statistician.\n\nThe only way anyone can improve is if they have their data and can then in turn analyze and interpret that data. This package is designed to help with that in some short way for now.\n\nLet's go through some examples. To do this we will also load in my `healthyR.data` package as it comes with a standard dataset that we can use to demonstrate the functions in `healthyR` and a host of other issues.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(healthyR.data)\nlibrary(healthyR)\nlibrary(healthyR.data)\nlibrary(tidyverse)\nlibrary(DT)\n```\n:::\n\n\nNow let's get a list of all of the functions that are exposed via the `healthyR` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Functions and their arguments for healthyR\n\npat <- c(\"%>%\",\":=\",\"as_label\",\"as_name\",\"enquo\",\"enquos\",\"expr\",\n         \"dx_cc_mapping\",\"px_cc_mapping\",\"sym\",\"syms\")\n\ntibble(fns = ls.str(\"package:healthyR\")) |>\n  filter(!fns %in% pat) |>\n  mutate(params = purrr::map(fns, formalArgs)) |> \n  group_by(fns) |> \n  mutate(func_with_params = toString(params)) |>\n  mutate(\n    func_with_params = ifelse(\n      str_detect(\n        func_with_params, \"\\\\(\"), \n      paste0(fns, func_with_params), \n      paste0(fns, \"(\", func_with_params, \")\")\n    )) |>\n  select(fns, func_with_params) |>\n  mutate(fns = as.factor(fns)) |>\n  datatable(\n    #class = 'cell-boarder-stripe',\n    colnames = c(\"Function\", \"Full Call\"),\n    options = list(\n      autowidth = TRUE,\n      pageLength = 10\n    )\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-865eeaa56444eefe3c31\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-865eeaa56444eefe3c31\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\"],[\"category_counts_tbl\",\"color_blind\",\"diverging_bar_plt\",\"diverging_lollipop_plt\",\"gartner_magic_chart_plt\",\"hr_scale_color_colorblind\",\"hr_scale_fill_colorblind\",\"los_ra_index_plt\",\"los_ra_index_summary_tbl\",\"named_item_list\",\"opt_bin\",\"save_to_excel\",\"service_line_augment\",\"service_line_vec\",\"sql_left\",\"sql_mid\",\"sql_right\",\"top_n_tbl\",\"ts_alos_plt\",\"ts_census_los_daily_tbl\",\"ts_median_excess_plt\",\"ts_plt\",\"ts_readmit_rate_plt\",\"ts_signature_tbl\"],[\"category_counts_tblc(\\\".data\\\", \\\".count_col\\\", \\\".arrange_value\\\", \\\"...\\\")\",\"color_blind(NULL)\",\"diverging_bar_pltc(\\\".data\\\", \\\".x_axis\\\", \\\".y_axis\\\", \\\".fill_col\\\", \\\".plot_title\\\", \\\".plot_subtitle\\\", \\\".plot_caption\\\", \\\".interactive\\\")\",\"diverging_lollipop_pltc(\\\".data\\\", \\\".x_axis\\\", \\\".y_axis\\\", \\\".plot_title\\\", \\\".plot_subtitle\\\", \\\".plot_caption\\\", \\\".interactive\\\")\",\"gartner_magic_chart_pltc(\\\".data\\\", \\\".x_col\\\", \\\".y_col\\\", \\\".point_size_col\\\", \\\".y_lab\\\", \\\".x_lab\\\", \\\".plt_title\\\", \\\".tl_lbl\\\", \\\".tr_lbl\\\", \\\".br_lbl\\\", \\\".bl_lbl\\\")\",\"hr_scale_color_colorblindc(\\\"...\\\", \\\"theme\\\")\",\"hr_scale_fill_colorblindc(\\\"...\\\", \\\"theme\\\")\",\"los_ra_index_plt(.data)\",\"los_ra_index_summary_tblc(\\\".data\\\", \\\".max_los\\\", \\\".alos_col\\\", \\\".elos_col\\\", \\\".readmit_rate\\\", \\\".readmit_bench\\\")\",\"named_item_listc(\\\".data\\\", \\\".group_col\\\")\",\"opt_binc(\\\".data\\\", \\\".value_col\\\", \\\".iters\\\")\",\"save_to_excelc(\\\".data\\\", \\\".file_name\\\")\",\"service_line_augmentc(\\\".data\\\", \\\".dx_col\\\", \\\".px_col\\\", \\\".drg_col\\\")\",\"service_line_vecc(\\\".data\\\", \\\".dx_col\\\", \\\".px_col\\\", \\\".drg_col\\\")\",\"sql_leftc(\\\".text\\\", \\\".num_char\\\")\",\"sql_midc(\\\".text\\\", \\\".start_num\\\", \\\".num_char\\\")\",\"sql_rightc(\\\".text\\\", \\\".num_char\\\")\",\"top_n_tblc(\\\".data\\\", \\\".n_records\\\", \\\".arrange_value\\\", \\\"...\\\")\",\"ts_alos_pltc(\\\".data\\\", \\\".date_col\\\", \\\".value_col\\\", \\\".by_grouping\\\", \\\".interactive\\\")\",\"ts_census_los_daily_tblc(\\\".data\\\", \\\".keep_nulls_only\\\", \\\".start_date_col\\\", \\\".end_date_col\\\", \\\".by_time\\\")\",\"ts_median_excess_pltc(\\\".data\\\", \\\".date_col\\\", \\\".value_col\\\", \\\".x_axis\\\", \\\".ggplot_group_var\\\", \\\".years_back\\\")\",\"ts_pltc(\\\".data\\\", \\\".date_col\\\", \\\".value_col\\\", \\\".color_col\\\", \\\".facet_col\\\", \\\".facet_ncol\\\", \\\".interactive\\\")\",\"ts_readmit_rate_pltc(\\\".data\\\", \\\".date_col\\\", \\\".value_col\\\", \\\".by_grouping\\\", \\\".interactive\\\")\",\"ts_signature_tblc(\\\".data\\\", \\\".date_col\\\", \\\".pad_time\\\", \\\"...\\\")\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Function<\\/th>\\n      <th>Full Call<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"autowidth\":true,\"pageLength\":10,\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"fns\",\"targets\":1},{\"name\":\"func_with_params\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nYou can see the reference page for all of the available functions here: [healthyR Reference](https://www.spsanderson.com/healthyR/reference/index.html)\n\nLet's get started with a first example.\n\n# Examples\n\n## Example 1: Median Excess Lenght of Stay\n\nIn this example, we will calculate the median excess length of stay for patients in the `inpatient` dataset. The excess length of stay is the difference between the actual length of stay and the expected length of stay for a patient. The expected length of stay is calculated based on the patient's diagnosis-related group (DRG) and other factors.\n\nFor providers and hospitals, the excess length of stay is an important metric because it can help identify patients who are at risk of complications or other adverse outcomes. By identifying these patients early, providers can take steps to prevent complications and improve patient outcomes. Afterall, hospitals are full of sick people, as hard as they work to keep environments sterile one must remember that when your at your worst, you go to a hospital, so it is natural that complications can arise.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the inpatient dataset\ndf <- healthyR_data |>\n  filter(ip_op_flag == \"I\") |>\n  select(visit_id, visit_end_date_time, length_of_stay)  |>\n  mutate(visit_end_date = as.Date(\n    visit_end_date_time, format = \"%Y-%m-%d\"\n    )) |>\n  select(-visit_end_date_time, visit_id, visit_end_date, length_of_stay) |>\n  filter(visit_end_date >= \"2012-01-01\",\n         visit_end_date < \"2020-01-01\") |>\n  arrange(visit_end_date)\n\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 105,577\nColumns: 3\n$ visit_id       <chr> \"1283065398\", \"1171004549\", \"1331016562\", \"1970894633\",…\n$ length_of_stay <dbl> 6, 1, 3, 2, 3, 5, 21, 4, 2, 4, 1, 9, 1, 2, 2, 1, 9, 1, …\n$ visit_end_date <date> 2012-01-01, 2012-01-01, 2012-01-01, 2012-01-01, 2012-0…\n```\n\n\n:::\n:::\n\n\nNow let's use the `ts_alos_plt()` function to see what the average length of stay (ALOS) looks like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_alos_plt(\n  df, \n  .date_col = visit_end_date, \n  .value_col = length_of_stay, \n  .by_grouping = \"month\",\n  .interactive = TRUE\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-adf8d80b595dc0facee0\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-adf8d80b595dc0facee0\">{\"x\":{\"data\":[{\"x\":[15340,15371,15400,15431,15461,15492,15522,15553,15584,15614,15645,15675,15706,15737,15765,15796,15826,15857,15887,15918,15949,15979,16010,16040,16071,16102,16130,16161,16191,16222,16252,16283,16314,16344,16375,16405,16436,16467,16495,16526,16556,16587,16617,16648,16679,16709,16740,16770,16801,16832,16861,16892,16922,16953,16983,17014,17045,17075,17106,17136,17167,17198,17226,17257,17287,17318,17348,17379,17410,17440,17471,17501,17532,17563,17591,17622,17652,17683,17713,17744,17775,17805,17836,17866,17897,17928,17956,17987,18017,18048,18078,18109,18140,18170,18201,18231],\"y\":[5.8174545454545452,6.0984682713347924,5.5712418300653592,5.1349862258953172,5.3837288135593218,5.0136887608069163,5.4304902619207525,5.1621438263229305,5.39921568627451,5.9387291981845687,5.9881217520415735,5.7531055900621118,6.1871850251979845,6.3573264781491003,6.3512429831595831,6.0861393891934217,5.834848484848485,5.8884364820846908,6.212538226299694,5.921962992759453,6.0267558528428093,6.2468354430379751,6.2999104744852286,6.8632846087704209,6.4965727341964969,6.1134113411341131,6.3761782347900597,6.150284321689683,5.8003314001657005,6.0565878378378377,5.8974776240846216,6.2817631806395848,6.0070921985815602,6.3234234234234235,6.0832455216016861,6.347975882859604,6.7866894197952217,7.4358178053830226,6.3818938605619149,5.9781312127236577,6.1231079717457115,6.0391425908667289,5.9028871391076114,6.1858407079646014,6.1479736098020732,6.4668483197093547,6.1529051987767582,6.159027128157156,6.5577464788732396,6.58469387755102,6.5955156950672649,6.2016048144433302,6.9076638965835642,6.2490310077519382,6.3991683991683992,6.8972809667673713,6.4462540716612375,6.9769484083424809,6.7909482758620694,7.0699029126213588,7.2341417910447765,6.4232409381663116,6.9935004642525538,5.9188345473465143,6.1037463976945245,6.3396226415094343,6.0982318271119844,5.962550607287449,5.9781529294935449,6.6333002973240829,5.9979570990806943,5.67741935483871,6.4943231441048033,7.1187817258883248,6.2571428571428571,6.5797244094488185,6.3317307692307692,5.975828111011638,5.5780510879848624,6.279807692307692,5.9927623642943306,6.3271665043816938,6.1106427818756588,6.0360262008733621,6.3557978196233895,6.3355119825708064,6.8043704474505722,6.6475770925110131,6.0561914672216437,5.8827433628318584,6.094194961664841,6.031322505800464,6.2968197879858661,6.380065717415115,6.1406976744186048,6.8083427282976325],\"text\":[\"date: 2012-01-01<br />.value: 5.817455\",\"date: 2012-02-01<br />.value: 6.098468\",\"date: 2012-03-01<br />.value: 5.571242\",\"date: 2012-04-01<br />.value: 5.134986\",\"date: 2012-05-01<br />.value: 5.383729\",\"date: 2012-06-01<br />.value: 5.013689\",\"date: 2012-07-01<br />.value: 5.430490\",\"date: 2012-08-01<br />.value: 5.162144\",\"date: 2012-09-01<br />.value: 5.399216\",\"date: 2012-10-01<br />.value: 5.938729\",\"date: 2012-11-01<br />.value: 5.988122\",\"date: 2012-12-01<br />.value: 5.753106\",\"date: 2013-01-01<br />.value: 6.187185\",\"date: 2013-02-01<br />.value: 6.357326\",\"date: 2013-03-01<br />.value: 6.351243\",\"date: 2013-04-01<br />.value: 6.086139\",\"date: 2013-05-01<br />.value: 5.834848\",\"date: 2013-06-01<br />.value: 5.888436\",\"date: 2013-07-01<br />.value: 6.212538\",\"date: 2013-08-01<br />.value: 5.921963\",\"date: 2013-09-01<br />.value: 6.026756\",\"date: 2013-10-01<br />.value: 6.246835\",\"date: 2013-11-01<br />.value: 6.299910\",\"date: 2013-12-01<br />.value: 6.863285\",\"date: 2014-01-01<br />.value: 6.496573\",\"date: 2014-02-01<br />.value: 6.113411\",\"date: 2014-03-01<br />.value: 6.376178\",\"date: 2014-04-01<br />.value: 6.150284\",\"date: 2014-05-01<br />.value: 5.800331\",\"date: 2014-06-01<br />.value: 6.056588\",\"date: 2014-07-01<br />.value: 5.897478\",\"date: 2014-08-01<br />.value: 6.281763\",\"date: 2014-09-01<br />.value: 6.007092\",\"date: 2014-10-01<br />.value: 6.323423\",\"date: 2014-11-01<br />.value: 6.083246\",\"date: 2014-12-01<br />.value: 6.347976\",\"date: 2015-01-01<br />.value: 6.786689\",\"date: 2015-02-01<br />.value: 7.435818\",\"date: 2015-03-01<br />.value: 6.381894\",\"date: 2015-04-01<br />.value: 5.978131\",\"date: 2015-05-01<br />.value: 6.123108\",\"date: 2015-06-01<br />.value: 6.039143\",\"date: 2015-07-01<br />.value: 5.902887\",\"date: 2015-08-01<br />.value: 6.185841\",\"date: 2015-09-01<br />.value: 6.147974\",\"date: 2015-10-01<br />.value: 6.466848\",\"date: 2015-11-01<br />.value: 6.152905\",\"date: 2015-12-01<br />.value: 6.159027\",\"date: 2016-01-01<br />.value: 6.557746\",\"date: 2016-02-01<br />.value: 6.584694\",\"date: 2016-03-01<br />.value: 6.595516\",\"date: 2016-04-01<br />.value: 6.201605\",\"date: 2016-05-01<br />.value: 6.907664\",\"date: 2016-06-01<br />.value: 6.249031\",\"date: 2016-07-01<br />.value: 6.399168\",\"date: 2016-08-01<br />.value: 6.897281\",\"date: 2016-09-01<br />.value: 6.446254\",\"date: 2016-10-01<br />.value: 6.976948\",\"date: 2016-11-01<br />.value: 6.790948\",\"date: 2016-12-01<br />.value: 7.069903\",\"date: 2017-01-01<br />.value: 7.234142\",\"date: 2017-02-01<br />.value: 6.423241\",\"date: 2017-03-01<br />.value: 6.993500\",\"date: 2017-04-01<br />.value: 5.918835\",\"date: 2017-05-01<br />.value: 6.103746\",\"date: 2017-06-01<br />.value: 6.339623\",\"date: 2017-07-01<br />.value: 6.098232\",\"date: 2017-08-01<br />.value: 5.962551\",\"date: 2017-09-01<br />.value: 5.978153\",\"date: 2017-10-01<br />.value: 6.633300\",\"date: 2017-11-01<br />.value: 5.997957\",\"date: 2017-12-01<br />.value: 5.677419\",\"date: 2018-01-01<br />.value: 6.494323\",\"date: 2018-02-01<br />.value: 7.118782\",\"date: 2018-03-01<br />.value: 6.257143\",\"date: 2018-04-01<br />.value: 6.579724\",\"date: 2018-05-01<br />.value: 6.331731\",\"date: 2018-06-01<br />.value: 5.975828\",\"date: 2018-07-01<br />.value: 5.578051\",\"date: 2018-08-01<br />.value: 6.279808\",\"date: 2018-09-01<br />.value: 5.992762\",\"date: 2018-10-01<br />.value: 6.327167\",\"date: 2018-11-01<br />.value: 6.110643\",\"date: 2018-12-01<br />.value: 6.036026\",\"date: 2019-01-01<br />.value: 6.355798\",\"date: 2019-02-01<br />.value: 6.335512\",\"date: 2019-03-01<br />.value: 6.804370\",\"date: 2019-04-01<br />.value: 6.647577\",\"date: 2019-05-01<br />.value: 6.056191\",\"date: 2019-06-01<br />.value: 5.882743\",\"date: 2019-07-01<br />.value: 6.094195\",\"date: 2019-08-01<br />.value: 6.031323\",\"date: 2019-09-01<br />.value: 6.296820\",\"date: 2019-10-01<br />.value: 6.380066\",\"date: 2019-11-01<br />.value: 6.140698\",\"date: 2019-12-01<br />.value: 6.808343\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(44,62,80,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[15340,15371,15400,15431,15461,15492,15522,15553,15584,15614,15645,15675,15706,15737,15765,15796,15826,15857,15887,15918,15949,15979,16010,16040,16071,16102,16130,16161,16191,16222,16252,16283,16314,16344,16375,16405,16436,16467,16495,16526,16556,16587,16617,16648,16679,16709,16740,16770,16801,16832,16861,16892,16922,16953,16983,17014,17045,17075,17106,17136,17167,17198,17226,17257,17287,17318,17348,17379,17410,17440,17471,17501,17532,17563,17591,17622,17652,17683,17713,17744,17775,17805,17836,17866,17897,17928,17956,17987,18017,18048,18078,18109,18140,18170,18201,18231],\"y\":[5.4599252619187668,5.4984703187294848,5.5362808043503424,5.5733270294583095,5.6095793047303424,5.6450079408434117,5.6795832484744766,5.7132755383005023,5.7460551209984523,5.7778923072452901,5.8087574077179793,5.8386207330934852,5.8674453025688749,5.8952531705319284,5.9221032004456813,5.948054255773167,5.9731651999774167,5.9974948965214656,6.0211022088683483,6.044046000481095,6.06638513482274,6.0881784753563188,6.1094848855448625,6.1303632288514054,6.1498839231577316,6.1672695825222128,6.1828073646727626,6.1967844273372963,6.2094879282437256,6.2212050251199686,6.2322228756939344,6.2428286376935409,6.253309468846699,6.2639525268813268,6.2750449695253341,6.2868739545066372,6.2998845254123257,6.3141009236400363,6.3291791036335034,6.3447750198364661,6.3605446266926586,6.3761438786458182,6.3912287301396811,6.4054551356179807,6.418479049524457,6.4299564263028435,6.4395432203968763,6.4468953862502936,6.4529381056683679,6.4587538836833973,6.4642346595796489,6.4692723726413979,6.4737589621529112,6.4775863673984624,6.4806465276623202,6.4828313822287544,6.4840328703820376,6.4841429314064403,6.4830535045862296,6.4806565292056799,6.4763170797907357,6.4697383946542448,6.4613196587608321,6.451460057075125,6.4405587745617447,6.4290149961853205,6.417227906910477,6.4055966917018363,6.3945205355240269,6.3843986233416725,6.375630140119398,6.3686142708218298,6.3623101281572181,6.355480326791219,6.3482293046245655,6.340661499557994,6.332881349492232,6.3249932923280197,6.3171017659660889,6.309311208307169,6.3017260572519991,6.2944507507013103,6.2875897265558347,6.2812474227163086,6.275401023398695,6.2699347180288401,6.26481345232229,6.2600021719946009,6.2554658227613196,6.2511693503380004,6.2470777004401938,6.2431558187834524,6.2393686510833248,6.2356811430553636,6.2320582404151192,6.2284648888781442],\"text\":[\"date: 2012-01-01<br />.value_smooth: 5.459925\",\"date: 2012-02-01<br />.value_smooth: 5.498470\",\"date: 2012-03-01<br />.value_smooth: 5.536281\",\"date: 2012-04-01<br />.value_smooth: 5.573327\",\"date: 2012-05-01<br />.value_smooth: 5.609579\",\"date: 2012-06-01<br />.value_smooth: 5.645008\",\"date: 2012-07-01<br />.value_smooth: 5.679583\",\"date: 2012-08-01<br />.value_smooth: 5.713276\",\"date: 2012-09-01<br />.value_smooth: 5.746055\",\"date: 2012-10-01<br />.value_smooth: 5.777892\",\"date: 2012-11-01<br />.value_smooth: 5.808757\",\"date: 2012-12-01<br />.value_smooth: 5.838621\",\"date: 2013-01-01<br />.value_smooth: 5.867445\",\"date: 2013-02-01<br />.value_smooth: 5.895253\",\"date: 2013-03-01<br />.value_smooth: 5.922103\",\"date: 2013-04-01<br />.value_smooth: 5.948054\",\"date: 2013-05-01<br />.value_smooth: 5.973165\",\"date: 2013-06-01<br />.value_smooth: 5.997495\",\"date: 2013-07-01<br />.value_smooth: 6.021102\",\"date: 2013-08-01<br />.value_smooth: 6.044046\",\"date: 2013-09-01<br />.value_smooth: 6.066385\",\"date: 2013-10-01<br />.value_smooth: 6.088178\",\"date: 2013-11-01<br />.value_smooth: 6.109485\",\"date: 2013-12-01<br />.value_smooth: 6.130363\",\"date: 2014-01-01<br />.value_smooth: 6.149884\",\"date: 2014-02-01<br />.value_smooth: 6.167270\",\"date: 2014-03-01<br />.value_smooth: 6.182807\",\"date: 2014-04-01<br />.value_smooth: 6.196784\",\"date: 2014-05-01<br />.value_smooth: 6.209488\",\"date: 2014-06-01<br />.value_smooth: 6.221205\",\"date: 2014-07-01<br />.value_smooth: 6.232223\",\"date: 2014-08-01<br />.value_smooth: 6.242829\",\"date: 2014-09-01<br />.value_smooth: 6.253309\",\"date: 2014-10-01<br />.value_smooth: 6.263953\",\"date: 2014-11-01<br />.value_smooth: 6.275045\",\"date: 2014-12-01<br />.value_smooth: 6.286874\",\"date: 2015-01-01<br />.value_smooth: 6.299885\",\"date: 2015-02-01<br />.value_smooth: 6.314101\",\"date: 2015-03-01<br />.value_smooth: 6.329179\",\"date: 2015-04-01<br />.value_smooth: 6.344775\",\"date: 2015-05-01<br />.value_smooth: 6.360545\",\"date: 2015-06-01<br />.value_smooth: 6.376144\",\"date: 2015-07-01<br />.value_smooth: 6.391229\",\"date: 2015-08-01<br />.value_smooth: 6.405455\",\"date: 2015-09-01<br />.value_smooth: 6.418479\",\"date: 2015-10-01<br />.value_smooth: 6.429956\",\"date: 2015-11-01<br />.value_smooth: 6.439543\",\"date: 2015-12-01<br />.value_smooth: 6.446895\",\"date: 2016-01-01<br />.value_smooth: 6.452938\",\"date: 2016-02-01<br />.value_smooth: 6.458754\",\"date: 2016-03-01<br />.value_smooth: 6.464235\",\"date: 2016-04-01<br />.value_smooth: 6.469272\",\"date: 2016-05-01<br />.value_smooth: 6.473759\",\"date: 2016-06-01<br />.value_smooth: 6.477586\",\"date: 2016-07-01<br />.value_smooth: 6.480647\",\"date: 2016-08-01<br />.value_smooth: 6.482831\",\"date: 2016-09-01<br />.value_smooth: 6.484033\",\"date: 2016-10-01<br />.value_smooth: 6.484143\",\"date: 2016-11-01<br />.value_smooth: 6.483054\",\"date: 2016-12-01<br />.value_smooth: 6.480657\",\"date: 2017-01-01<br />.value_smooth: 6.476317\",\"date: 2017-02-01<br />.value_smooth: 6.469738\",\"date: 2017-03-01<br />.value_smooth: 6.461320\",\"date: 2017-04-01<br />.value_smooth: 6.451460\",\"date: 2017-05-01<br />.value_smooth: 6.440559\",\"date: 2017-06-01<br />.value_smooth: 6.429015\",\"date: 2017-07-01<br />.value_smooth: 6.417228\",\"date: 2017-08-01<br />.value_smooth: 6.405597\",\"date: 2017-09-01<br />.value_smooth: 6.394521\",\"date: 2017-10-01<br />.value_smooth: 6.384399\",\"date: 2017-11-01<br />.value_smooth: 6.375630\",\"date: 2017-12-01<br />.value_smooth: 6.368614\",\"date: 2018-01-01<br />.value_smooth: 6.362310\",\"date: 2018-02-01<br />.value_smooth: 6.355480\",\"date: 2018-03-01<br />.value_smooth: 6.348229\",\"date: 2018-04-01<br />.value_smooth: 6.340661\",\"date: 2018-05-01<br />.value_smooth: 6.332881\",\"date: 2018-06-01<br />.value_smooth: 6.324993\",\"date: 2018-07-01<br />.value_smooth: 6.317102\",\"date: 2018-08-01<br />.value_smooth: 6.309311\",\"date: 2018-09-01<br />.value_smooth: 6.301726\",\"date: 2018-10-01<br />.value_smooth: 6.294451\",\"date: 2018-11-01<br />.value_smooth: 6.287590\",\"date: 2018-12-01<br />.value_smooth: 6.281247\",\"date: 2019-01-01<br />.value_smooth: 6.275401\",\"date: 2019-02-01<br />.value_smooth: 6.269935\",\"date: 2019-03-01<br />.value_smooth: 6.264813\",\"date: 2019-04-01<br />.value_smooth: 6.260002\",\"date: 2019-05-01<br />.value_smooth: 6.255466\",\"date: 2019-06-01<br />.value_smooth: 6.251169\",\"date: 2019-07-01<br />.value_smooth: 6.247078\",\"date: 2019-08-01<br />.value_smooth: 6.243156\",\"date: 2019-09-01<br />.value_smooth: 6.239369\",\"date: 2019-10-01<br />.value_smooth: 6.235681\",\"date: 2019-11-01<br />.value_smooth: 6.232058\",\"date: 2019-12-01<br />.value_smooth: 6.228465\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.7795275590551185,\"color\":\"rgba(51,102,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":25.570776255707766,\"l\":28.493150684931514},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Average Length of Stay Plot\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[15195.450000000001,18375.549999999999],\"tickmode\":\"array\",\"ticktext\":[\"2012\",\"2014\",\"2016\",\"2018\",\"2020\"],\"tickvals\":[15340,16071,16801,17532,18262],\"categoryorder\":\"array\",\"categoryarray\":[\"2012\",\"2014\",\"2016\",\"2018\",\"2020\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[4.8925823085781106,7.5569242576118283],\"tickmode\":\"array\",\"ticktext\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\",\"7.0\",\"7.5\"],\"tickvals\":[5,5.5,6,6.5,7,7.5],\"categoryorder\":\"array\",\"categoryarray\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\",\"7.0\",\"7.5\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"5ea446181083\":{\"x\":{},\"y\":{},\"type\":\"scatter\"},\"5ea41c9f4b7b\":{\"x\":{},\"y\":{}}},\"cur_data\":\"5ea446181083\",\"visdat\":{\"5ea446181083\":[\"function (y) \",\"x\"],\"5ea41c9f4b7b\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nFrom here, we see that the alos is increasing over time. So, is this a bad sign? This could be due to a number of factors, such as an increase in the number of patients with complex conditions or an increase in the number of patients with complications. It could also be due to a lack of resources or staff, which can lead to delays in care and longer lengths of stay.\n\nThis is why we want to see the median excess length of stay. Let's calculate that now.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tbl <- ts_signature_tbl(df, .date_col = visit_end_date)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\npad applied on the interval: day\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(df_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 105,577\nColumns: 31\n$ visit_id       <chr> \"1283065398\", \"1171004549\", \"1331016562\", \"1970894633\",…\n$ length_of_stay <dbl> 6, 1, 3, 2, 3, 5, 21, 4, 2, 4, 1, 9, 1, 2, 2, 1, 9, 1, …\n$ visit_end_date <date> 2012-01-01, 2012-01-01, 2012-01-01, 2012-01-01, 2012-0…\n$ index.num      <dbl> 1325376000, 1325376000, 1325376000, 1325376000, 1325376…\n$ diff           <dbl> NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86400,…\n$ year           <int> 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2…\n$ year.iso       <int> 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2…\n$ half           <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ quarter        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ month          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ month.xts      <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ month.lbl      <ord> January, January, January, January, January, January, J…\n$ day            <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2…\n$ hour           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ minute         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ second         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ hour12         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ am.pm          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ wday           <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2…\n$ wday.xts       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1…\n$ wday.lbl       <ord> Sunday, Sunday, Sunday, Sunday, Sunday, Sunday, Sunday,…\n$ mday           <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2…\n$ qday           <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2…\n$ yday           <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2…\n$ mweek          <int> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1…\n$ week           <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ week.iso       <int> 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,…\n$ week2          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ week3          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ week4          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ mday7          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(df_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"visit_id\"       \"length_of_stay\" \"visit_end_date\" \"index.num\"     \n [5] \"diff\"           \"year\"           \"year.iso\"       \"half\"          \n [9] \"quarter\"        \"month\"          \"month.xts\"      \"month.lbl\"     \n[13] \"day\"            \"hour\"           \"minute\"         \"second\"        \n[17] \"hour12\"         \"am.pm\"          \"wday\"           \"wday.xts\"      \n[21] \"wday.lbl\"       \"mday\"           \"qday\"           \"yday\"          \n[25] \"mweek\"          \"week\"           \"week.iso\"       \"week2\"         \n[29] \"week3\"          \"week4\"          \"mday7\"         \n```\n\n\n:::\n:::\n\n\nNow that we have our table ready for calculation, let's get it done!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_median_excess_plt(\n  .data = df_tbl, \n  .date_col = visit_end_date,\n  .value_col = length_of_stay,\n  .x_axis = week,\n  .ggplot_group_var = year,\n  .years_back = 1\n) +\n  labs(\n    x = \"Week of the Year\",\n    y = \"Median Excess Length of Stay (Days)\",\n    title = \"Median Excess Length of Stay by Week\",\n    caption = \"Data Source: Inpatient Dataset; Red Line Indicates Latest Year\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nSo we can see from here that even though the ALOS is increasing, the median excess length of stay is decreasing. This is a good sign as it indicates that the hospital is improving its efficiency and reducing the number of patients who are staying longer than expected.\n\nLet's move onto another example.\n\n## Example 2: Gartner Magic Chart\n\nIn this example, we will create a Gartner Magic Chart to visualize the performance of different hospitals in terms of their length of stay and readmission rates. The Gartner Magic Chart is a popular tool used by healthcare organizations to compare the performance of different hospitals and identify areas for improvement.\n\nWe will create a simulated dataset of 100 hospitals to achieve this and we will want it scaled, think of this like taking a look at the performance of the excess alos and excess readmit rates:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\ngartner_tbl <- tibble(\n  hospital_id = 1:100,\n  x = scale(rnorm(100, mean = 5, sd = 2)),\n  y = scale(rnorm(100, mean = 0.1, sd = 0.05))\n)\n\nsummary(gartner_tbl[,-1])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         x.V1                y.V1        \n Min.   :-2.6287610   Min.   :-2.012128  \n 1st Qu.:-0.6400635   1st Qu.:-0.717236  \n Median :-0.0313860   Median :-0.122321  \n Mean   : 0.0000000   Mean   : 0.000000  \n 3rd Qu.: 0.6588549   3rd Qu.: 0.595034  \n Max.   : 2.2972071   Max.   : 3.462909  \n```\n\n\n:::\n:::\n\n\nNow that we have our simulated dataset, let's create the Gartner Magic Chart. Unfortunately at this point the columns must be named x and y, but this will be updated in the future to pass whatever column you like.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngartner_magic_chart_plt(\n  .data = gartner_tbl,\n  .x_col = x,\n  .y_col = y,\n  .x_lab = \"ALOS\",\n  .y_lab = \"ARR\",\n  .point_size = NULL,\n  .plt_title = \"Gartner Magic Chart - Scaled Data\",\n  .tr_lbl = \"High RA-LOS\",\n  .tl_lbl = \"High RA\",\n  .bl_lbl = \"Leader\",\n  .br_lbl = \"High LOS\"\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Example 3: Length Of Stay and Readmit Index with Variance\n\nSometimes we want to see how the variance of the length of stay and readmission rates are changing over the length of stay of a patient visit. This can help us identify trends and patterns that may be affecting the performance of hospitals. What this means is that maybe we would rather have a longer length stay (a variance, longer than expected) if it helps to keep the reamission rate down. A provider/hospital would rather have someone in the hospital longer than see them get readmitted because they were discharged prematurely.\n\nLet's make our data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tbl <- tibble(\n  \"alos\"                 = runif(186, 1, 20)\n  , \"elos\"               = runif(186, 1, 17)\n  , \"readmit_rate\"       = runif(186, 0, .25)\n  , \"readmit_rate_bench\" = runif(186, 0, .2)\n)\n\nsummary(data_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      alos             elos         readmit_rate       readmit_rate_bench\n Min.   : 1.009   Min.   : 1.019   Min.   :0.0009741   Min.   :0.00140   \n 1st Qu.: 6.224   1st Qu.: 4.785   1st Qu.:0.0647280   1st Qu.:0.05446   \n Median :10.518   Median : 9.277   Median :0.1273747   Median :0.09597   \n Mean   :10.553   Mean   : 8.979   Mean   :0.1230823   Mean   :0.09830   \n 3rd Qu.:15.349   3rd Qu.:13.094   3rd Qu.:0.1853718   3rd Qu.:0.14387   \n Max.   :19.936   Max.   :16.919   Max.   :0.2479363   Max.   :0.19852   \n```\n\n\n:::\n:::\n\n\nLet's take a look at the data quickly:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tbl |>\n  pivot_longer(\n    cols = c(alos, elos, readmit_rate, readmit_rate_bench), \n    names_to = \"metric\", values_to = \"value\"\n    ) |>\n  mutate(metric_group = ifelse(\n    metric %in% c(\"alos\", \"elos\"), \"Length of Stay\", \"Readmit Rate\"\n    )\n  ) |>\n  ggplot(aes(x = value, color = metric)) +\n  facet_wrap(~ metric_group, scales = \"free\") +\n  geom_density() +\n  theme_minimal() +\n  labs(\n    x = \"Value\",\n    y = \"Density\",\n    title = \"Density Plot of Length of Stay and Readmit Rate\",\n    color = \"Metric\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nNow let's see how the variance of the length of stay and readmission rates are changing over the length of stay of a patient visit:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlos_ra_index_summary_tbl(\n  .data = data_tbl\n  , .max_los       = 15\n  , .alos_col      = alos\n  , .elos_col      = elos\n  , .readmit_rate  = readmit_rate\n  , .readmit_bench = readmit_rate_bench\n) %>%\n  los_ra_index_plt()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nFrom here we can see that the variance of the length of stay and readmission rates are decreasing as the length of stay increases. This is a good sign as it indicates that the hospital is able to provide more consistent care to patients with longer stays, which may help to reduce the risk of readmission. Even though resource utilization may increase, the hospital is able to provide better care to patients with longer stays, which may help to reduce the risk of readmission in this example.\n\n## Example 4: Service Line Augmentation\n\nIn this example, we will agument a service line to a patient visit. This can help us create groups of patient visits in a manner that is more managable then say at the DX, DRG or MDC levels. This can help us identify trends and patterns that may be affecting the performance of hospitals.\n\nLet's see how it works:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(\n  dx_col = \"F10.10\",\n  px_col = NA,\n  drg_col = \"896\"\n)\n\nservice_line_augment(\n  .data = df,\n  .dx_col = dx_col,\n  .px_col = px_col,\n  .drg_col = drg_col\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  dx_col px_col drg_col service_line \n  <chr>  <lgl>  <chr>   <chr>        \n1 F10.10 NA     896     alcohol_abuse\n```\n\n\n:::\n:::\n\n\nWe see here that a patient discharged with a diagnosis of F10.10 and DRG 896 would be classified as a patient visit for the service line of \"alcohol_abuse\". A term that is more generic then F10.10 which is \"Alcohol Abuse, uncomplicated\". This can help us identify trends and patterns that may be affecting the performance of hospitals.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}